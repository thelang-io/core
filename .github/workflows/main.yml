on:
  push:
    branches: [main]
    paths: [".github/workflows/**", "src/**", "CMakeLists.txt"]

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p build
      - run: (cd build && cmake .. -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON)
      - run: cmake --build build
      - run: (cd build && ctest --output-on-failure)
  deploy:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p build
      - run: (cd build && cmake .. -DCMAKE_BUILD_TYPE=Release)
      - run: cmake --build build
      - id: ip
        uses: haythem/public-ip@v1.2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_EC2_SG }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
      - run: mkdir -p ~/.ssh
      - run: ssh-agent -a $SSH_AUTH_SOCK
      - run: ssh-add - <<< "${{ secrets.AWS_EC2_KEY }}"
      - run: scp -o StrictHostKeyChecking=no build/the "${{ secrets.AWS_EC2_URL }}:the@0.2.0"
      - if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_EC2_SG }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
