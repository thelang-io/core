on:
  push:
    branches: [main]

env:
  REMOTE_KEY: ${{ secrets.REMOTE_KEY }}
  REMOTE_URI: ${{ secrets.REMOTE_URI }}

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04, ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
      - if: runner.os == 'Linux'
        run: sudo apt install -y valgrind
      - run: mkdir -p build
      - run: (cd build && cmake .. -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON)
      - run: cmake --build build
      - if: runner.os == 'macOS'
        run: (cd build && ctest --output-on-failure)
      - if: runner.os == 'Linux'
        run: |
          (
            cd build
            if ! ctest -T memcheck --output-on-failure; then
              find Testing/Temporary -name "MemoryChecker.*.log" -exec cat {} +
              exit 1
            fi
          )
  deploy:
    needs: [build-and-test]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p build
      - run: (cd build && cmake .. -DCMAKE_BUILD_TYPE=Release)
      - run: cmake --build build
      - run: printf "%s" "$REMOTE_KEY" > key.pem
      - run: scp -i key.pem build/the-core "$REMOTE_URI:the"
