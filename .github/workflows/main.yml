on:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04, ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
      - if: runner.os == 'Linux'
        run: sudo apt install -y valgrind
      - run: mkdir -p build
      - run: (cd build && cmake .. -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON)
      - run: cmake --build build
      - if: runner.os == 'macOS'
        run: (cd build && ctest --output-on-failure)
      - if: runner.os == 'Linux'
        run: |
          (
            cd build
            if ! ctest -T memcheck --output-on-failure; then
              find Testing/Temporary -name "MemoryChecker.*.log" -exec cat {} +
              exit 1
            fi
          )
  deploy:
    needs: [build-and-test]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p build
      - run: (cd build && cmake .. -DCMAKE_BUILD_TYPE=Release)
      - run: cmake --build build
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}
      - id: ip
        uses: haythem/public-ip@v1.2
      - run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_EC2_SG }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_KEY }}
          passphrase: ${{ secrets.AWS_EC2_PASSPHRASE }}
          source: build/the-core
          target: the
          strip_components: 2
      - if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_EC2_SG }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
