name: Test

on:
  push:
    paths-ignore:
      - "**.md"
      - "**.yml"
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.yml"

concurrency:
  cancel-in-progress: true
  group: test-${{ github.event.pull_request.number || github.sha }}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12, ubuntu-20.04, ubuntu-22.04, windows-2022]
    steps:
      - uses: actions/checkout@v2
      - if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build valgrind
          echo "ls /usr/"
          ls /usr/
          echo "ls /usr/bin"
          ls /usr/bin
          echo "ls /usr/include"
          ls /usr/include
          echo "ls /usr/local/"
          ls /usr/local/
          echo "ls /usr/local/bin"
          ls /usr/local/bin/
          echo "ls /usr/local/include"
          ls /usr/local/include/
          echo "OPENSSL_ROOT_DIR=/usr/local/openssl@1.1" >> $GITHUB_ENV
      - if: runner.os == 'Windows'
        run: |
          choco install openssl --no-progress
          echo "OPENSSL_ROOT_DIR=C:/Program Files/OpenSSL-Win64" >> $env:GITHUB_ENV
      - if: runner.os == 'macOS'
        run: |
          brew install ninja
          echo "OPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1" >> $GITHUB_ENV
      - run: openssl version -d
      - run: mkdir -p build
      - run: |
          echo "OPENSSL_ROOT_DIR: $OPENSSL_ROOT_DIR"
          clang test2134.c -o test2134.out -L"$OPENSSL_ROOT_DIR/lib" -I"$OPENSSL_ROOT_DIR/include" -lssl
      - if: runner.os == 'Linux'
        run: cmake . -B ./build -G "Ninja" -D BUILD_TESTS=ON -D TEST_CODEGEN_MEMCHECK=ON
      - if: runner.os == 'Windows'
        run: cmake . -B ./build -G "Visual Studio 17 2022" -D BUILD_TESTS=ON
      - if: runner.os == 'macOS'
        run: cmake . -B ./build -G "Ninja" -D BUILD_TESTS=ON
      - run: cmake --build build
      - run: ctest --output-on-failure --test-dir build
