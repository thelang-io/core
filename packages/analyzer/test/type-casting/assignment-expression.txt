main {
  mut a: bool | int
  mut b: bool | int

  c := (a = (b is bool)) ? a.str() : b.str()
  d := (a = !(b is bool)) ? b.str() : a.str()
  e := (b = true) ? b : a
}
===== out =====
MainDeclaration()
  VariableDeclaration(name=a mutable=true constant=false type=bool | int context:varType=bool | int)
  VariableDeclaration(name=b mutable=true constant=false type=bool | int context:varType=bool | int)
  VariableDeclaration(name=c mutable=false constant=false context:varType=str)
    ConditionalExpression(initial=str)
      ParenthesizedExpression(initial=bool)
        AssignmentExpression(initial=bool operator==)
          Identifier(initial=bool | int name=a)
          ParenthesizedExpression(initial=bool target=bool | int)
            IsExpression(initial=bool target=bool | int is=bool extra:type=bool)
              Identifier(initial=bool | int name=b)
      CallExpression(initial=str extra:asynchronous=false extra:returnType=str)
        PropertyAccessExpression(initial=(self: ref bool) -> str name=str)
          Identifier(initial=bool | int target=bool name=a)
      CallExpression(initial=str extra:asynchronous=false extra:returnType=str)
        PropertyAccessExpression(initial=(self: ref int) -> str name=str)
          Identifier(initial=bool | int target=int name=b)
  VariableDeclaration(name=d mutable=false constant=false context:varType=str)
    ConditionalExpression(initial=str)
      ParenthesizedExpression(initial=bool)
        AssignmentExpression(initial=bool operator==)
          Identifier(initial=bool | int name=a)
          UnaryExpression(initial=bool target=bool | int operator=! prefix=true)
            ParenthesizedExpression(initial=bool)
              IsExpression(initial=bool is=bool extra:type=bool)
                Identifier(initial=bool | int name=b)
      CallExpression(initial=str extra:asynchronous=false extra:returnType=str)
        PropertyAccessExpression(initial=(self: ref int) -> str name=str)
          Identifier(initial=bool | int target=int name=b)
      CallExpression(initial=str extra:asynchronous=false extra:returnType=str)
        PropertyAccessExpression(initial=(self: ref bool) -> str name=str)
          Identifier(initial=bool | int target=bool name=a)
  VariableDeclaration(name=e mutable=false constant=false context:varType=bool)
    ConditionalExpression(initial=bool)
      ParenthesizedExpression(initial=bool)
        AssignmentExpression(initial=bool operator==)
          Identifier(initial=bool | int name=b)
          BooleanLiteral(initial=bool target=bool | int value=true)
      Identifier(initial=bool | int target=bool name=b)
      Identifier(initial=bool | int target=bool name=a)
