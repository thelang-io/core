main {
  mut a: int | str
  b: int | str

  c := (a is int) ? a : 2
  d := ((a = 10) is int) ? a : 3
  e := ((a = b) is int) ? "test" : a

  f: u32 | str
  g := (f is str) ? 4 : f
  h := (f is u32) ? f : 4

  m: bool | int | str

  if m is int {
    p := m + 3
  } elif m is bool {
    p := m == true
  } else {
    p := m + "test"
  }

  n: any = 1
  if n is int {
    "int " + n.str();
  }
}
===== out =====
MainDeclaration()
  VariableDeclaration(name=a mutable=true constant=false type=int | str context:varType=int | str)
  VariableDeclaration(name=b mutable=false constant=false type=int | str context:varType=int | str)
  VariableDeclaration(name=c mutable=false constant=false context:varType=int)
    ConditionalExpression(initial=int)
      ParenthesizedExpression(initial=bool)
        IsExpression(initial=bool is=int extra:type=int)
          Identifier(initial=int | str name=a)
      Identifier(initial=int | str target=int name=a)
      IntegerLiteral(initial=int value=2)
  VariableDeclaration(name=d mutable=false constant=false context:varType=int)
    ConditionalExpression(initial=int)
      ParenthesizedExpression(initial=bool)
        IsExpression(initial=bool is=int extra:type=int)
          ParenthesizedExpression(initial=int)
            AssignmentExpression(initial=int operator==)
              Identifier(initial=int | str name=a)
              IntegerLiteral(initial=int target=int | str value=10)
      Identifier(initial=int | str target=int name=a)
      IntegerLiteral(initial=int value=3)
  VariableDeclaration(name=e mutable=false constant=false context:varType=str)
    ConditionalExpression(initial=str)
      ParenthesizedExpression(initial=bool)
        IsExpression(initial=bool is=int extra:type=int)
          ParenthesizedExpression(initial=int | str)
            AssignmentExpression(initial=int | str operator==)
              Identifier(initial=int | str name=a)
              Identifier(initial=int | str name=b)
      StringLiteral(initial=str value=test)
      Identifier(initial=int | str target=str name=a)
  VariableDeclaration(name=f mutable=false constant=false type=u32 | str context:varType=u32 | str)
  VariableDeclaration(name=g mutable=false constant=false context:varType=u32)
    ConditionalExpression(initial=u32)
      ParenthesizedExpression(initial=bool)
        IsExpression(initial=bool is=str extra:type=str)
          Identifier(initial=u32 | str name=f)
      IntegerLiteral(initial=int target=u32 value=4)
      Identifier(initial=u32 | str target=u32 name=f)
  VariableDeclaration(name=h mutable=false constant=false context:varType=u32)
    ConditionalExpression(initial=u32)
      ParenthesizedExpression(initial=bool)
        IsExpression(initial=bool is=u32 extra:type=u32)
          Identifier(initial=u32 | str name=f)
      Identifier(initial=u32 | str target=u32 name=f)
      IntegerLiteral(initial=int target=u32 value=4)
  VariableDeclaration(name=m mutable=false constant=false type=bool | int | str context:varType=bool | int | str)
  IfStatement()
    IsExpression(initial=bool is=int extra:type=int)
      Identifier(initial=bool | int | str name=m)
    VariableDeclaration(name=p mutable=false constant=false context:varType=int)
      BinaryExpression(initial=int operator=+)
        Identifier(initial=bool | int | str target=int name=m)
        IntegerLiteral(initial=int value=3)
    IfStatement()
      IsExpression(initial=bool is=bool extra:type=bool)
        Identifier(initial=bool | int | str target=bool | str name=m)
      VariableDeclaration(name=p mutable=false constant=false context:varType=bool)
        BinaryExpression(initial=bool operator===)
          Identifier(initial=bool | int | str target=bool name=m)
          BooleanLiteral(initial=bool value=true)
      VariableDeclaration(name=p mutable=false constant=false context:varType=str)
        BinaryExpression(initial=str operator=+)
          Identifier(initial=bool | int | str target=str name=m)
          StringLiteral(initial=str value=test)
