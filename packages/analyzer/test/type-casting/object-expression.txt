obj Cond {
  a: bool
  empty: bool
}

main {
  mut a: bool | int
  b := Cond{a: a = true}.empty ? a : false
}
===== out =====
ObjectDeclaration(name=Cond context:selfType=Cond)
  ObjectDeclarationProperty(name=a mutable=false constant=false type=bool)
  ObjectDeclarationProperty(name=empty mutable=false constant=false type=bool)
MainDeclaration()
  VariableDeclaration(name=a mutable=true constant=false type=bool | int context:varType=bool | int)
  VariableDeclaration(name=b mutable=false constant=false context:varType=bool)
    ConditionalExpression(initial=bool)
      PropertyAccessExpression(initial=bool name=empty)
        ObjectExpression(initial=Cond id=Cond)
          ObjectExpressionProperty(name=a)
            AssignmentExpression(initial=bool operator==)
              Identifier(initial=bool | int name=a)
              BooleanLiteral(initial=bool target=bool | int value=true)
      Identifier(initial=bool | int target=bool name=a)
      BooleanLiteral(initial=bool value=false)
