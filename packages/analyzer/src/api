import TypeParameter, TypeProperty from "./type"
import TypeMap from "./type-map"
import VarMap from "./var-map"

export fn TypeMap_globals (tm: ref TypeMap) {
  tm.createObject("Buffer", [
    TypeProperty{name: "empty", t: tm.get("bool"), mutable: false}
    TypeProperty{name: "len", t: tm.get("int"), mutable: false}
  ])
  tm.createObject("Error", [
    TypeProperty{name: "message", t: tm.get("str"), mutable: false}
    TypeProperty{name: "stack", t: tm.get("str"), mutable: false}
  ])
}

export fn VarMap_globals (vm: ref VarMap, tm: ref TypeMap) {
  vm.add("NewError", tm.createFunction(false, [
    TypeParameter{name: "message", t: tm.get("str"), mutable: false, required: true, variadic: false}
  ], tm.get("Error")), false)
  vm.add("print", tm.createFunction(false, [
    TypeParameter{name: "items", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
    TypeParameter{name: "separator", t: tm.get("str"), mutable: false, required: false, variadic: false}
    TypeParameter{name: "terminator", t: tm.get("str"), mutable: false, required: false, variadic: false}
    TypeParameter{name: "to", t: tm.get("str"), mutable: false, required: false, variadic: false}
  ], tm.get("void")), false)
}

export fn TypeMap_std (tm: ref TypeMap) {
  tm.createObject("aiocb", [
    TypeProperty{name: "aio_fildes", t: tm.get("int"), mutable: true}
    TypeProperty{name: "aio_offset", t: tm.get("off_t"), mutable: true}
    TypeProperty{name: "aio_buf", t: tm.createReference(tm.get("any")), mutable: true}
    TypeProperty{name: "aio_nbytes", t: tm.get("usize"), mutable: true}
    TypeProperty{name: "aio_reqprio", t: tm.get("int"), mutable: true}
    TypeProperty{name: "aio_sigevent", t: tm.get("sigevent"), mutable: true}
    TypeProperty{name: "aio_lio_opcode", t: tm.get("int"), mutable: true}
  ])
  tm.createObject("DIR", [])
  tm.createObject("dirent", [
    TypeProperty{name: "d_ino", t: tm.get("ino_t"), mutable: true}
    TypeProperty{name: "d_name", t: tm.createArray(tm.get("char")), mutable: true}
  ])
  tm.createObject("flock", [
    TypeProperty{name: "l_type", t: tm.get("i16"), mutable: true}
    TypeProperty{name: "l_whence", t: tm.get("i16"), mutable: true}
    TypeProperty{name: "l_start", t: tm.get("off_t"), mutable: true}
    TypeProperty{name: "l_len", t: tm.get("off_t"), mutable: true}
    TypeProperty{name: "l_pid", t: tm.get("pid_t"), mutable: true}
  ])
  tm.createObject("fenv_t", [])
  tm.createObject("fexcept_t", [])
  tm.createObject("glob_t", [
    TypeProperty{name: "gl_pathc", t: tm.get("usize"), mutable: true}
    TypeProperty{name: "gl_pathv", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true}
    TypeProperty{name: "gl_offs", t: tm.get("usize"), mutable: true}
  ])
  tm.createObject("group", [
    TypeProperty{name: "gr_name", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "gr_gid", t: tm.get("gid_t"), mutable: true}
    TypeProperty{name: "gr_mem", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true}
  ])
  tm.createObject("imaxdiv_t", [
    TypeProperty{name: "quot", t: tm.get("intmax_t"), mutable: true}
    TypeProperty{name: "rem", t: tm.get("intmax_t"), mutable: true}
  ])
  tm.createObject("locale_t", [])
  tm.createObject("lconv", [
    TypeProperty{name: "currency_symbol", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "decimal_point", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "frac_digits", t: tm.get("char"), mutable: true}
    TypeProperty{name: "grouping", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "int_curr_symbol", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "int_frac_digits", t: tm.get("char"), mutable: true}
    TypeProperty{name: "int_n_cs_precedes", t: tm.get("char"), mutable: true}
    TypeProperty{name: "int_n_sep_by_space", t: tm.get("char"), mutable: true}
    TypeProperty{name: "int_n_sign_posn", t: tm.get("char"), mutable: true}
    TypeProperty{name: "int_p_cs_precedes", t: tm.get("char"), mutable: true}
    TypeProperty{name: "int_p_sep_by_space", t: tm.get("char"), mutable: true}
    TypeProperty{name: "int_p_sign_posn", t: tm.get("char"), mutable: true}
    TypeProperty{name: "mon_decimal_point", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "mon_grouping", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "mon_thousands_sep", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "negative_sign", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "n_cs_precedes", t: tm.get("char"), mutable: true}
    TypeProperty{name: "n_sep_by_space", t: tm.get("char"), mutable: true}
    TypeProperty{name: "n_sign_posn", t: tm.get("char"), mutable: true}
    TypeProperty{name: "positive_sign", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "p_cs_precedes", t: tm.get("char"), mutable: true}
    TypeProperty{name: "p_sep_by_space", t: tm.get("char"), mutable: true}
    TypeProperty{name: "p_sign_posn", t: tm.get("char"), mutable: true}
    TypeProperty{name: "thousands_sep", t: tm.createArray(tm.get("char")), mutable: true}
  ])
  tm.createObject("float_t", [])
  tm.createObject("double_t", [])
  tm.createObject("mqd_t", [])
  tm.createObject("mq_attr", [
    TypeProperty{name: "mq_flags", t: tm.get("i64"), mutable: true}
    TypeProperty{name: "mq_maxmsg", t: tm.get("i64"), mutable: true}
    TypeProperty{name: "mq_msgsize", t: tm.get("i64"), mutable: true}
    TypeProperty{name: "mq_curmsgs", t: tm.get("i64"), mutable: true}
  ])
  tm.createObject("DBM", [])
  tm.createObject("datum", [
    TypeProperty{name: "dptr", t: tm.createReference(tm.get("any")), mutable: true}
    TypeProperty{name: "dsize", t: tm.get("usize"), mutable: true}
  ])
  tm.createObject("if_nameindex_t", [
    TypeProperty{name: "if_index", t: tm.get("u32"), mutable: true}
    TypeProperty{name: "if_name", t: tm.createArray(tm.get("char")), mutable: true}
  ])
  tm.createObject("hostent", [
    TypeProperty{name: "h_name", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "h_aliases", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true}
    TypeProperty{name: "h_addrtype", t: tm.get("int"), mutable: true}
    TypeProperty{name: "h_length", t: tm.get("int"), mutable: true}
    TypeProperty{name: "h_addr_list", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true}
  ])
  tm.createObject("netent", [
    TypeProperty{name: "n_name", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "n_aliases", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true}
    TypeProperty{name: "n_addrtype", t: tm.get("int"), mutable: true}
    TypeProperty{name: "n_net", t: tm.get("u32"), mutable: true}
  ])
  tm.createObject("protoent", [
    TypeProperty{name: "p_name", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "p_aliases", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true}
    TypeProperty{name: "p_proto", t: tm.get("int"), mutable: true}
  ])
  tm.createObject("servent", [
    TypeProperty{name: "s_name", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "s_aliases", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true}
    TypeProperty{name: "s_port", t: tm.get("int"), mutable: true}
    TypeProperty{name: "s_proto", t: tm.createArray(tm.get("char")), mutable: true}
  ])
  tm.createObject("addrinfo", [
    TypeProperty{name: "ai_flags", t: tm.get("int"), mutable: true}
    TypeProperty{name: "ai_family", t: tm.get("int"), mutable: true}
    TypeProperty{name: "ai_socktype", t: tm.get("int"), mutable: true}
    TypeProperty{name: "ai_protocol", t: tm.get("int"), mutable: true}
    TypeProperty{name: "ai_addrlen", t: tm.get("socklen_t"), mutable: true}
    TypeProperty{name: "ai_addr", t: tm.createReference(tm.get("sockaddr")), mutable: true}
    TypeProperty{name: "ai_canonname", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "ai_next", t: tm.createReference(tm.get("addrinfo")), mutable: true}
  ])
  tm.createObject("in_port_t", [])
  tm.createObject("in_addr_t", [])
  tm.createObject("in_addr", [
    TypeProperty{name: "s_addr", t: tm.get("in_addr_t"), mutable: true}
  ])
  tm.createObject("sockaddr_in", [
    TypeProperty{name: "sin_family", t: tm.get("sa_family_t"), mutable: true}
    TypeProperty{name: "sin_port", t: tm.get("in_port_t"), mutable: true}
    TypeProperty{name: "sin_addr", t: tm.get("in_addr"), mutable: true}
  ])
  tm.createObject("in6_addr", [
    TypeProperty{name: "s6_addr", t: tm.createArray(tm.get("u8")), mutable: true}
  ])
  tm.createObject("sockaddr_in6", [
    TypeProperty{name: "sin6_family", t: tm.get("sa_family_t"), mutable: true}
    TypeProperty{name: "sin6_port", t: tm.get("in_port_t"), mutable: true}
    TypeProperty{name: "sin6_flowinfo", t: tm.get("u32"), mutable: true}
    TypeProperty{name: "sin6_addr", t: tm.get("in6_addr"), mutable: true}
    TypeProperty{name: "sin6_scope_id", t: tm.get("u32"), mutable: true}
  ])
  tm.createObject("ipv6_mreq", [
    TypeProperty{name: "ipv6mr_multiaddr", t: tm.get("in6_addr"), mutable: true}
    TypeProperty{name: "ipv6mr_interface", t: tm.get("u32"), mutable: true}
  ])
  tm.createObject("nl_catd", [])
  tm.createObject("nl_item", [])
  tm.createObject("nfds_t", [])
  tm.createObject("pollfd", [
    TypeProperty{name: "fd", t: tm.get("int"), mutable: true}
    TypeProperty{name: "events", t: tm.get("i16"), mutable: true}
    TypeProperty{name: "revents", t: tm.get("i16"), mutable: true}
  ])
  tm.createObject("passwd", [
    TypeProperty{name: "pw_name", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "pw_uid", t: tm.get("uid_t"), mutable: true}
    TypeProperty{name: "pw_gid", t: tm.get("gid_t"), mutable: true}
    TypeProperty{name: "pw_dir", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "pw_shell", t: tm.createArray(tm.get("char")), mutable: true}
  ])
  tm.createObject("regoff_t", [])
  tm.createObject("regex_t", [
    TypeProperty{name: "re_nsub", t: tm.get("usize"), mutable: true}
  ])
  tm.createObject("regmatch_t", [
    TypeProperty{name: "rm_so", t: tm.get("regoff_t"), mutable: true}
    TypeProperty{name: "rm_eo", t: tm.get("regoff_t"), mutable: true}
  ])
  tm.createObject("sched_param", [
    TypeProperty{name: "sched_priority", t: tm.get("int"), mutable: true}
  ])
  tm.createObject("ENTRY", [
    TypeProperty{name: "key", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "data", t: tm.createReference(tm.get("any")), mutable: true}
  ])
  tm.createEnum("ACTION", ["FIND", "ENTER"])
  tm.createEnum("VISIT", ["preorder", "postorder", "endorder", "leaf"])
  tm.createObject("sem_t", [])
  tm.createObject("jmp_buf", [])
  tm.createObject("sigjmp_buf", [])
  tm.createObject("mcontext_t", [])
  tm.createObject("sig_atomic_t", [])
  tm.createObject("sigset_t", [])
  tm.createObject("sigevent", [
    TypeProperty{name: "sigev_notify", t: tm.get("int"), mutable: true}
    TypeProperty{name: "sigev_signo", t: tm.get("int"), mutable: true}
    TypeProperty{name: "sigev_value", t: tm.get("sigval"), mutable: true}
    TypeProperty{name: "sigev_notify_function", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.get("sigval"), mutable: false, required: true, variadic: false}
    ], tm.get("void")), mutable: true}
    TypeProperty{name: "sigev_notify_attributes", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true}
  ])
  tm.createObject("sigaction_t", [
    TypeProperty{name: "sa_handler", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.get("int"), mutable: false, required: true, variadic: false}
    ], tm.get("void")), mutable: true}
    TypeProperty{name: "sa_mask", t: tm.get("sigset_t"), mutable: true}
    TypeProperty{name: "sa_flags", t: tm.get("int"), mutable: true}
    TypeProperty{name: "sa_sigaction", t: tm.createFunction(false, [
      TypeParameter{name: "signum", t: tm.get("int"), mutable: false, required: true, variadic: false}
      TypeParameter{name: "info", t: tm.createReference(tm.get("siginfo_t")), mutable: true, required: true, variadic: false}
      TypeParameter{name: "ctx", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    ], tm.get("void")), mutable: true}
  ])
  tm.createObject("ucontext_t", [
    TypeProperty{name: "uc_link", t: tm.createReference(tm.get("ucontext_t")), mutable: true}
    TypeProperty{name: "uc_sigmask", t: tm.get("sigset_t"), mutable: true}
    TypeProperty{name: "uc_stack", t: tm.get("stack_t"), mutable: true}
    TypeProperty{name: "uc_mcontext", t: tm.createReference(tm.get("mcontext_t")), mutable: true}
  ])
  tm.createObject("stack_t", [
    TypeProperty{name: "ss_sp", t: tm.createReference(tm.get("any")), mutable: true}
    TypeProperty{name: "ss_size", t: tm.get("usize"), mutable: true}
    TypeProperty{name: "ss_flags", t: tm.get("int"), mutable: true}
  ])
  tm.createObject("siginfo_t", [
    TypeProperty{name: "si_signo", t: tm.get("int"), mutable: true}
    TypeProperty{name: "si_code", t: tm.get("int"), mutable: true}
    TypeProperty{name: "si_errno", t: tm.get("int"), mutable: true}
    TypeProperty{name: "si_pid", t: tm.get("pid_t"), mutable: true}
    TypeProperty{name: "si_uid", t: tm.get("uid_t"), mutable: true}
    TypeProperty{name: "si_addr", t: tm.createReference(tm.get("any")), mutable: true}
    TypeProperty{name: "si_status", t: tm.get("int"), mutable: true}
    TypeProperty{name: "si_band", t: tm.get("i64"), mutable: true}
    TypeProperty{name: "si_value", t: tm.get("sigval"), mutable: true}
  ])
  tm.createObject("ptrdiff_t", [])
  tm.createObject("intmax_t", [])
  tm.createObject("uintmax_t", [])
  tm.createObject("FILE", [])
  tm.createObject("fpos_t", [])
  tm.createObject("div_t", [
    TypeProperty{name: "quot", t: tm.get("int"), mutable: true}
    TypeProperty{name: "rem", t: tm.get("int"), mutable: true}
  ])
  tm.createObject("ldiv_t", [
    TypeProperty{name: "quot", t: tm.get("i64"), mutable: true}
    TypeProperty{name: "rem", t: tm.get("i64"), mutable: true}
  ])
  tm.createObject("lldiv_t", [
    TypeProperty{name: "quot", t: tm.get("int"), mutable: true}
    TypeProperty{name: "rem", t: tm.get("int"), mutable: true}
  ])
  tm.createObject("ipc_perm", [
    TypeProperty{name: "uid", t: tm.get("uid_t"), mutable: true}
    TypeProperty{name: "gid", t: tm.get("gid_t"), mutable: true}
    TypeProperty{name: "cuid", t: tm.get("uid_t"), mutable: true}
    TypeProperty{name: "cgid", t: tm.get("gid_t"), mutable: true}
    TypeProperty{name: "mode", t: tm.get("mode_t"), mutable: true}
  ])
  tm.createObject("typed_mem_info", [
    TypeProperty{name: "tmi_length", t: tm.get("usize"), mutable: true}
  ])
  tm.createObject("msgqnum_t", [])
  tm.createObject("msglen_t", [])
  tm.createObject("msqid_ds", [
    TypeProperty{name: "msg_perm", t: tm.get("ipc_perm"), mutable: true}
    TypeProperty{name: "msg_qnum", t: tm.get("msgqnum_t"), mutable: true}
    TypeProperty{name: "msg_qbytes", t: tm.get("msglen_t"), mutable: true}
    TypeProperty{name: "msg_lspid", t: tm.get("pid_t"), mutable: true}
    TypeProperty{name: "msg_lrpid", t: tm.get("pid_t"), mutable: true}
    TypeProperty{name: "msg_stime", t: tm.get("time_t"), mutable: true}
    TypeProperty{name: "msg_rtime", t: tm.get("time_t"), mutable: true}
    TypeProperty{name: "msg_ctime", t: tm.get("time_t"), mutable: true}
  ])
  tm.createObject("rlim_t", [])
  tm.createObject("rlimit", [
    TypeProperty{name: "rlim_cur", t: tm.get("rlim_t"), mutable: true}
    TypeProperty{name: "rlim_max", t: tm.get("rlim_t"), mutable: true}
  ])
  tm.createObject("rusage", [
    TypeProperty{name: "ru_utime", t: tm.get("timeval"), mutable: true}
    TypeProperty{name: "ru_stime", t: tm.get("timeval"), mutable: true}
  ])
  tm.createObject("fd_set", [])
  tm.createObject("semid_ds", [
    TypeProperty{name: "sem_perm", t: tm.get("ipc_perm"), mutable: true}
    TypeProperty{name: "sem_nsems", t: tm.get("u16"), mutable: true}
    TypeProperty{name: "sem_otime", t: tm.get("time_t"), mutable: true}
    TypeProperty{name: "sem_ctime", t: tm.get("time_t"), mutable: true}
  ])
  tm.createObject("sem", [
    TypeProperty{name: "semval", t: tm.get("u16"), mutable: true}
    TypeProperty{name: "sempid", t: tm.get("pid_t"), mutable: true}
    TypeProperty{name: "semncnt", t: tm.get("u16"), mutable: true}
    TypeProperty{name: "semzcnt", t: tm.get("u16"), mutable: true}
  ])
  tm.createObject("sembuf", [
    TypeProperty{name: "sem_num", t: tm.get("u16"), mutable: true}
    TypeProperty{name: "sem_op", t: tm.get("i16"), mutable: true}
    TypeProperty{name: "sem_flg", t: tm.get("i16"), mutable: true}
  ])
  tm.createObject("shmatt_t", [])
  tm.createObject("shmid_ds", [
    TypeProperty{name: "shm_perm", t: tm.get("ipc_perm"), mutable: true}
    TypeProperty{name: "shm_segsz", t: tm.get("usize"), mutable: true}
    TypeProperty{name: "shm_lpid", t: tm.get("pid_t"), mutable: true}
    TypeProperty{name: "shm_cpid", t: tm.get("pid_t"), mutable: true}
    TypeProperty{name: "shm_nattch", t: tm.get("shmatt_t"), mutable: true}
    TypeProperty{name: "shm_atime", t: tm.get("time_t"), mutable: true}
    TypeProperty{name: "shm_dtime", t: tm.get("time_t"), mutable: true}
    TypeProperty{name: "shm_ctime", t: tm.get("time_t"), mutable: true}
  ])
  tm.createObject("socklen_t", [])
  tm.createObject("sa_family_t", [])
  tm.createObject("sockaddr", [
    TypeProperty{name: "sa_family", t: tm.get("sa_family_t"), mutable: true}
    TypeProperty{name: "sa_data", t: tm.createArray(tm.get("char")), mutable: true}
  ])
  tm.createObject("sockaddr_storage", [
    TypeProperty{name: "ss_family", t: tm.get("sa_family_t"), mutable: true}
  ])
  tm.createObject("msghdr", [
    TypeProperty{name: "msg_name", t: tm.createReference(tm.get("any")), mutable: true}
    TypeProperty{name: "msg_namelen", t: tm.get("socklen_t"), mutable: true}
    TypeProperty{name: "msg_iov", t: tm.createReference(tm.get("iovec")), mutable: true}
    TypeProperty{name: "msg_iovlen", t: tm.get("int"), mutable: true}
    TypeProperty{name: "msg_control", t: tm.createReference(tm.get("any")), mutable: true}
    TypeProperty{name: "msg_controllen", t: tm.get("socklen_t"), mutable: true}
    TypeProperty{name: "msg_flags", t: tm.get("int"), mutable: true}
  ])
  tm.createObject("cmsghdr", [
    TypeProperty{name: "cmsg_len", t: tm.get("socklen_t"), mutable: true}
    TypeProperty{name: "cmsg_level", t: tm.get("int"), mutable: true}
    TypeProperty{name: "cmsg_type", t: tm.get("int"), mutable: true}
  ])
  tm.createObject("linger", [
    TypeProperty{name: "l_onoff", t: tm.get("int"), mutable: true}
    TypeProperty{name: "l_linger", t: tm.get("int"), mutable: true}
  ])
  tm.createObject("stat_t", [
    TypeProperty{name: "st_dev", t: tm.get("dev_t"), mutable: true}
    TypeProperty{name: "st_ino", t: tm.get("ino_t"), mutable: true}
    TypeProperty{name: "st_mode", t: tm.get("mode_t"), mutable: true}
    TypeProperty{name: "st_nlink", t: tm.get("nlink_t"), mutable: true}
    TypeProperty{name: "st_uid", t: tm.get("uid_t"), mutable: true}
    TypeProperty{name: "st_gid", t: tm.get("gid_t"), mutable: true}
    TypeProperty{name: "st_rdev", t: tm.get("dev_t"), mutable: true}
    TypeProperty{name: "st_size", t: tm.get("off_t"), mutable: true}
    TypeProperty{name: "st_atim", t: tm.get("timespec"), mutable: true}
    TypeProperty{name: "st_mtim", t: tm.get("timespec"), mutable: true}
    TypeProperty{name: "st_ctim", t: tm.get("timespec"), mutable: true}
    TypeProperty{name: "st_blksize", t: tm.get("blksize_t"), mutable: true}
    TypeProperty{name: "st_blocks", t: tm.get("blkcnt_t"), mutable: true}
  ])
  tm.createObject("statvfs_t", [
    TypeProperty{name: "f_bsize", t: tm.get("u64"), mutable: true}
    TypeProperty{name: "f_frsize", t: tm.get("u64"), mutable: true}
    TypeProperty{name: "f_blocks", t: tm.get("fsblkcnt_t"), mutable: true}
    TypeProperty{name: "f_bfree", t: tm.get("fsblkcnt_t"), mutable: true}
    TypeProperty{name: "f_bavail", t: tm.get("fsblkcnt_t"), mutable: true}
    TypeProperty{name: "f_files", t: tm.get("fsfilcnt_t"), mutable: true}
    TypeProperty{name: "f_ffree", t: tm.get("fsfilcnt_t"), mutable: true}
    TypeProperty{name: "f_favail", t: tm.get("fsfilcnt_t"), mutable: true}
    TypeProperty{name: "f_fsid", t: tm.get("u64"), mutable: true}
    TypeProperty{name: "f_flag", t: tm.get("u64"), mutable: true}
    TypeProperty{name: "f_namemax", t: tm.get("u64"), mutable: true}
  ])
  tm.createObject("timeval", [
    TypeProperty{name: "tv_sec", t: tm.get("time_t"), mutable: true}
    TypeProperty{name: "tv_usec", t: tm.get("suseconds_t"), mutable: true}
  ])
  tm.createObject("itimerval", [
    TypeProperty{name: "it_interval", t: tm.get("timeval"), mutable: true}
    TypeProperty{name: "it_value", t: tm.get("timeval"), mutable: true}
  ])
  tm.createObject("tms", [
    TypeProperty{name: "tms_utime", t: tm.get("clock_t"), mutable: true}
    TypeProperty{name: "tms_stime", t: tm.get("clock_t"), mutable: true}
    TypeProperty{name: "tms_cutime", t: tm.get("clock_t"), mutable: true}
    TypeProperty{name: "tms_cstime", t: tm.get("clock_t"), mutable: true}
  ])
  tm.createObject("blkcnt_t", [])
  tm.createObject("blksize_t", [])
  tm.createObject("clock_t", [])
  tm.createObject("clockid_t", [])
  tm.createObject("dev_t", [])
  tm.createObject("fsblkcnt_t", [])
  tm.createObject("fsfilcnt_t", [])
  tm.createObject("gid_t", [])
  tm.createObject("id_t", [])
  tm.createObject("ino_t", [])
  tm.createObject("key_t", [])
  tm.createObject("mode_t", [])
  tm.createObject("nlink_t", [])
  tm.createObject("off_t", [])
  tm.createObject("pid_t", [])
  tm.createObject("pthread_attr_t", [])
  tm.createObject("pthread_barrier_t", [])
  tm.createObject("pthread_barrierattr_t", [])
  tm.createObject("pthread_cond_t", [])
  tm.createObject("pthread_condattr_t", [])
  tm.createObject("pthread_key_t", [])
  tm.createObject("pthread_mutex_t", [])
  tm.createObject("pthread_mutexattr_t", [])
  tm.createObject("pthread_once_t", [])
  tm.createObject("pthread_rwlock_t", [])
  tm.createObject("pthread_rwlockattr_t", [])
  tm.createObject("pthread_spinlock_t", [])
  tm.createObject("pthread_t", [])
  tm.createObject("suseconds_t", [])
  tm.createObject("time_t", [])
  tm.createObject("timer_t", [])
  tm.createObject("trace_attr_t", [])
  tm.createObject("trace_event_id_t", [])
  tm.createObject("trace_event_set_t", [])
  tm.createObject("trace_id_t", [])
  tm.createObject("uid_t", [])
  tm.createObject("iovec", [
    TypeProperty{name: "iov_base", t: tm.createReference(tm.get("any")), mutable: true}
    TypeProperty{name: "iov_len", t: tm.get("usize"), mutable: true}
  ])
  tm.createObject("sockaddr_un", [
    TypeProperty{name: "sun_family", t: tm.get("sa_family_t"), mutable: true}
    TypeProperty{name: "sun_path", t: tm.createArray(tm.get("char")), mutable: true}
  ])
  tm.createObject("utsname", [
    TypeProperty{name: "sysname", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "nodename", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "release", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "version", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "machine", t: tm.createArray(tm.get("char")), mutable: true}
  ])
  tm.createEnum("idtype_t", ["P_ALL", "P_PGID", "P_PID"])
  tm.createObject("cc_t", [])
  tm.createObject("speed_t", [])
  tm.createObject("tcflag_t", [])
  tm.createObject("termios", [
    TypeProperty{name: "c_iflag", t: tm.get("tcflag_t"), mutable: true}
    TypeProperty{name: "c_oflag", t: tm.get("tcflag_t"), mutable: true}
    TypeProperty{name: "c_cflag", t: tm.get("tcflag_t"), mutable: true}
    TypeProperty{name: "c_lflag", t: tm.get("tcflag_t"), mutable: true}
    TypeProperty{name: "c_cc", t: tm.createArray(tm.get("cc_t")), mutable: true}
  ])
  tm.createObject("tm", [
    TypeProperty{name: "tm_sec", t: tm.get("int"), mutable: true}
    TypeProperty{name: "tm_min", t: tm.get("int"), mutable: true}
    TypeProperty{name: "tm_hour", t: tm.get("int"), mutable: true}
    TypeProperty{name: "tm_mday", t: tm.get("int"), mutable: true}
    TypeProperty{name: "tm_mon", t: tm.get("int"), mutable: true}
    TypeProperty{name: "tm_year", t: tm.get("int"), mutable: true}
    TypeProperty{name: "tm_wday", t: tm.get("int"), mutable: true}
    TypeProperty{name: "tm_yday", t: tm.get("int"), mutable: true}
    TypeProperty{name: "tm_isdst", t: tm.get("int"), mutable: true}
  ])
  tm.createObject("timespec", [
    TypeProperty{name: "tv_sec", t: tm.get("time_t"), mutable: true}
    TypeProperty{name: "tv_nsec", t: tm.get("i64"), mutable: true}
  ])
  tm.createObject("itimerspec", [
    TypeProperty{name: "it_interval", t: tm.get("timespec"), mutable: true}
    TypeProperty{name: "it_value", t: tm.get("timespec"), mutable: true}
  ])
  tm.createObject("utmpx", [
    TypeProperty{name: "ut_user", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "ut_id", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "ut_line", t: tm.createArray(tm.get("char")), mutable: true}
    TypeProperty{name: "ut_pid", t: tm.get("pid_t"), mutable: true}
    TypeProperty{name: "ut_type", t: tm.get("i16"), mutable: true}
    TypeProperty{name: "ut_tv", t: tm.get("timeval"), mutable: true}
  ])
  tm.createObject("mbstate_t", [])
  tm.createObject("wctype_t", [])
  tm.createObject("wint_t", [])
  tm.createObject("wctrans_t", [])
  tm.createObject("wordexp_t", [
    TypeProperty{name: "we_wordc", t: tm.get("usize"), mutable: true}
    TypeProperty{name: "we_wordv", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true}
    TypeProperty{name: "we_offs", t: tm.get("usize"), mutable: true}
  ])
  tm.createAlias("iconv_t", tm.createReference(tm.get("any")))
  tm.createAlias("sigval", tm.createUnion([tm.get("int"), tm.createReference(tm.get("any"))]))
  tm.createAlias("spawnattr_t", tm.createReference(tm.get("any")))
  tm.createAlias("spawn_file_actions_t", tm.createReference(tm.get("any")))
  tm.createAlias("semun", tm.createUnion([tm.get("int"), tm.createReference(tm.createUnion([tm.get("semid_ds"), tm.createReference(tm.get("u16"))]))]))
}

export fn VarMap_std (vm: ref VarMap, tm: ref TypeMap) {
  vm.add("aio_cancel", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "cb", t: tm.createReference(tm.get("aiocb")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("aio_error", tm.createFunction(false, [
    TypeParameter{name: "cb", t: tm.createReference(tm.get("aiocb")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("aio_fsync", tm.createFunction(false, [
    TypeParameter{name: "op", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "cb", t: tm.createReference(tm.get("aiocb")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("aio_read", tm.createFunction(false, [
    TypeParameter{name: "cb", t: tm.createReference(tm.get("aiocb")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("aio_return", tm.createFunction(false, [
    TypeParameter{name: "cb", t: tm.createReference(tm.get("aiocb")), mutable: true, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("aio_suspend", tm.createFunction(false, [
    TypeParameter{name: "list", t: tm.createArray(tm.createReference(tm.get("aiocb"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("aio_write", tm.createFunction(false, [
    TypeParameter{name: "cb", t: tm.createReference(tm.get("aiocb")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("lio_listio", tm.createFunction(false, [
    TypeParameter{name: "mode", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "list", t: tm.createArray(tm.createReference(tm.get("aiocb"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "sig", t: tm.createReference(tm.get("sigevent")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("htonl", tm.createFunction(false, [
    TypeParameter{name: "host", t: tm.get("u32"), mutable: false, required: true, variadic: false}
  ], tm.get("u32")), false)
  vm.add("htons", tm.createFunction(false, [
    TypeParameter{name: "host", t: tm.get("u16"), mutable: false, required: true, variadic: false}
  ], tm.get("u16")), false)
  vm.add("ntohl", tm.createFunction(false, [
    TypeParameter{name: "net", t: tm.get("u32"), mutable: false, required: true, variadic: false}
  ], tm.get("u32")), false)
  vm.add("ntohs", tm.createFunction(false, [
    TypeParameter{name: "net", t: tm.get("u16"), mutable: false, required: true, variadic: false}
  ], tm.get("u16")), false)
  vm.add("inet_addr", tm.createFunction(false, [
    TypeParameter{name: "cp", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("in_addr_t")), false)
  vm.add("inet_ntoa", tm.createFunction(false, [
    TypeParameter{name: "in", t: tm.get("in_addr"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("inet_ntop", tm.createFunction(false, [
    TypeParameter{name: "af", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "dest", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.get("socklen_t"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("inet_pton", tm.createFunction(false, [
    TypeParameter{name: "af", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "dest", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("assert", tm.createFunction(false, [
    TypeParameter{name: "expression", t: tm.get("any"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("isalnum", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isalnum_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isalpha", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isalpha_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isascii", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isblank", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isblank_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iscntrl", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iscntrl_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isdigit", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isdigit_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isgraph", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isgraph_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("islower", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("islower_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isprint", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isprint_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("ispunct", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("ispunct_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isspace", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isspace_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isupper", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isupper_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isxdigit", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isxdigit_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("toascii", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("tolower", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("tolower_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("toupper", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("toupper_l", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("alphasort", tm.createFunction(false, [
    TypeParameter{name: "a", t: tm.createReference(tm.createReference(tm.get("dirent"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "b", t: tm.createReference(tm.createReference(tm.get("dirent"))), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("closedir", tm.createFunction(false, [
    TypeParameter{name: "dir", t: tm.createReference(tm.get("DIR")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("dirfd", tm.createFunction(false, [
    TypeParameter{name: "dir", t: tm.createReference(tm.get("DIR")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fdopendir", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("DIR"))), false)
  vm.add("opendir", tm.createFunction(false, [
    TypeParameter{name: "dirname", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("DIR"))), false)
  vm.add("readdir", tm.createFunction(false, [
    TypeParameter{name: "dir", t: tm.createReference(tm.get("DIR")), mutable: true, required: true, variadic: false}
  ], tm.createReference(tm.get("dirent"))), false)
  vm.add("readdir_r", tm.createFunction(false, [
    TypeParameter{name: "dir", t: tm.createReference(tm.get("DIR")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "entry", t: tm.createReference(tm.get("dirent")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.createReference(tm.get("dirent"))), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("rewinddir", tm.createFunction(false, [
    TypeParameter{name: "dir", t: tm.createReference(tm.get("DIR")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("scandir", tm.createFunction(false, [
    TypeParameter{name: "dirname", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "list", t: tm.createReference(tm.createArray(tm.createReference(tm.get("dirent")))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "filter", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("dirent")), mutable: false, required: true, variadic: false}
    ], tm.get("int")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "comparator", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.createReference(tm.get("dirent"))), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.createReference(tm.createReference(tm.get("dirent"))), mutable: false, required: true, variadic: false}
    ], tm.get("int")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("seekdir", tm.createFunction(false, [
    TypeParameter{name: "dir", t: tm.createReference(tm.get("DIR")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "loc", t: tm.get("i64"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("telldir", tm.createFunction(false, [
    TypeParameter{name: "dir", t: tm.createReference(tm.get("DIR")), mutable: true, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("dlclose", tm.createFunction(false, [
    TypeParameter{name: "handle", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("dlerror", tm.createFunction(false, [], tm.createArray(tm.get("char"))), false)
  vm.add("dlopen", tm.createFunction(false, [
    TypeParameter{name: "filename", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("dlsym", tm.createFunction(false, [
    TypeParameter{name: "handle", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("creat", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fcntl", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "cmd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "arg", t: tm.get("any"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("open", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.createOptional(tm.get("mode_t")), mutable: false, required: false, variadic: false}
  ], tm.get("int")), false)
  vm.add("openat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.createOptional(tm.get("mode_t")), mutable: false, required: false, variadic: false}
  ], tm.get("int")), false)
  vm.add("feclearexcept", tm.createFunction(false, [
    TypeParameter{name: "excepts", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fegetenv", tm.createFunction(false, [
    TypeParameter{name: "env", t: tm.createReference(tm.get("fenv_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fegetexceptflag", tm.createFunction(false, [
    TypeParameter{name: "flag", t: tm.createReference(tm.get("fexcept_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "excepts", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fegetround", tm.createFunction(false, [], tm.get("int")), false)
  vm.add("feholdexcept", tm.createFunction(false, [
    TypeParameter{name: "env", t: tm.createReference(tm.get("fenv_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("feraiseexcept", tm.createFunction(false, [
    TypeParameter{name: "excepts", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fesetenv", tm.createFunction(false, [
    TypeParameter{name: "env", t: tm.createReference(tm.get("fenv_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fesetexceptflag", tm.createFunction(false, [
    TypeParameter{name: "flag", t: tm.createReference(tm.get("fexcept_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "excepts", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fesetround", tm.createFunction(false, [
    TypeParameter{name: "round", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fetestexcept", tm.createFunction(false, [
    TypeParameter{name: "excepts", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("feupdateenv", tm.createFunction(false, [
    TypeParameter{name: "env", t: tm.createReference(tm.get("fenv_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fmtmsg", tm.createFunction(false, [
    TypeParameter{name: "classification", t: tm.get("i64"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "label", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "severity", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "text", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "action", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "tag", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fnmatch", tm.createFunction(false, [
    TypeParameter{name: "pattern", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "string", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("glob", tm.createFunction(false, [
    TypeParameter{name: "pattern", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "err", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.get("int"), mutable: false, required: true, variadic: false}
    ], tm.get("int")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "glob", t: tm.createReference(tm.get("glob_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("globfree", tm.createFunction(false, [
    TypeParameter{name: "glob", t: tm.createReference(tm.get("glob_t")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("endgrent", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("getgrent", tm.createFunction(false, [], tm.createReference(tm.get("group"))), false)
  vm.add("getgrgid", tm.createFunction(false, [
    TypeParameter{name: "gid", t: tm.get("gid_t"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("group"))), false)
  vm.add("getgrgid_r", tm.createFunction(false, [
    TypeParameter{name: "gid", t: tm.get("gid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "grp", t: tm.createReference(tm.get("group")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.createReference(tm.get("group"))), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getgrnam", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("group"))), false)
  vm.add("getgrnam_r", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "grp", t: tm.createReference(tm.get("group")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.createReference(tm.get("group"))), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setgrent", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("iconv", tm.createFunction(false, [
    TypeParameter{name: "cd", t: tm.get("iconv_t"), mutable: true, required: true, variadic: false}
    TypeParameter{name: "inbuf", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "inBytesLeft", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "outbuf", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "outBytesLeft", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("iconv_close", tm.createFunction(false, [
    TypeParameter{name: "cd", t: tm.get("iconv_t"), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iconv_open", tm.createFunction(false, [
    TypeParameter{name: "toCode", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "fromCode", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("iconv_t")), false)
  vm.add("imaxabs", tm.createFunction(false, [
    TypeParameter{name: "j", t: tm.get("intmax_t"), mutable: false, required: true, variadic: false}
  ], tm.get("intmax_t")), false)
  vm.add("imaxdiv", tm.createFunction(false, [
    TypeParameter{name: "numer", t: tm.get("intmax_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "denom", t: tm.get("intmax_t"), mutable: false, required: true, variadic: false}
  ], tm.get("imaxdiv_t")), false)
  vm.add("strtoimax", tm.createFunction(false, [
    TypeParameter{name: "string", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("intmax_t")), false)
  vm.add("strtoumax", tm.createFunction(false, [
    TypeParameter{name: "string", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("uintmax_t")), false)
  vm.add("wcstoimax", tm.createFunction(false, [
    TypeParameter{name: "string", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("intmax_t")), false)
  vm.add("wcstoumax", tm.createFunction(false, [
    TypeParameter{name: "string", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("uintmax_t")), false)
  vm.add("nl_langinfo", tm.createFunction(false, [
    TypeParameter{name: "item", t: tm.get("nl_item"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("nl_langinfo_l", tm.createFunction(false, [
    TypeParameter{name: "item", t: tm.get("nl_item"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("basename", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("dirname", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("duplocale", tm.createFunction(false, [
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("locale_t")), false)
  vm.add("freelocale", tm.createFunction(false, [
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("localeconv", tm.createFunction(false, [], tm.createReference(tm.get("lconv"))), false)
  vm.add("newlocale", tm.createFunction(false, [
    TypeParameter{name: "mask", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("locale_t")), false)
  vm.add("setlocale", tm.createFunction(false, [
    TypeParameter{name: "category", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("uselocale", tm.createFunction(false, [
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("locale_t")), false)
  vm.add("fpclassify", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isfinite", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isgreater", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isgreaterequal", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isinf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isless", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("islessequal", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("islessgreater", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isnan", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isnormal", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("isunordered", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("signbit", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("acos", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("acosf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("acosh", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("acoshf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("asin", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("asinf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("asinh", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("asinhf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("atan", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("atan2", tm.createFunction(false, [
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("atan2f", tm.createFunction(false, [
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("atanf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("atanh", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("atanhf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("cbrt", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("cbrtf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("ceil", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("ceilf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("copysign", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("copysignf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("cos", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("cosf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("cosh", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("coshf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("erf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("erfc", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("erfcf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("erff", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("exp", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("exp2", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("exp2f", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("expf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("expm1", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("expm1f", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("fabs", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("fabsf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("fdim", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("fdimf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("floor", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("floorf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("fma", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "z", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("fmaf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "z", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("fmax", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("fmaxf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("fmin", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("fminf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("fmod", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("fmodf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("frexp", tm.createFunction(false, [
    TypeParameter{name: "num", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "exp", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("frexpf", tm.createFunction(false, [
    TypeParameter{name: "num", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "exp", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("hypot", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("hypotf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("ilogb", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("ilogbf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("j0", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("j1", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("jn", tm.createFunction(false, [
    TypeParameter{name: "n", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("ldexp", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "exp", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("ldexpf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "exp", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("lgamma", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("lgammaf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("llrint", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("llrintf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("llround", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("llroundf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("log", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("log10", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("log10f", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("log1p", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("log1pf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("log2", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("log2f", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("logb", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("logbf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("logf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("lrint", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("lrintf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("lround", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("lroundf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("modf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "i", t: tm.createReference(tm.get("float")), mutable: true, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("modff", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "i", t: tm.createReference(tm.get("f32")), mutable: true, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("nan", tm.createFunction(false, [
    TypeParameter{name: "tag", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("nanf", tm.createFunction(false, [
    TypeParameter{name: "tag", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("nearbyint", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("nearbyintf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("nextafter", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("nextafterf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("pow", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("powf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("remainder", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("remainderf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("remquo", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "quo", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("remquof", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "y", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "quo", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("rint", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("rintf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("round", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("roundf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("scalbln", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("i64"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("scalblnf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("i64"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("scalbn", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("scalbnf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("sin", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("sinf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("sinh", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("sinhf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("sqrt", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("sqrtf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("tan", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("tanf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("tanh", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("tanhf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("tgamma", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("tgammaf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("trunc", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("truncf", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("f32"), mutable: false, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("y0", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("y1", tm.createFunction(false, [
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("yn", tm.createFunction(false, [
    TypeParameter{name: "n", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "x", t: tm.get("float"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("strfmon", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "max", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "args", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("isize")), false)
  vm.add("strfmon_l", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "max", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "args", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("isize")), false)
  vm.add("mq_close", tm.createFunction(false, [
    TypeParameter{name: "mqdes", t: tm.get("mqd_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mq_getattr", tm.createFunction(false, [
    TypeParameter{name: "mqdes", t: tm.get("mqd_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "attr", t: tm.createReference(tm.get("mq_attr")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mq_notify", tm.createFunction(false, [
    TypeParameter{name: "mqdes", t: tm.get("mqd_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "notification", t: tm.createReference(tm.get("sigevent")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mq_open", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.createOptional(tm.get("mode_t")), mutable: false, required: false, variadic: false}
    TypeParameter{name: "attr", t: tm.createOptional(tm.createReference(tm.get("mq_attr"))), mutable: true, required: false, variadic: false}
  ], tm.get("mqd_t")), false)
  vm.add("mq_receive", tm.createFunction(false, [
    TypeParameter{name: "mqdes", t: tm.get("mqd_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "msg", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "priority", t: tm.createReference(tm.get("u32")), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("mq_send", tm.createFunction(false, [
    TypeParameter{name: "mqdes", t: tm.get("mqd_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "msg", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "priority", t: tm.get("u32"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mq_setattr", tm.createFunction(false, [
    TypeParameter{name: "mqdes", t: tm.get("mqd_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "newattr", t: tm.createReference(tm.get("mq_attr")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "oldattr", t: tm.createReference(tm.get("mq_attr")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mq_timedreceive", tm.createFunction(false, [
    TypeParameter{name: "mqdes", t: tm.get("mqd_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "msg", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "priority", t: tm.createReference(tm.get("u32")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("mq_timedsend", tm.createFunction(false, [
    TypeParameter{name: "mqdes", t: tm.get("mqd_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "msg", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "priority", t: tm.get("u32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mq_unlink", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("dbm_clearerr", tm.createFunction(false, [
    TypeParameter{name: "db", t: tm.createReference(tm.get("DBM")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("dbm_close", tm.createFunction(false, [
    TypeParameter{name: "db", t: tm.createReference(tm.get("DBM")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("dbm_delete", tm.createFunction(false, [
    TypeParameter{name: "db", t: tm.createReference(tm.get("DBM")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "key", t: tm.get("datum"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("dbm_error", tm.createFunction(false, [
    TypeParameter{name: "db", t: tm.createReference(tm.get("DBM")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("dbm_fetch", tm.createFunction(false, [
    TypeParameter{name: "db", t: tm.createReference(tm.get("DBM")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "key", t: tm.get("datum"), mutable: false, required: true, variadic: false}
  ], tm.get("datum")), false)
  vm.add("dbm_firstkey", tm.createFunction(false, [
    TypeParameter{name: "db", t: tm.createReference(tm.get("DBM")), mutable: true, required: true, variadic: false}
  ], tm.get("datum")), false)
  vm.add("dbm_nextkey", tm.createFunction(false, [
    TypeParameter{name: "db", t: tm.createReference(tm.get("DBM")), mutable: true, required: true, variadic: false}
  ], tm.get("datum")), false)
  vm.add("dbm_open", tm.createFunction(false, [
    TypeParameter{name: "file", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("DBM"))), false)
  vm.add("dbm_store", tm.createFunction(false, [
    TypeParameter{name: "db", t: tm.createReference(tm.get("DBM")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "key", t: tm.get("datum"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "content", t: tm.get("datum"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("if_freenameindex", tm.createFunction(false, [
    TypeParameter{name: "ptr", t: tm.createReference(tm.get("if_nameindex_t")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("if_indextoname", tm.createFunction(false, [
    TypeParameter{name: "index", t: tm.get("u32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "name", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("if_nameindex", tm.createFunction(false, [], tm.createReference(tm.get("if_nameindex_t"))), false)
  vm.add("if_nametoindex", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("u32")), false)
  vm.add("endhostent", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("endnetent", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("endprotoent", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("endservent", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("freeaddrinfo", tm.createFunction(false, [
    TypeParameter{name: "ai", t: tm.createReference(tm.get("addrinfo")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("gai_strerror", tm.createFunction(false, [
    TypeParameter{name: "code", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("getaddrinfo", tm.createFunction(false, [
    TypeParameter{name: "nodename", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "servname", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "hints", t: tm.createReference(tm.get("addrinfo")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.createReference(tm.get("addrinfo"))), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("gethostent", tm.createFunction(false, [], tm.createReference(tm.get("hostent"))), false)
  vm.add("getnameinfo", tm.createFunction(false, [
    TypeParameter{name: "sa", t: tm.createReference(tm.get("sockaddr")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "salen", t: tm.get("socklen_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "host", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "hostlen", t: tm.get("socklen_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "serv", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "servlen", t: tm.get("socklen_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getnetbyaddr", tm.createFunction(false, [
    TypeParameter{name: "net", t: tm.get("u32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "type", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("netent"))), false)
  vm.add("getnetbyname", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("netent"))), false)
  vm.add("getnetent", tm.createFunction(false, [], tm.createReference(tm.get("netent"))), false)
  vm.add("getprotobyname", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("protoent"))), false)
  vm.add("getprotobynumber", tm.createFunction(false, [
    TypeParameter{name: "proto", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("protoent"))), false)
  vm.add("getprotoent", tm.createFunction(false, [], tm.createReference(tm.get("protoent"))), false)
  vm.add("getservbyname", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "proto", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("servent"))), false)
  vm.add("getservbyport", tm.createFunction(false, [
    TypeParameter{name: "port", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "proto", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("servent"))), false)
  vm.add("getservent", tm.createFunction(false, [], tm.createReference(tm.get("servent"))), false)
  vm.add("sethostent", tm.createFunction(false, [
    TypeParameter{name: "stayopen", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("setnetent", tm.createFunction(false, [
    TypeParameter{name: "stayopen", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("setprotoent", tm.createFunction(false, [
    TypeParameter{name: "stayopen", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("setservent", tm.createFunction(false, [
    TypeParameter{name: "stayopen", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("IN6_IS_ADDR_UNSPECIFIED", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_LOOPBACK", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_MULTICAST", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_LINKLOCAL", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_SITELOCAL", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_V4MAPPED", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_V4COMPAT", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_MC_NODELOCAL", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_MC_LINKLOCAL", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_MC_SITELOCAL", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_MC_ORGLOCAL", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("IN6_IS_ADDR_MC_GLOBAL", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("in6_addr")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("catclose", tm.createFunction(false, [
    TypeParameter{name: "catalog", t: tm.get("nl_catd"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("catgets", tm.createFunction(false, [
    TypeParameter{name: "catalog", t: tm.get("nl_catd"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "set_id", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "msg_id", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "message", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("catopen", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("nl_catd")), false)
  vm.add("poll", tm.createFunction(false, [
    TypeParameter{name: "fds", t: tm.createReference(tm.get("pollfd")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "nfds", t: tm.get("nfds_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_atfork", tm.createFunction(false, [
    TypeParameter{name: "prepare", t: tm.createFunction(false, [], tm.get("void")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "parent", t: tm.createFunction(false, [], tm.get("void")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "child", t: tm.createFunction(false, [], tm.get("void")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_destroy", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_getdetachstate", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "detachstate", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_getguardsize", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "guardsize", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_getinheritsched", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "inheritsched", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_getschedparam", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "param", t: tm.createReference(tm.get("sched_param")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_getschedpolicy", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "policy", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_getscope", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "scope", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_getstack", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stack", t: tm.createReference(tm.createReference(tm.get("any"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_getstacksize", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_init", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_setdetachstate", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "detachstate", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_setguardsize", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "guardsize", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_setinheritsched", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "inheritsched", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_setschedparam", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "param", t: tm.createReference(tm.get("sched_param")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_setschedpolicy", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "policy", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_setscope", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "scope", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_setstack", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "stack", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_attr_setstacksize", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_barrier_destroy", tm.createFunction(false, [
    TypeParameter{name: "barrier", t: tm.createReference(tm.get("pthread_barrier_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_barrier_init", tm.createFunction(false, [
    TypeParameter{name: "barrier", t: tm.createReference(tm.get("pthread_barrier_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_barrierattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("u32"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_barrier_wait", tm.createFunction(false, [
    TypeParameter{name: "barrier", t: tm.createReference(tm.get("pthread_barrier_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_barrierattr_destroy", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_barrierattr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_barrierattr_getpshared", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_barrierattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "pshared", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_barrierattr_init", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_barrierattr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_barrierattr_setpshared", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_barrierattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "pshared", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_cancel", tm.createFunction(false, [
    TypeParameter{name: "thread", t: tm.get("pthread_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_cond_broadcast", tm.createFunction(false, [
    TypeParameter{name: "cond", t: tm.createReference(tm.get("pthread_cond_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_cond_destroy", tm.createFunction(false, [
    TypeParameter{name: "cond", t: tm.createReference(tm.get("pthread_cond_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_cond_init", tm.createFunction(false, [
    TypeParameter{name: "cond", t: tm.createReference(tm.get("pthread_cond_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_condattr_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_cond_signal", tm.createFunction(false, [
    TypeParameter{name: "cond", t: tm.createReference(tm.get("pthread_cond_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_cond_timedwait", tm.createFunction(false, [
    TypeParameter{name: "cond", t: tm.createReference(tm.get("pthread_cond_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_cond_wait", tm.createFunction(false, [
    TypeParameter{name: "cond", t: tm.createReference(tm.get("pthread_cond_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_condattr_destroy", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_condattr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_condattr_getclock", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_condattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "clock", t: tm.createReference(tm.get("clockid_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_condattr_getpshared", tm.createFunction(false, [
    TypeParameter{name: "atrr", t: tm.createReference(tm.get("pthread_condattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "pshared", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_condattr_init", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_condattr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_condattr_setclock", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_condattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "clock", t: tm.get("clockid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_condattr_setpshared", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_condattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "pshared", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_create", tm.createFunction(false, [
    TypeParameter{name: "thread", t: tm.createReference(tm.get("pthread_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_attr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "routine", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    ], tm.createReference(tm.get("any"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "arg", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_detach", tm.createFunction(false, [
    TypeParameter{name: "thread", t: tm.get("pthread_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_equal", tm.createFunction(false, [
    TypeParameter{name: "a", t: tm.get("pthread_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "b", t: tm.get("pthread_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_exit", tm.createFunction(false, [
    TypeParameter{name: "value", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("pthread_getconcurrency", tm.createFunction(false, [], tm.get("int")), false)
  vm.add("pthread_getcpuclockid", tm.createFunction(false, [
    TypeParameter{name: "thread", t: tm.get("pthread_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "clock", t: tm.createReference(tm.get("clockid_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_getschedparam", tm.createFunction(false, [
    TypeParameter{name: "thread", t: tm.get("pthread_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "policy", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "param", t: tm.createReference(tm.get("sched_param")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_getspecific", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.get("pthread_key_t"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("pthread_join", tm.createFunction(false, [
    TypeParameter{name: "thread", t: tm.get("pthread_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createReference(tm.createReference(tm.get("any"))), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_key_create", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.createReference(tm.get("pthread_key_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "destructor", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    ], tm.get("void")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_key_delete", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.get("pthread_key_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutex_consistent", tm.createFunction(false, [
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutex_destroy", tm.createFunction(false, [
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutex_getprioceiling", tm.createFunction(false, [
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "prioceiling", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutex_init", tm.createFunction(false, [
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutex_lock", tm.createFunction(false, [
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutex_setprioceiling", tm.createFunction(false, [
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "prioceiling", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "old_ceiling", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutex_timedlock", tm.createFunction(false, [
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutex_trylock", tm.createFunction(false, [
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutex_unlock", tm.createFunction(false, [
    TypeParameter{name: "mutex", t: tm.createReference(tm.get("pthread_mutex_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_destroy", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_getprioceiling", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "prioceiling", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_getprotocol", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "protocol", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_getpshared", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "pshared", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_getrobust", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "robust", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_gettype", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "type", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_init", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_setprioceiling", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "prioceiling", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_setprotocol", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "protocol", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_setpshared", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "pshared", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_setrobust", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "robust", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_mutexattr_settype", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_mutexattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "type", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_once", tm.createFunction(false, [
    TypeParameter{name: "once", t: tm.createReference(tm.get("pthread_once_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "routine", t: tm.createFunction(false, [], tm.get("void")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlock_destroy", tm.createFunction(false, [
    TypeParameter{name: "rwlock", t: tm.createReference(tm.get("pthread_rwlock_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlock_init", tm.createFunction(false, [
    TypeParameter{name: "rwlock", t: tm.createReference(tm.get("pthread_rwlock_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_rwlockattr_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlock_rdlock", tm.createFunction(false, [
    TypeParameter{name: "rwlock", t: tm.createReference(tm.get("pthread_rwlock_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlock_timedrdlock", tm.createFunction(false, [
    TypeParameter{name: "rwlock", t: tm.createReference(tm.get("pthread_rwlock_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlock_timedwrlock", tm.createFunction(false, [
    TypeParameter{name: "rwlock", t: tm.createReference(tm.get("pthread_rwlock_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlock_tryrdlock", tm.createFunction(false, [
    TypeParameter{name: "rwlock", t: tm.createReference(tm.get("pthread_rwlock_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlock_trywrlock", tm.createFunction(false, [
    TypeParameter{name: "rwlock", t: tm.createReference(tm.get("pthread_rwlock_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlock_unlock", tm.createFunction(false, [
    TypeParameter{name: "rwlock", t: tm.createReference(tm.get("pthread_rwlock_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlock_wrlock", tm.createFunction(false, [
    TypeParameter{name: "rwlock", t: tm.createReference(tm.get("pthread_rwlock_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlockattr_destroy", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_rwlockattr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlockattr_getpshared", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_rwlockattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "pshared", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlockattr_init", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_rwlockattr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_rwlockattr_setpshared", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("pthread_rwlockattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "pshared", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_self", tm.createFunction(false, [], tm.get("pthread_t")), false)
  vm.add("pthread_setcancelstate", tm.createFunction(false, [
    TypeParameter{name: "state", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "oldstate", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_setcanceltype", tm.createFunction(false, [
    TypeParameter{name: "type", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "oldtype", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_setconcurrency", tm.createFunction(false, [
    TypeParameter{name: "level", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_setschedparam", tm.createFunction(false, [
    TypeParameter{name: "thread", t: tm.get("pthread_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "policy", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "param", t: tm.createReference(tm.get("sched_param")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_setschedprio", tm.createFunction(false, [
    TypeParameter{name: "thread", t: tm.get("pthread_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "priority", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_setspecific", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.get("pthread_key_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_spin_destroy", tm.createFunction(false, [
    TypeParameter{name: "lock", t: tm.createReference(tm.get("pthread_spinlock_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_spin_init", tm.createFunction(false, [
    TypeParameter{name: "lock", t: tm.createReference(tm.get("pthread_spinlock_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "pshared", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_spin_lock", tm.createFunction(false, [
    TypeParameter{name: "lock", t: tm.createReference(tm.get("pthread_spinlock_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_spin_trylock", tm.createFunction(false, [
    TypeParameter{name: "lock", t: tm.createReference(tm.get("pthread_spinlock_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_spin_unlock", tm.createFunction(false, [
    TypeParameter{name: "lock", t: tm.createReference(tm.get("pthread_spinlock_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_testcancel", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("pthread_cleanup_pop", tm.createFunction(false, [
    TypeParameter{name: "execute", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("pthread_cleanup_push", tm.createFunction(false, [
    TypeParameter{name: "routine", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    ], tm.get("void")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "arg", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("endpwent", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("getpwent", tm.createFunction(false, [], tm.createReference(tm.get("passwd"))), false)
  vm.add("getpwnam", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("passwd"))), false)
  vm.add("getpwnam_r", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "pwd", t: tm.createReference(tm.get("passwd")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.createReference(tm.get("passwd"))), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getpwuid", tm.createFunction(false, [
    TypeParameter{name: "uid", t: tm.get("uid_t"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("passwd"))), false)
  vm.add("getpwuid_r", tm.createFunction(false, [
    TypeParameter{name: "uid", t: tm.get("uid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "pwd", t: tm.createReference(tm.get("passwd")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.createReference(tm.get("passwd"))), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setpwent", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("regcomp", tm.createFunction(false, [
    TypeParameter{name: "preg", t: tm.createReference(tm.get("regex_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "pattern", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("regerror", tm.createFunction(false, [
    TypeParameter{name: "code", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "preg", t: tm.createReference(tm.get("regex_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("regexec", tm.createFunction(false, [
    TypeParameter{name: "preg", t: tm.createReference(tm.get("regex_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "string", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "matches", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "match", t: tm.createReference(tm.get("regmatch_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("regfree", tm.createFunction(false, [
    TypeParameter{name: "preg", t: tm.createReference(tm.get("regex_t")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("sched_get_priority_max", tm.createFunction(false, [
    TypeParameter{name: "policy", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sched_get_priority_min", tm.createFunction(false, [
    TypeParameter{name: "policy", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sched_getparam", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "param", t: tm.createReference(tm.get("sched_param")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sched_getscheduler", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sched_rr_get_interval", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "interval", t: tm.createReference(tm.get("timespec")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sched_setparam", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "param", t: tm.createReference(tm.get("sched_param")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sched_setscheduler", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "policy", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "param", t: tm.createReference(tm.get("sched_param")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sched_yield", tm.createFunction(false, [], tm.get("int")), false)
  vm.add("hcreate", tm.createFunction(false, [
    TypeParameter{name: "nel", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("hdestroy", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("hsearch", tm.createFunction(false, [
    TypeParameter{name: "item", t: tm.get("ENTRY"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "action", t: tm.get("ACTION"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("ENTRY"))), false)
  vm.add("insque", tm.createFunction(false, [
    TypeParameter{name: "element", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "pred", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("lfind", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "nel", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "width", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "comparator", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    ], tm.get("int")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("lsearch", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "nel", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "width", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "comparator", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    ], tm.get("int")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("remque", tm.createFunction(false, [
    TypeParameter{name: "element", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("tdelete", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "root", t: tm.createReference(tm.createReference(tm.get("any"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "comparator", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    ], tm.get("int")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("tfind", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "root", t: tm.createReference(tm.createReference(tm.get("any"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "comparator", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    ], tm.get("int")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("tsearch", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "root", t: tm.createReference(tm.createReference(tm.get("any"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "comparator", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    ], tm.get("int")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("twalk", tm.createFunction(false, [
    TypeParameter{name: "root", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "action", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.get("VISIT"), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.get("int"), mutable: false, required: true, variadic: false}
    ], tm.get("void")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("sem_close", tm.createFunction(false, [
    TypeParameter{name: "sem", t: tm.createReference(tm.get("sem_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sem_destroy", tm.createFunction(false, [
    TypeParameter{name: "sem", t: tm.createReference(tm.get("sem_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sem_getvalue", tm.createFunction(false, [
    TypeParameter{name: "sem", t: tm.createReference(tm.get("sem_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "val", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sem_init", tm.createFunction(false, [
    TypeParameter{name: "sem", t: tm.createReference(tm.get("sem_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "pshared", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.get("u32"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sem_open", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.createOptional(tm.get("mode_t")), mutable: false, required: false, variadic: false}
    TypeParameter{name: "value", t: tm.createOptional(tm.get("u32")), mutable: false, required: false, variadic: false}
  ], tm.createReference(tm.get("sem_t"))), false)
  vm.add("sem_post", tm.createFunction(false, [
    TypeParameter{name: "sem", t: tm.createReference(tm.get("sem_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sem_timedwait", tm.createFunction(false, [
    TypeParameter{name: "sem", t: tm.createReference(tm.get("sem_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sem_trywait", tm.createFunction(false, [
    TypeParameter{name: "sem", t: tm.createReference(tm.get("sem_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sem_unlink", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sem_wait", tm.createFunction(false, [
    TypeParameter{name: "sem", t: tm.createReference(tm.get("sem_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("longjmp", tm.createFunction(false, [
    TypeParameter{name: "env", t: tm.get("jmp_buf"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "val", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("siglongjmp", tm.createFunction(false, [
    TypeParameter{name: "env", t: tm.get("sigjmp_buf"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "val", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("setjmp", tm.createFunction(false, [
    TypeParameter{name: "env", t: tm.get("jmp_buf"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigsetjmp", tm.createFunction(false, [
    TypeParameter{name: "env", t: tm.get("sigjmp_buf"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mask", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("SIG_DFL", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("SIG_ERR", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("SIG_HOLD", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("SIG_IGN", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("kill", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("killpg", tm.createFunction(false, [
    TypeParameter{name: "pgrp", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("psiginfo", tm.createFunction(false, [
    TypeParameter{name: "info", t: tm.createReference(tm.get("siginfo_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "message", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("psignal", tm.createFunction(false, [
    TypeParameter{name: "signum", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "message", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("pthread_kill", tm.createFunction(false, [
    TypeParameter{name: "thread", t: tm.get("pthread_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pthread_sigmask", tm.createFunction(false, [
    TypeParameter{name: "how", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "oldset", t: tm.createReference(tm.get("sigset_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("raise", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigaction", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "action", t: tm.createReference(tm.get("sigaction_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "oldaction", t: tm.createReference(tm.get("sigaction_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigaddset", tm.createFunction(false, [
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "signum", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigaltstack", tm.createFunction(false, [
    TypeParameter{name: "stack", t: tm.createReference(tm.get("stack_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "oldstack", t: tm.createReference(tm.get("stack_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigdelset", tm.createFunction(false, [
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "signum", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigemptyset", tm.createFunction(false, [
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigfillset", tm.createFunction(false, [
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sighold", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigignore", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("siginterrupt", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigismember", tm.createFunction(false, [
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "signum", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigpause", tm.createFunction(false, [
    TypeParameter{name: "mask", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigpending", tm.createFunction(false, [
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigprocmask", tm.createFunction(false, [
    TypeParameter{name: "how", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "oldset", t: tm.createReference(tm.get("sigset_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigqueue", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "signum", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.get("sigval"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigrelse", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigsuspend", tm.createFunction(false, [
    TypeParameter{name: "sigmask", t: tm.createReference(tm.get("sigset_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigtimedwait", tm.createFunction(false, [
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "info", t: tm.createReference(tm.get("siginfo_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigwait", tm.createFunction(false, [
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "sig", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sigwaitinfo", tm.createFunction(false, [
    TypeParameter{name: "set", t: tm.createReference(tm.get("sigset_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "info", t: tm.createReference(tm.get("siginfo_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("signal", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "func", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.get("int"), mutable: false, required: true, variadic: false}
    ], tm.get("void")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("sigset", tm.createFunction(false, [
    TypeParameter{name: "sig", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "disp", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.get("int"), mutable: false, required: true, variadic: false}
    ], tm.get("void")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("spawn", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.createReference(tm.get("pid_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "file_actions", t: tm.createReference(tm.get("spawn_file_actions_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "args", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "env", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawn_file_actions_addclose", tm.createFunction(false, [
    TypeParameter{name: "file_actions", t: tm.createReference(tm.get("spawn_file_actions_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawn_file_actions_adddup2", tm.createFunction(false, [
    TypeParameter{name: "file_actions", t: tm.createReference(tm.get("spawn_file_actions_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "newfd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawn_file_actions_addopen", tm.createFunction(false, [
    TypeParameter{name: "file_actions", t: tm.createReference(tm.get("spawn_file_actions_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawn_file_actions_destroy", tm.createFunction(false, [
    TypeParameter{name: "file_actions", t: tm.createReference(tm.get("spawn_file_actions_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawn_file_actions_init", tm.createFunction(false, [
    TypeParameter{name: "file_actions", t: tm.createReference(tm.get("spawn_file_actions_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_destroy", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_getflags", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.createReference(tm.get("i16")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_getpgroup", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "pgroup", t: tm.createReference(tm.get("pid_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_getschedparam", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "schedparam", t: tm.createReference(tm.get("sched_param")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_getschedpolicy", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "schedpolicy", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_getsigdefault", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "sigdefault", t: tm.createReference(tm.get("sigset_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_getsigmask", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "sigmask", t: tm.createReference(tm.get("sigset_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_init", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_setflags", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("i16"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_setpgroup", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "pgroup", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_setschedparam", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "schedparam", t: tm.createReference(tm.get("sched_param")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_setschedpolicy", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "schedpolicy", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_setsigdefault", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "sigdefault", t: tm.createReference(tm.get("sigset_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnattr_setsigmask", tm.createFunction(false, [
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "sigmask", t: tm.createReference(tm.get("sigset_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("spawnp", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.createReference(tm.get("pid_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "file_actions", t: tm.createReference(tm.get("spawn_file_actions_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "attr", t: tm.createReference(tm.get("spawnattr_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "args", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "env", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("clearerr", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("ctermid", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("dprintf", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("fclose", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fdopen", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("FILE"))), false)
  vm.add("feof", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("ferror", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fflush", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fgetc", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fgetpos", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "pos", t: tm.createReference(tm.get("fpos_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fgets", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("fileno", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("flockfile", tm.createFunction(false, [
    TypeParameter{name: "file", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("fmemopen", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("FILE"))), false)
  vm.add("fopen", tm.createFunction(false, [
    TypeParameter{name: "pathname", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("FILE"))), false)
  vm.add("fprintf", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("fputc", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fputs", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fread", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "nitems", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("freopen", tm.createFunction(false, [
    TypeParameter{name: "pathname", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.createReference(tm.get("FILE"))), false)
  vm.add("fscanf", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("fseek", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "offset", t: tm.get("i64"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "whence", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fseeko", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "offset", t: tm.get("off_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "whence", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fsetpos", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "pos", t: tm.createReference(tm.get("fpos_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("ftell", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("ftello", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("off_t")), false)
  vm.add("ftrylockfile", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("funlockfile", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("fwrite", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "nitems", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("getc", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getchar", tm.createFunction(false, [], tm.get("int")), false)
  vm.add("getc_unlocked", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getchar_unlocked", tm.createFunction(false, [], tm.get("int")), false)
  vm.add("getdelim", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "delimiter", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("getline", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("gets", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("open_memstream", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
  ], tm.createReference(tm.get("FILE"))), false)
  vm.add("pclose", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("perror", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("popen", tm.createFunction(false, [
    TypeParameter{name: "command", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("FILE"))), false)
  vm.add("printf", tm.createFunction(false, [
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("putc", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("putchar", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("putc_unlocked", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("putchar_unlocked", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("puts", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("remove", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("rename", tm.createFunction(false, [
    TypeParameter{name: "old", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "new", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("renameat", tm.createFunction(false, [
    TypeParameter{name: "oldfd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "oldpath", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "newfd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "newpath", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("rewind", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("scanf", tm.createFunction(false, [
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("setbuf", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("setvbuf", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "type", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("snprintf", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("sprintf", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("sscanf", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("tempnam", tm.createFunction(false, [
    TypeParameter{name: "dir", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "prefix", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("tmpfile", tm.createFunction(false, [], tm.createReference(tm.get("FILE"))), false)
  vm.add("tmpnam", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("ungetc", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("a64l", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("abort", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("abs", tm.createFunction(false, [
    TypeParameter{name: "i", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("atexit", tm.createFunction(false, [
    TypeParameter{name: "func", t: tm.createFunction(false, [], tm.get("void")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("atof", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("atoi", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("atol", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("atoll", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("bsearch", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ptr", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "comparator", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    ], tm.get("int")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("calloc", tm.createFunction(false, [
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("div", tm.createFunction(false, [
    TypeParameter{name: "numer", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "denom", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("div_t")), false)
  vm.add("drand48", tm.createFunction(false, [], tm.get("float")), false)
  vm.add("erand48", tm.createFunction(false, [
    TypeParameter{name: "xsubi", t: tm.createArray(tm.get("u16")), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("exit", tm.createFunction(false, [
    TypeParameter{name: "status", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("free", tm.createFunction(false, [
    TypeParameter{name: "ptr", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("getenv", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("getsubopt", tm.createFunction(false, [
    TypeParameter{name: "option", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "keys", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("grantpt", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("initstate", tm.createFunction(false, [
    TypeParameter{name: "seed", t: tm.get("u32"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "state", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("jrand48", tm.createFunction(false, [
    TypeParameter{name: "xsubi", t: tm.createArray(tm.get("u16")), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("l64a", tm.createFunction(false, [
    TypeParameter{name: "value", t: tm.get("i64"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("labs", tm.createFunction(false, [
    TypeParameter{name: "i", t: tm.get("i64"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("lcong48", tm.createFunction(false, [
    TypeParameter{name: "param", t: tm.createArray(tm.get("u16")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("ldiv", tm.createFunction(false, [
    TypeParameter{name: "numer", t: tm.get("i64"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "denom", t: tm.get("i64"), mutable: false, required: true, variadic: false}
  ], tm.get("ldiv_t")), false)
  vm.add("llabs", tm.createFunction(false, [
    TypeParameter{name: "i", t: tm.get("i64"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("lldiv", tm.createFunction(false, [
    TypeParameter{name: "numer", t: tm.get("i64"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "denom", t: tm.get("i64"), mutable: false, required: true, variadic: false}
  ], tm.get("lldiv_t")), false)
  vm.add("lrand48", tm.createFunction(false, [], tm.get("i64")), false)
  vm.add("malloc", tm.createFunction(false, [
    TypeParameter{name: "size", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("mblen", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mbstowcs", tm.createFunction(false, [
    TypeParameter{name: "wcs", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("mbtowc", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mkdtemp", tm.createFunction(false, [
    TypeParameter{name: "template", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("mkstemp", tm.createFunction(false, [
    TypeParameter{name: "template", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mrand48", tm.createFunction(false, [], tm.get("i64")), false)
  vm.add("nrand48", tm.createFunction(false, [
    TypeParameter{name: "xsubi", t: tm.createArray(tm.get("u16")), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("memalign", tm.createFunction(false, [
    TypeParameter{name: "memptr", t: tm.createReference(tm.createReference(tm.get("any"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "alignment", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("openpt", tm.createFunction(false, [
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("ptsname", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("putenv", tm.createFunction(false, [
    TypeParameter{name: "string", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("qsort", tm.createFunction(false, [
    TypeParameter{name: "ptr", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "comparator", t: tm.createFunction(false, [
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
      TypeParameter{name: nil, t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    ], tm.get("int")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("rand", tm.createFunction(false, [], tm.get("int")), false)
  vm.add("random", tm.createFunction(false, [], tm.get("i64")), false)
  vm.add("realloc", tm.createFunction(false, [
    TypeParameter{name: "ptr", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("realpath", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "resolved_path", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("seed48", tm.createFunction(false, [
    TypeParameter{name: "seed16v", t: tm.createArray(tm.get("u16")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("u16"))), false)
  vm.add("setenv", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "overwrite", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setkey", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("setstate", tm.createFunction(false, [
    TypeParameter{name: "state", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("srand", tm.createFunction(false, [
    TypeParameter{name: "seed", t: tm.get("u32"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("srand48", tm.createFunction(false, [
    TypeParameter{name: "seedval", t: tm.get("i64"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("srandom", tm.createFunction(false, [
    TypeParameter{name: "seed", t: tm.get("u32"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("strtod", tm.createFunction(false, [
    TypeParameter{name: "n", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("strtof", tm.createFunction(false, [
    TypeParameter{name: "n", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("strtol", tm.createFunction(false, [
    TypeParameter{name: "n", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("strtoll", tm.createFunction(false, [
    TypeParameter{name: "n", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("strtoul", tm.createFunction(false, [
    TypeParameter{name: "n", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("u64")), false)
  vm.add("strtoull", tm.createFunction(false, [
    TypeParameter{name: "n", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("u64")), false)
  vm.add("system", tm.createFunction(false, [
    TypeParameter{name: "command", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("unlockpt", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("unsetenv", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcstombs", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "max", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wctomb", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "wc", t: tm.get("rune"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("memccpy", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("memchr", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("memcmp", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("memcpy", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("memmove", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("memset", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("stpcpy", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("stpncpy", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strcat", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strchr", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strcmp", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("strcoll", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("strcoll_l", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("strcpy", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strcspn", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("strdup", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strerror", tm.createFunction(false, [
    TypeParameter{name: "errnum", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strerror_l", tm.createFunction(false, [
    TypeParameter{name: "errnum", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strerror_r", tm.createFunction(false, [
    TypeParameter{name: "errnum", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("strlen", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("strncat", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strncmp", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("strncpy", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strndup", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strnlen", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("strpbrk", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strrchr", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strsignal", tm.createFunction(false, [
    TypeParameter{name: "signum", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strspn", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("strstr", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strtok", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "sep", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strtok_r", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "sep", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "state", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("strxfrm", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("strxfrm_l", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("ffs", tm.createFunction(false, [
    TypeParameter{name: "i", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("strcasecmp", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("strcasecmp_l", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("strncasecmp", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("strncasecmp_l", tm.createFunction(false, [
    TypeParameter{name: "s1", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "s2", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("ftok", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "id", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("key_t")), false)
  vm.add("mlock", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mlockall", tm.createFunction(false, [
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mmap", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "protection", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "offset", t: tm.get("off_t"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("mprotect", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "protection", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("msync", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("munlock", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("munlockall", tm.createFunction(false, [], tm.get("int")), false)
  vm.add("munmap", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("madvise", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "advice", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mem_offset", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "offset", t: tm.createReference(tm.get("off_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "config_length", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "fd", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("typed_mem_get_info", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "info", t: tm.createReference(tm.get("typed_mem_info")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("typed_mem_open", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "oflag", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "tflag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("shm_open", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("shm_unlink", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("msgctl", tm.createFunction(false, [
    TypeParameter{name: "msqid", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "cmd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("msqid_ds")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("msgget", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.get("key_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("msgrcv", tm.createFunction(false, [
    TypeParameter{name: "msqid", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "type", t: tm.get("i64"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("msgsnd", tm.createFunction(false, [
    TypeParameter{name: "msqid", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getpriority", tm.createFunction(false, [
    TypeParameter{name: "which", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "who", t: tm.get("id_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getrlimit", tm.createFunction(false, [
    TypeParameter{name: "resource", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "rl", t: tm.createReference(tm.get("rlimit")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getrusage", tm.createFunction(false, [
    TypeParameter{name: "whoe", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ru", t: tm.createReference(tm.get("rusage")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setpriority", tm.createFunction(false, [
    TypeParameter{name: "which", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "who", t: tm.get("id_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setrlimit", tm.createFunction(false, [
    TypeParameter{name: "resource", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "rl", t: tm.createReference(tm.get("rlimit")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("FD_CLR", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "fdset", t: tm.createReference(tm.get("fd_set")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("FD_ISSET", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "fdset", t: tm.createReference(tm.get("fd_set")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("FD_SET", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "fdset", t: tm.createReference(tm.get("fd_set")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("FD_ZERO", tm.createFunction(false, [
    TypeParameter{name: "fdset", t: tm.createReference(tm.get("fd_set")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("pselect", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "readfds", t: tm.createReference(tm.get("fd_set")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "writefds", t: tm.createReference(tm.get("fd_set")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "errorfds", t: tm.createReference(tm.get("fd_set")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mask", t: tm.createReference(tm.get("sigset_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("select", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "readfds", t: tm.createReference(tm.get("fd_set")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "writefds", t: tm.createReference(tm.get("fd_set")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "errorfds", t: tm.createReference(tm.get("fd_set")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "timeout", t: tm.createReference(tm.get("timeval")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("semctl", tm.createFunction(false, [
    TypeParameter{name: "semid", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "semnum", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "cmd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "arg", t: tm.createOptional(tm.get("semun")), mutable: false, required: false, variadic: false}
  ], tm.get("int")), false)
  vm.add("semget", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.get("key_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("semop", tm.createFunction(false, [
    TypeParameter{name: "semid", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "operations", t: tm.createReference(tm.get("sembuf")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("shmat", tm.createFunction(false, [
    TypeParameter{name: "shmid", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "addr", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("shmctl", tm.createFunction(false, [
    TypeParameter{name: "shmid", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "cmd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("shmid_ds")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("shmdt", tm.createFunction(false, [
    TypeParameter{name: "addr", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("shmget", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.get("key_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("CMSG_DATA", tm.createFunction(false, [
    TypeParameter{name: "cmsg", t: tm.createReference(tm.get("cmsghdr")), mutable: true, required: true, variadic: false}
  ], tm.createReference(tm.get("any"))), false)
  vm.add("CMSG_NXTHDR", tm.createFunction(false, [
    TypeParameter{name: "mhdr", t: tm.createReference(tm.get("msghdr")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "cmsg", t: tm.createReference(tm.get("cmsghdr")), mutable: true, required: true, variadic: false}
  ], tm.createReference(tm.get("cmsghdr"))), false)
  vm.add("CMSG_FIRSTHDR", tm.createFunction(false, [
    TypeParameter{name: "mhdr", t: tm.createReference(tm.get("msghdr")), mutable: true, required: true, variadic: false}
  ], tm.createReference(tm.get("cmsghdr"))), false)
  vm.add("accept", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "address", t: tm.createReference(tm.get("sockaddr")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.createReference(tm.get("socklen_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("bind", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "address", t: tm.createReference(tm.get("sockaddr")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("socklen_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("connect", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "address", t: tm.createReference(tm.get("sockaddr")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("socklen_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getpeername", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "address", t: tm.createReference(tm.get("sockaddr")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.createReference(tm.get("socklen_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getsockname", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "address", t: tm.createReference(tm.get("sockaddr")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.createReference(tm.get("socklen_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getsockopt", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "level", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "option", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.createReference(tm.get("socklen_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("listen", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "backlog", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("recv", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("recvfrom", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "address", t: tm.createReference(tm.get("sockaddr")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "address_len", t: tm.createReference(tm.get("socklen_t")), mutable: true, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("recvmsg", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "message", t: tm.createReference(tm.get("msghdr")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("send", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("sendmsg", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "message", t: tm.createReference(tm.get("msghdr")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("sendto", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "message", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "address", t: tm.createReference(tm.get("sockaddr")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "address_len", t: tm.get("socklen_t"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("setsockopt", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "level", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "option", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("socklen_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("shutdown", tm.createFunction(false, [
    TypeParameter{name: "socket", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "how", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sockatmark", tm.createFunction(false, [
    TypeParameter{name: "s", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("socket", tm.createFunction(false, [
    TypeParameter{name: "domain", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "type", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "protocol", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("socketpair", tm.createFunction(false, [
    TypeParameter{name: "domain", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "type", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "protocol", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "socket", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("S_ISBLK", tm.createFunction(false, [
    TypeParameter{name: "m", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("S_ISCHR", tm.createFunction(false, [
    TypeParameter{name: "m", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("S_ISDIR", tm.createFunction(false, [
    TypeParameter{name: "m", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("S_ISFIFO", tm.createFunction(false, [
    TypeParameter{name: "m", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("S_ISREG", tm.createFunction(false, [
    TypeParameter{name: "m", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("S_ISLNK", tm.createFunction(false, [
    TypeParameter{name: "m", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("S_ISSOCK", tm.createFunction(false, [
    TypeParameter{name: "m", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("S_TYPEISMQ", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("stat_t")), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("S_TYPEISSEM", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("stat_t")), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("S_TYPEISSHM", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("stat_t")), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("S_TYPEISTMO", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("stat_t")), mutable: false, required: true, variadic: false}
  ], tm.get("bool")), false)
  vm.add("chmod", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fchmod", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fchmodat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fstat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("stat_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fstatat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("stat_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("futimens", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "times", t: tm.createArray(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("lstat", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("stat_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mkdir", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mkdirat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mkfifo", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mkfifoat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mknod", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "dev", t: tm.get("dev_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mknodat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "dev", t: tm.get("dev_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("stat", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("stat_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("umask", tm.createFunction(false, [
    TypeParameter{name: "mask", t: tm.get("mode_t"), mutable: false, required: true, variadic: false}
  ], tm.get("mode_t")), false)
  vm.add("utimensat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "times", t: tm.createArray(tm.get("timespec")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fstatvfs", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("statvfs_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("statvfs", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("statvfs_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getitimer", tm.createFunction(false, [
    TypeParameter{name: "which", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createReference(tm.get("itimerval")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("gettimeofday", tm.createFunction(false, [
    TypeParameter{name: "tv", t: tm.createReference(tm.get("timeval")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "tz", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setitimer", tm.createFunction(false, [
    TypeParameter{name: "which", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createReference(tm.get("itimerval")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "old_value", t: tm.createReference(tm.get("itimerval")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("utimes", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "times", t: tm.createArray(tm.get("timeval")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("times", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("tms")), mutable: true, required: true, variadic: false}
  ], tm.get("clock_t")), false)
  vm.add("readv", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "iov", t: tm.createReference(tm.get("iovec")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("writev", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "iov", t: tm.createReference(tm.get("iovec")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("WEXITSTATUS", tm.createFunction(false, [
    TypeParameter{name: "status", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("WIFCONTINUED", tm.createFunction(false, [
    TypeParameter{name: "status", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("WIFEXITED", tm.createFunction(false, [
    TypeParameter{name: "status", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("WIFSIGNALED", tm.createFunction(false, [
    TypeParameter{name: "status", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("WIFSTOPPED", tm.createFunction(false, [
    TypeParameter{name: "status", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("WSTOPSIG", tm.createFunction(false, [
    TypeParameter{name: "status", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("WTERMSIG", tm.createFunction(false, [
    TypeParameter{name: "status", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wait", tm.createFunction(false, [
    TypeParameter{name: "loc", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("pid_t")), false)
  vm.add("waitid", tm.createFunction(false, [
    TypeParameter{name: "idtype", t: tm.get("idtype_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "id", t: tm.get("id_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "info", t: tm.createReference(tm.get("siginfo_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "options", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("waitpid", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "loc", t: tm.createReference(tm.get("int")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "options", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("pid_t")), false)
  vm.add("LOG_MASK", tm.createFunction(false, [
    TypeParameter{name: "pri", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("closelog", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("openlog", tm.createFunction(false, [
    TypeParameter{name: "ident", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "option", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "facility", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("setlogmask", tm.createFunction(false, [
    TypeParameter{name: "mask", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("syslog", tm.createFunction(false, [
    TypeParameter{name: "priority", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("void")), false)
  vm.add("cfgetispeed", tm.createFunction(false, [
    TypeParameter{name: "termios", t: tm.createReference(tm.get("termios")), mutable: false, required: true, variadic: false}
  ], tm.get("speed_t")), false)
  vm.add("cfgetospeed", tm.createFunction(false, [
    TypeParameter{name: "termios", t: tm.createReference(tm.get("termios")), mutable: false, required: true, variadic: false}
  ], tm.get("speed_t")), false)
  vm.add("cfsetispeed", tm.createFunction(false, [
    TypeParameter{name: "termios", t: tm.createReference(tm.get("termios")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "speed", t: tm.get("speed_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("cfsetospeed", tm.createFunction(false, [
    TypeParameter{name: "termios", t: tm.createReference(tm.get("termios")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "speed", t: tm.get("speed_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("tcdrain", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("tcflow", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "action", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("tcflush", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "queue_selector", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("tcgetattr", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "termios", t: tm.createReference(tm.get("termios")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("tcgetsid", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("pid_t")), false)
  vm.add("tcsendbreak", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "duration", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("tcsetattr", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "actions", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "termios", t: tm.createReference(tm.get("termios")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("asctime", tm.createFunction(false, [
    TypeParameter{name: "time", t: tm.createReference(tm.get("tm")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("asctime_r", tm.createFunction(false, [
    TypeParameter{name: "time", t: tm.createReference(tm.get("tm")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("clock", tm.createFunction(false, [], tm.get("clock_t")), false)
  vm.add("clock_getcpuclockid", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "clock", t: tm.createReference(tm.get("clockid_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("clock_getres", tm.createFunction(false, [
    TypeParameter{name: "clock", t: tm.get("clockid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.get("timespec")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("clock_gettime", tm.createFunction(false, [
    TypeParameter{name: "clock", t: tm.get("clockid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.get("timespec")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("clock_nanosleep", tm.createFunction(false, [
    TypeParameter{name: "clock", t: tm.get("clockid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "req", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "rem", t: tm.createReference(tm.get("timespec")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("clock_settime", tm.createFunction(false, [
    TypeParameter{name: "clock", t: tm.get("clockid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("ctime", tm.createFunction(false, [
    TypeParameter{name: "clock", t: tm.createReference(tm.get("time_t")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("ctime_r", tm.createFunction(false, [
    TypeParameter{name: "clock", t: tm.createReference(tm.get("time_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("difftime", tm.createFunction(false, [
    TypeParameter{name: "t1", t: tm.get("time_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "t2", t: tm.get("time_t"), mutable: false, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("getdate", tm.createFunction(false, [
    TypeParameter{name: "string", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("tm"))), false)
  vm.add("gmtime", tm.createFunction(false, [
    TypeParameter{name: "timer", t: tm.createReference(tm.get("time_t")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("tm"))), false)
  vm.add("gmtime_r", tm.createFunction(false, [
    TypeParameter{name: "timer", t: tm.createReference(tm.get("time_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.get("tm")), mutable: true, required: true, variadic: false}
  ], tm.createReference(tm.get("tm"))), false)
  vm.add("localtime", tm.createFunction(false, [
    TypeParameter{name: "timer", t: tm.createReference(tm.get("time_t")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("tm"))), false)
  vm.add("localtime_r", tm.createFunction(false, [
    TypeParameter{name: "timer", t: tm.createReference(tm.get("time_t")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "result", t: tm.createReference(tm.get("tm")), mutable: true, required: true, variadic: false}
  ], tm.createReference(tm.get("tm"))), false)
  vm.add("mktime", tm.createFunction(false, [
    TypeParameter{name: "time", t: tm.createReference(tm.get("tm")), mutable: true, required: true, variadic: false}
  ], tm.get("time_t")), false)
  vm.add("nanosleep", tm.createFunction(false, [
    TypeParameter{name: "req", t: tm.createReference(tm.get("timespec")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "rem", t: tm.createReference(tm.get("timespec")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("strftime", tm.createFunction(false, [
    TypeParameter{name: "string", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "time", t: tm.createReference(tm.get("tm")), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("strftime_l", tm.createFunction(false, [
    TypeParameter{name: "string", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "time", t: tm.createReference(tm.get("tm")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("strptime", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "time", t: tm.createReference(tm.get("tm")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("time", tm.createFunction(false, [
    TypeParameter{name: "clock", t: tm.createReference(tm.get("time_t")), mutable: true, required: true, variadic: false}
  ], tm.get("time_t")), false)
  vm.add("timer_create", tm.createFunction(false, [
    TypeParameter{name: "clock", t: tm.get("clockid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "sig", t: tm.createReference(tm.get("sigevent")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "timer", t: tm.createReference(tm.get("timer_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("timer_delete", tm.createFunction(false, [
    TypeParameter{name: "timer", t: tm.get("timer_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("timer_getoverrun", tm.createFunction(false, [
    TypeParameter{name: "timer", t: tm.get("timer_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("timer_gettime", tm.createFunction(false, [
    TypeParameter{name: "timer", t: tm.get("timer_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createReference(tm.get("itimerspec")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("timer_settime", tm.createFunction(false, [
    TypeParameter{name: "timer", t: tm.get("timer_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createReference(tm.get("itimerspec")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "oldvalue", t: tm.createReference(tm.get("itimerspec")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("tzset", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("access", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("alarm", tm.createFunction(false, [
    TypeParameter{name: "seconds", t: tm.get("u32"), mutable: false, required: true, variadic: false}
  ], tm.get("u32")), false)
  vm.add("chdir", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("chown", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "owner", t: tm.get("uid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "group", t: tm.get("gid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("close", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("confstr", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("crypt", tm.createFunction(false, [
    TypeParameter{name: "key", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "salt", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("dup", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("dup2", tm.createFunction(false, [
    TypeParameter{name: "fd1", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "fd2", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("encrypt", tm.createFunction(false, [
    TypeParameter{name: "block", t: tm.createArray(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("execl", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "arg0", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("execle", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "arg0", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
    TypeParameter{name: "env", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("execlp", tm.createFunction(false, [
    TypeParameter{name: "file", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "arg0", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "value", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("execv", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "args", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("execve", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "args", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "env", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("execvp", tm.createFunction(false, [
    TypeParameter{name: "file", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "args", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("faccessat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fchdir", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fchown", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "owner", t: tm.get("uid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "group", t: tm.get("gid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fchownat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "owner", t: tm.get("uid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "group", t: tm.get("gid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fdatasync", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fexecve", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "args", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "env", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fork", tm.createFunction(false, [], tm.get("pid_t")), false)
  vm.add("fpathconf", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "name", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("fsync", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("ftruncate", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("off_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getcwd", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("getegid", tm.createFunction(false, [], tm.get("gid_t")), false)
  vm.add("geteuid", tm.createFunction(false, [], tm.get("uid_t")), false)
  vm.add("getgid", tm.createFunction(false, [], tm.get("gid_t")), false)
  vm.add("getgroups", tm.createFunction(false, [
    TypeParameter{name: "length", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "groups", t: tm.createReference(tm.get("gid_t")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("gethostid", tm.createFunction(false, [], tm.get("i64")), false)
  vm.add("gethostname", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getlogin", tm.createFunction(false, [], tm.createArray(tm.get("char"))), false)
  vm.add("getlogin_r", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getopt", tm.createFunction(false, [
    TypeParameter{name: "argc", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "argv", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "option", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("getpgid", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("pid_t")), false)
  vm.add("getpgrp", tm.createFunction(false, [], tm.get("pid_t")), false)
  vm.add("getpid", tm.createFunction(false, [], tm.get("pid_t")), false)
  vm.add("getppid", tm.createFunction(false, [], tm.get("pid_t")), false)
  vm.add("getsid", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("pid_t")), false)
  vm.add("getuid", tm.createFunction(false, [], tm.get("uid_t")), false)
  vm.add("isatty", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("lchown", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "owner", t: tm.get("uid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "group", t: tm.get("gid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("link", tm.createFunction(false, [
    TypeParameter{name: "target", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("linkat", tm.createFunction(false, [
    TypeParameter{name: "fd1", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "target", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "fd2", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("lockf", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "function", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "size", t: tm.get("off_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("lseek", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "offset", t: tm.get("off_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "whence", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("off_t")), false)
  vm.add("nice", tm.createFunction(false, [
    TypeParameter{name: "increment", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pathconf", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "name", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("pause", tm.createFunction(false, [], tm.get("int")), false)
  vm.add("pipe", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.createArray(tm.get("int")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("pread", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "offset", t: tm.get("off_t"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("pwrite", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "offset", t: tm.get("off_t"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("read", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("readlink", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("readlinkat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("rmdir", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setegid", tm.createFunction(false, [
    TypeParameter{name: "group", t: tm.get("gid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("seteuid", tm.createFunction(false, [
    TypeParameter{name: "user", t: tm.get("uid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setgid", tm.createFunction(false, [
    TypeParameter{name: "group", t: tm.get("gid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setpgid", tm.createFunction(false, [
    TypeParameter{name: "pid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "pgid", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setpgrp", tm.createFunction(false, [], tm.get("pid_t")), false)
  vm.add("setregid", tm.createFunction(false, [
    TypeParameter{name: "rgid", t: tm.get("gid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "egid", t: tm.get("gid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setreuid", tm.createFunction(false, [
    TypeParameter{name: "ruid", t: tm.get("uid_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "euid", t: tm.get("uid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("setsid", tm.createFunction(false, [], tm.get("pid_t")), false)
  vm.add("setuid", tm.createFunction(false, [
    TypeParameter{name: "user", t: tm.get("uid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sleep", tm.createFunction(false, [
    TypeParameter{name: "seconds", t: tm.get("u32"), mutable: false, required: true, variadic: false}
  ], tm.get("u32")), false)
  vm.add("swab", tm.createFunction(false, [
    TypeParameter{name: "src", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "dest", t: tm.createReference(tm.get("any")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("isize"), mutable: false, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("symlink", tm.createFunction(false, [
    TypeParameter{name: "target", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("symlinkat", tm.createFunction(false, [
    TypeParameter{name: "target", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("sync", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("sysconf", tm.createFunction(false, [
    TypeParameter{name: "name", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("tcgetpgrp", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("pid_t")), false)
  vm.add("tcsetpgrp", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "group", t: tm.get("pid_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("truncate", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("off_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("ttyname", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("char"))), false)
  vm.add("ttyname_r", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("unlink", tm.createFunction(false, [
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("unlinkat", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "path", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "flag", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("write", tm.createFunction(false, [
    TypeParameter{name: "fd", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createReference(tm.get("any")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("isize")), false)
  vm.add("endutxent", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("getutxent", tm.createFunction(false, [], tm.createReference(tm.get("utmpx"))), false)
  vm.add("getutxid", tm.createFunction(false, [
    TypeParameter{name: "id", t: tm.createReference(tm.get("utmpx")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("utmpx"))), false)
  vm.add("getutxline", tm.createFunction(false, [
    TypeParameter{name: "line", t: tm.createReference(tm.get("utmpx")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("utmpx"))), false)
  vm.add("pututxline", tm.createFunction(false, [
    TypeParameter{name: "line", t: tm.createReference(tm.get("utmpx")), mutable: false, required: true, variadic: false}
  ], tm.createReference(tm.get("utmpx"))), false)
  vm.add("setutxent", tm.createFunction(false, [], tm.get("void")), false)
  vm.add("btowc", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("fgetwc", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("fgetws", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("int"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("fputwc", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("rune"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("fputws", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fwide", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "mode", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("fwprintf", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("fwscanf", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("getwc", tm.createFunction(false, [
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("getwchar", tm.createFunction(false, [], tm.get("wint_t")), false)
  vm.add("mbrlen", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "state", t: tm.createReference(tm.get("mbstate_t")), mutable: true, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("mbrtowc", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "buf", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "state", t: tm.createReference(tm.get("mbstate_t")), mutable: true, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("mbsinit", tm.createFunction(false, [
    TypeParameter{name: "state", t: tm.createReference(tm.get("mbstate_t")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("mbsnrtowcs", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "nmc", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "state", t: tm.createReference(tm.get("mbstate_t")), mutable: true, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("mbsrtowcs", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createReference(tm.createArray(tm.get("char"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "state", t: tm.createReference(tm.get("mbstate_t")), mutable: true, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("open_wmemstream", tm.createFunction(false, [
    TypeParameter{name: "buf", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.createReference(tm.get("usize")), mutable: true, required: true, variadic: false}
  ], tm.createReference(tm.get("FILE"))), false)
  vm.add("putwc", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("rune"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("putwchar", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("rune"), mutable: false, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("swprintf", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("swscanf", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("ungetwc", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "stream", t: tm.createReference(tm.get("FILE")), mutable: true, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("wcpcpy", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcpncpy", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcrtomb", tm.createFunction(false, [
    TypeParameter{name: "string", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "wc", t: tm.get("rune"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "state", t: tm.createReference(tm.get("mbstate_t")), mutable: true, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wcscasecmp", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcscasecmp_l", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcscat", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcschr", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "wc", t: tm.get("rune"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcscmp", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcscoll", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcscoll_l", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcscpy", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcscspn", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wcsdup", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcsftime", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "format", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "time", t: tm.createReference(tm.get("tm")), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wcslen", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wcsncasecmp", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcsncasecmp_l", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcsncat", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcsncmp", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcsncpy", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcsnlen", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wcsnrtombs", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "nwc", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "length", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "state", t: tm.createReference(tm.get("mbstate_t")), mutable: true, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wcspbrk", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcsrchr", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "wc", t: tm.get("rune"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcsrtombs", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("char")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: false, required: true, variadic: false}
    TypeParameter{name: "nwc", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "state", t: tm.createReference(tm.get("mbstate_t")), mutable: true, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wcsspn", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wcsstr", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcstod", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: true, required: true, variadic: false}
  ], tm.get("float")), false)
  vm.add("wcstof", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: true, required: true, variadic: false}
  ], tm.get("f32")), false)
  vm.add("wcstok", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "delimiter", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ptr", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: true, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wcstol", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("wcstoll", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("i64")), false)
  vm.add("wcstoul", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("u64")), false)
  vm.add("wcstoull", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "end", t: tm.createReference(tm.createArray(tm.get("rune"))), mutable: true, required: true, variadic: false}
    TypeParameter{name: "base", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("u64")), false)
  vm.add("wcswidth", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "n", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcsxfrm", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wcsxfrm_l", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("usize")), false)
  vm.add("wctob", tm.createFunction(false, [
    TypeParameter{name: "c", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wcwidth", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("rune"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wmemchr", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "wc", t: tm.get("rune"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wmemcmp", tm.createFunction(false, [
    TypeParameter{name: "ws1", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "ws2", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wmemcpy", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wmemmove", tm.createFunction(false, [
    TypeParameter{name: "dest", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "src", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wmemset", tm.createFunction(false, [
    TypeParameter{name: "ws", t: tm.createReference(tm.get("rune")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "wc", t: tm.get("rune"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "count", t: tm.get("usize"), mutable: false, required: true, variadic: false}
  ], tm.createArray(tm.get("rune"))), false)
  vm.add("wprintf", tm.createFunction(false, [
    TypeParameter{name: "format", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("wscanf", tm.createFunction(false, [
    TypeParameter{name: "format", t: tm.createArray(tm.get("rune")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "values", t: tm.createArray(tm.get("any")), mutable: false, required: false, variadic: true}
  ], tm.get("int")), false)
  vm.add("iswalnum", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswalnum_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswalpha", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswalpha_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswblank", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswblank_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswcntrl", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswcntrl_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswctype", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "charclass", t: tm.get("wctype_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswctype_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "charclass", t: tm.get("wctype_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswdigit", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswdigit_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswgraph", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswgraph_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswlower", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswlower_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswprint", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswprint_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswpunct", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswpunct_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswspace", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswspace_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswupper", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswupper_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswxdigit", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("iswxdigit_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("towctrans", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "desc", t: tm.get("wctrans_t"), mutable: false, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("towctrans_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "desc", t: tm.get("wctrans_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("towlower", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("towlower_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("towupper", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("towupper_l", tm.createFunction(false, [
    TypeParameter{name: "wc", t: tm.get("wint_t"), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("wint_t")), false)
  vm.add("wctrans", tm.createFunction(false, [
    TypeParameter{name: "charclass", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("wctrans_t")), false)
  vm.add("wctrans_l", tm.createFunction(false, [
    TypeParameter{name: "charclass", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("wctrans_t")), false)
  vm.add("wctype", tm.createFunction(false, [
    TypeParameter{name: "property", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
  ], tm.get("wctype_t")), false)
  vm.add("wctype_l", tm.createFunction(false, [
    TypeParameter{name: "property", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "locale", t: tm.get("locale_t"), mutable: false, required: true, variadic: false}
  ], tm.get("wctype_t")), false)
  vm.add("wordexp", tm.createFunction(false, [
    TypeParameter{name: "words", t: tm.createArray(tm.get("char")), mutable: false, required: true, variadic: false}
    TypeParameter{name: "wordexp", t: tm.createReference(tm.get("wordexp_t")), mutable: true, required: true, variadic: false}
    TypeParameter{name: "flags", t: tm.get("int"), mutable: false, required: true, variadic: false}
  ], tm.get("int")), false)
  vm.add("wordfree", tm.createFunction(false, [
    TypeParameter{name: "wordexp", t: tm.createReference(tm.get("wordexp_t")), mutable: true, required: true, variadic: false}
  ], tm.get("void")), false)
  vm.add("AIO_ALLDONE", tm.get("int"), false)
  vm.add("AIO_CANCELED", tm.get("int"), false)
  vm.add("AIO_NOTCANCELED", tm.get("int"), false)
  vm.add("LIO_NOP", tm.get("int"), false)
  vm.add("LIO_NOWAIT", tm.get("int"), false)
  vm.add("LIO_READ", tm.get("int"), false)
  vm.add("LIO_WAIT", tm.get("int"), false)
  vm.add("LIO_WRITE", tm.get("int"), false)
  vm.add("C_IRUSR", tm.get("int"), false)
  vm.add("C_IWUSR", tm.get("int"), false)
  vm.add("C_IXUSR", tm.get("int"), false)
  vm.add("C_IRGRP", tm.get("int"), false)
  vm.add("C_IWGRP", tm.get("int"), false)
  vm.add("C_IXGRP", tm.get("int"), false)
  vm.add("C_IROTH", tm.get("int"), false)
  vm.add("C_IWOTH", tm.get("int"), false)
  vm.add("C_IXOTH", tm.get("int"), false)
  vm.add("C_ISUID", tm.get("int"), false)
  vm.add("C_ISGID", tm.get("int"), false)
  vm.add("C_ISVTX", tm.get("int"), false)
  vm.add("C_ISDIR", tm.get("int"), false)
  vm.add("C_ISFIFO", tm.get("int"), false)
  vm.add("C_ISREG", tm.get("int"), false)
  vm.add("C_ISBLK", tm.get("int"), false)
  vm.add("C_ISCHR", tm.get("int"), false)
  vm.add("C_ISCTG", tm.get("int"), false)
  vm.add("C_ISLNK", tm.get("int"), false)
  vm.add("C_ISSOCK", tm.get("int"), false)
  vm.add("MAGIC", tm.createArray(tm.get("char")), false)
  vm.add("RTLD_LAZY", tm.get("int"), false)
  vm.add("RTLD_NOW", tm.get("int"), false)
  vm.add("RTLD_GLOBAL", tm.get("int"), false)
  vm.add("RTLD_LOCAL", tm.get("int"), false)
  vm.add("E2BIG", tm.get("int"), false)
  vm.add("EACCES", tm.get("int"), false)
  vm.add("EADDRINUSE", tm.get("int"), false)
  vm.add("EADDRNOTAVAIL", tm.get("int"), false)
  vm.add("EAFNOSUPPORT", tm.get("int"), false)
  vm.add("EAGAIN", tm.get("int"), false)
  vm.add("EALREADY", tm.get("int"), false)
  vm.add("EBADF", tm.get("int"), false)
  vm.add("EBADMSG", tm.get("int"), false)
  vm.add("EBUSY", tm.get("int"), false)
  vm.add("ECANCELED", tm.get("int"), false)
  vm.add("ECHILD", tm.get("int"), false)
  vm.add("ECONNABORTED", tm.get("int"), false)
  vm.add("ECONNREFUSED", tm.get("int"), false)
  vm.add("ECONNRESET", tm.get("int"), false)
  vm.add("EDEADLK", tm.get("int"), false)
  vm.add("EDESTADDRREQ", tm.get("int"), false)
  vm.add("EDOM", tm.get("int"), false)
  vm.add("EDQUOT", tm.get("int"), false)
  vm.add("EEXIST", tm.get("int"), false)
  vm.add("EFAULT", tm.get("int"), false)
  vm.add("EFBIG", tm.get("int"), false)
  vm.add("EHOSTUNREACH", tm.get("int"), false)
  vm.add("EIDRM", tm.get("int"), false)
  vm.add("EILSEQ", tm.get("int"), false)
  vm.add("EINPROGRESS", tm.get("int"), false)
  vm.add("EINTR", tm.get("int"), false)
  vm.add("EINVAL", tm.get("int"), false)
  vm.add("EIO", tm.get("int"), false)
  vm.add("EISCONN", tm.get("int"), false)
  vm.add("EISDIR", tm.get("int"), false)
  vm.add("ELOOP", tm.get("int"), false)
  vm.add("EMFILE", tm.get("int"), false)
  vm.add("EMLINK", tm.get("int"), false)
  vm.add("EMSGSIZE", tm.get("int"), false)
  vm.add("EMULTIHOP", tm.get("int"), false)
  vm.add("ENAMETOOLONG", tm.get("int"), false)
  vm.add("ENETDOWN", tm.get("int"), false)
  vm.add("ENETRESET", tm.get("int"), false)
  vm.add("ENETUNREACH", tm.get("int"), false)
  vm.add("ENFILE", tm.get("int"), false)
  vm.add("ENOBUFS", tm.get("int"), false)
  vm.add("ENODATA", tm.get("int"), false)
  vm.add("ENODEV", tm.get("int"), false)
  vm.add("ENOENT", tm.get("int"), false)
  vm.add("ENOEXEC", tm.get("int"), false)
  vm.add("ENOLCK", tm.get("int"), false)
  vm.add("ENOLINK", tm.get("int"), false)
  vm.add("ENOMEM", tm.get("int"), false)
  vm.add("ENOMSG", tm.get("int"), false)
  vm.add("ENOPROTOOPT", tm.get("int"), false)
  vm.add("ENOSPC", tm.get("int"), false)
  vm.add("ENOSYS", tm.get("int"), false)
  vm.add("ENOTCONN", tm.get("int"), false)
  vm.add("ENOTDIR", tm.get("int"), false)
  vm.add("ENOTEMPTY", tm.get("int"), false)
  vm.add("ENOTRECOVERABLE", tm.get("int"), false)
  vm.add("ENOTSOCK", tm.get("int"), false)
  vm.add("ENOTSUP", tm.get("int"), false)
  vm.add("ENOTTY", tm.get("int"), false)
  vm.add("ENXIO", tm.get("int"), false)
  vm.add("EOPNOTSUPP", tm.get("int"), false)
  vm.add("EOVERFLOW", tm.get("int"), false)
  vm.add("EOWNERDEAD", tm.get("int"), false)
  vm.add("EPERM", tm.get("int"), false)
  vm.add("EPIPE", tm.get("int"), false)
  vm.add("EPROTO", tm.get("int"), false)
  vm.add("EPROTONOSUPPORT", tm.get("int"), false)
  vm.add("EPROTOTYPE", tm.get("int"), false)
  vm.add("ERANGE", tm.get("int"), false)
  vm.add("EROFS", tm.get("int"), false)
  vm.add("ESPIPE", tm.get("int"), false)
  vm.add("ESRCH", tm.get("int"), false)
  vm.add("ESTALE", tm.get("int"), false)
  vm.add("ETIMEDOUT", tm.get("int"), false)
  vm.add("ETXTBSY", tm.get("int"), false)
  vm.add("EWOULDBLOCK", tm.get("int"), false)
  vm.add("EXDEV", tm.get("int"), false)
  vm.add("F_DUPFD", tm.get("int"), false)
  vm.add("F_DUPFD_CLOEXEC", tm.get("int"), false)
  vm.add("F_GETFD", tm.get("int"), false)
  vm.add("F_SETFD", tm.get("int"), false)
  vm.add("F_GETFL", tm.get("int"), false)
  vm.add("F_SETFL", tm.get("int"), false)
  vm.add("F_GETLK", tm.get("int"), false)
  vm.add("F_SETLK", tm.get("int"), false)
  vm.add("F_SETLKW", tm.get("int"), false)
  vm.add("F_GETOWN", tm.get("int"), false)
  vm.add("F_SETOWN", tm.get("int"), false)
  vm.add("FD_CLOEXEC", tm.get("int"), false)
  vm.add("F_RDLCK", tm.get("int"), false)
  vm.add("F_UNLCK", tm.get("int"), false)
  vm.add("F_WRLCK", tm.get("int"), false)
  vm.add("O_CLOEXEC", tm.get("int"), false)
  vm.add("O_CREAT", tm.get("int"), false)
  vm.add("O_DIRECTORY", tm.get("int"), false)
  vm.add("O_EXCL", tm.get("int"), false)
  vm.add("O_NOCTTY", tm.get("int"), false)
  vm.add("O_NOFOLLOW", tm.get("int"), false)
  vm.add("O_TRUNC", tm.get("int"), false)
  vm.add("O_TTY_INIT", tm.get("int"), false)
  vm.add("O_APPEND", tm.get("int"), false)
  vm.add("O_DSYNC", tm.get("int"), false)
  vm.add("O_NONBLOCK", tm.get("int"), false)
  vm.add("O_RSYNC", tm.get("int"), false)
  vm.add("O_SYNC", tm.get("int"), false)
  vm.add("O_ACCMODE", tm.get("int"), false)
  vm.add("O_EXEC", tm.get("int"), false)
  vm.add("O_RDONLY", tm.get("int"), false)
  vm.add("O_RDWR", tm.get("int"), false)
  vm.add("O_SEARCH", tm.get("int"), false)
  vm.add("O_WRONLY", tm.get("int"), false)
  vm.add("AT_FDCWD", tm.get("int"), false)
  vm.add("AT_EACCESS", tm.get("int"), false)
  vm.add("AT_SYMLINK_NOFOLLOW", tm.get("int"), false)
  vm.add("AT_SYMLINK_FOLLOW", tm.get("int"), false)
  vm.add("AT_REMOVEDIR", tm.get("int"), false)
  vm.add("FE_ALL_EXCEPT", tm.get("int"), false)
  vm.add("FE_DIVBYZERO", tm.get("int"), false)
  vm.add("FE_INEXACT", tm.get("int"), false)
  vm.add("FE_INVALID", tm.get("int"), false)
  vm.add("FE_OVERFLOW", tm.get("int"), false)
  vm.add("FE_UNDERFLOW", tm.get("int"), false)
  vm.add("FE_DOWNWARD", tm.get("int"), false)
  vm.add("FE_TONEAREST", tm.get("int"), false)
  vm.add("FE_TOWARDZERO", tm.get("int"), false)
  vm.add("FE_UPWARD", tm.get("int"), false)
  vm.add("FE_DFL_ENV", tm.get("int"), false)
  vm.add("FLT_ROUNDS", tm.get("int"), false)
  vm.add("FLT_RADIX", tm.get("int"), false)
  vm.add("FLT_EVAL_METHOD", tm.get("int"), false)
  vm.add("FLT_MANT_DIG", tm.get("int"), false)
  vm.add("DBL_MANT_DIG", tm.get("int"), false)
  vm.add("DECIMAL_DIG", tm.get("int"), false)
  vm.add("FLT_DIG", tm.get("int"), false)
  vm.add("DBL_DIG", tm.get("int"), false)
  vm.add("FLT_MIN_EXP", tm.get("int"), false)
  vm.add("DBL_MIN_EXP", tm.get("int"), false)
  vm.add("FLT_MIN_10_EXP", tm.get("int"), false)
  vm.add("DBL_MIN_10_EXP", tm.get("int"), false)
  vm.add("FLT_MAX_EXP", tm.get("int"), false)
  vm.add("DBL_MAX_EXP", tm.get("int"), false)
  vm.add("FLT_MAX_10_EXP", tm.get("int"), false)
  vm.add("DBL_MAX_10_EXP", tm.get("int"), false)
  vm.add("FLT_MAX", tm.get("f32"), false)
  vm.add("DBL_MAX", tm.get("float"), false)
  vm.add("FLT_EPSILON", tm.get("f32"), false)
  vm.add("DBL_EPSILON", tm.get("float"), false)
  vm.add("FLT_MIN", tm.get("f32"), false)
  vm.add("DBL_MIN", tm.get("float"), false)
  vm.add("MM_HARD", tm.get("int"), false)
  vm.add("MM_SOFT", tm.get("int"), false)
  vm.add("MM_FIRM", tm.get("int"), false)
  vm.add("MM_APPL", tm.get("int"), false)
  vm.add("MM_UTIL", tm.get("int"), false)
  vm.add("MM_OPSYS", tm.get("int"), false)
  vm.add("MM_RECOVER", tm.get("int"), false)
  vm.add("MM_NRECOV", tm.get("int"), false)
  vm.add("MM_HALT", tm.get("int"), false)
  vm.add("MM_ERROR", tm.get("int"), false)
  vm.add("MM_WARNING", tm.get("int"), false)
  vm.add("MM_INFO", tm.get("int"), false)
  vm.add("MM_NOSEV", tm.get("int"), false)
  vm.add("MM_PRINT", tm.get("int"), false)
  vm.add("MM_CONSOLE", tm.get("int"), false)
  vm.add("MM_NULLLBL", tm.createArray(tm.get("char")), false)
  vm.add("MM_NULLSEV", tm.get("int"), false)
  vm.add("MM_NULLMC", tm.get("i64"), false)
  vm.add("MM_NULLTXT", tm.createArray(tm.get("char")), false)
  vm.add("MM_NULLACT", tm.createArray(tm.get("char")), false)
  vm.add("MM_NULLTAG", tm.createArray(tm.get("char")), false)
  vm.add("MM_OK", tm.get("int"), false)
  vm.add("MM_NOTOK", tm.get("int"), false)
  vm.add("MM_NOMSG", tm.get("int"), false)
  vm.add("MM_NOCON", tm.get("int"), false)
  vm.add("FNM_NOMATCH", tm.get("int"), false)
  vm.add("FNM_PATHNAME", tm.get("int"), false)
  vm.add("FNM_PERIOD", tm.get("int"), false)
  vm.add("FNM_NOESCAPE", tm.get("int"), false)
  vm.add("GLOB_APPEND", tm.get("int"), false)
  vm.add("GLOB_DOOFFS", tm.get("int"), false)
  vm.add("GLOB_ERR", tm.get("int"), false)
  vm.add("GLOB_MARK", tm.get("int"), false)
  vm.add("GLOB_NOCHECK", tm.get("int"), false)
  vm.add("GLOB_NOESCAPE", tm.get("int"), false)
  vm.add("GLOB_NOSORT", tm.get("int"), false)
  vm.add("GLOB_ABORTED", tm.get("int"), false)
  vm.add("GLOB_NOMATCH", tm.get("int"), false)
  vm.add("GLOB_NOSPACE", tm.get("int"), false)
  vm.add("PRId8", tm.createArray(tm.get("char")), false)
  vm.add("PRId16", tm.createArray(tm.get("char")), false)
  vm.add("PRId32", tm.createArray(tm.get("char")), false)
  vm.add("PRId64", tm.createArray(tm.get("char")), false)
  vm.add("PRIdLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIdLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIdLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIdLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIdFAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIdFAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIdFAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIdFAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIdMAX", tm.createArray(tm.get("char")), false)
  vm.add("PRIdPTR", tm.createArray(tm.get("char")), false)
  vm.add("PRIi8", tm.createArray(tm.get("char")), false)
  vm.add("PRIi16", tm.createArray(tm.get("char")), false)
  vm.add("PRIi32", tm.createArray(tm.get("char")), false)
  vm.add("PRIi64", tm.createArray(tm.get("char")), false)
  vm.add("PRIiLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIiLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIiLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIiLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIiFAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIiFAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIiFAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIiFAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIiMAX", tm.createArray(tm.get("char")), false)
  vm.add("PRIiPTR", tm.createArray(tm.get("char")), false)
  vm.add("PRIo8", tm.createArray(tm.get("char")), false)
  vm.add("PRIo16", tm.createArray(tm.get("char")), false)
  vm.add("PRIo32", tm.createArray(tm.get("char")), false)
  vm.add("PRIo64", tm.createArray(tm.get("char")), false)
  vm.add("PRIoLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIoLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIoLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIoLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIoFAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIoFAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIoFAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIoFAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIoMAX", tm.createArray(tm.get("char")), false)
  vm.add("PRIoPTR", tm.createArray(tm.get("char")), false)
  vm.add("PRIu8", tm.createArray(tm.get("char")), false)
  vm.add("PRIu16", tm.createArray(tm.get("char")), false)
  vm.add("PRIu32", tm.createArray(tm.get("char")), false)
  vm.add("PRIu64", tm.createArray(tm.get("char")), false)
  vm.add("PRIuLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIuLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIuLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIuLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIuFAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIuFAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIuFAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIuFAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIuMAX", tm.createArray(tm.get("char")), false)
  vm.add("PRIuPTR", tm.createArray(tm.get("char")), false)
  vm.add("PRIx8", tm.createArray(tm.get("char")), false)
  vm.add("PRIx16", tm.createArray(tm.get("char")), false)
  vm.add("PRIx32", tm.createArray(tm.get("char")), false)
  vm.add("PRIx64", tm.createArray(tm.get("char")), false)
  vm.add("PRIxLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIxLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIxLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIxLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIxFAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIxFAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIxFAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIxFAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIxMAX", tm.createArray(tm.get("char")), false)
  vm.add("PRIxPTR", tm.createArray(tm.get("char")), false)
  vm.add("PRIX8", tm.createArray(tm.get("char")), false)
  vm.add("PRIX16", tm.createArray(tm.get("char")), false)
  vm.add("PRIX32", tm.createArray(tm.get("char")), false)
  vm.add("PRIX64", tm.createArray(tm.get("char")), false)
  vm.add("PRIXLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIXLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIXLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIXLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIXFAST8", tm.createArray(tm.get("char")), false)
  vm.add("PRIXFAST16", tm.createArray(tm.get("char")), false)
  vm.add("PRIXFAST32", tm.createArray(tm.get("char")), false)
  vm.add("PRIXFAST64", tm.createArray(tm.get("char")), false)
  vm.add("PRIXMAX", tm.createArray(tm.get("char")), false)
  vm.add("PRIXPTR", tm.createArray(tm.get("char")), false)
  vm.add("SCNd8", tm.createArray(tm.get("char")), false)
  vm.add("SCNd16", tm.createArray(tm.get("char")), false)
  vm.add("SCNd32", tm.createArray(tm.get("char")), false)
  vm.add("SCNd64", tm.createArray(tm.get("char")), false)
  vm.add("SCNdLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("SCNdLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("SCNdLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("SCNdLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("SCNdFAST8", tm.createArray(tm.get("char")), false)
  vm.add("SCNdFAST16", tm.createArray(tm.get("char")), false)
  vm.add("SCNdFAST32", tm.createArray(tm.get("char")), false)
  vm.add("SCNdFAST64", tm.createArray(tm.get("char")), false)
  vm.add("SCNdMAX", tm.createArray(tm.get("char")), false)
  vm.add("SCNdPTR", tm.createArray(tm.get("char")), false)
  vm.add("SCNi8", tm.createArray(tm.get("char")), false)
  vm.add("SCNi16", tm.createArray(tm.get("char")), false)
  vm.add("SCNi32", tm.createArray(tm.get("char")), false)
  vm.add("SCNi64", tm.createArray(tm.get("char")), false)
  vm.add("SCNiLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("SCNiLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("SCNiLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("SCNiLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("SCNiFAST8", tm.createArray(tm.get("char")), false)
  vm.add("SCNiFAST16", tm.createArray(tm.get("char")), false)
  vm.add("SCNiFAST32", tm.createArray(tm.get("char")), false)
  vm.add("SCNiFAST64", tm.createArray(tm.get("char")), false)
  vm.add("SCNiMAX", tm.createArray(tm.get("char")), false)
  vm.add("SCNiPTR", tm.createArray(tm.get("char")), false)
  vm.add("SCNo8", tm.createArray(tm.get("char")), false)
  vm.add("SCNo16", tm.createArray(tm.get("char")), false)
  vm.add("SCNo32", tm.createArray(tm.get("char")), false)
  vm.add("SCNo64", tm.createArray(tm.get("char")), false)
  vm.add("SCNoLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("SCNoLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("SCNoLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("SCNoLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("SCNoFAST8", tm.createArray(tm.get("char")), false)
  vm.add("SCNoFAST16", tm.createArray(tm.get("char")), false)
  vm.add("SCNoFAST32", tm.createArray(tm.get("char")), false)
  vm.add("SCNoFAST64", tm.createArray(tm.get("char")), false)
  vm.add("SCNoMAX", tm.createArray(tm.get("char")), false)
  vm.add("SCNoPTR", tm.createArray(tm.get("char")), false)
  vm.add("SCNu8", tm.createArray(tm.get("char")), false)
  vm.add("SCNu16", tm.createArray(tm.get("char")), false)
  vm.add("SCNu32", tm.createArray(tm.get("char")), false)
  vm.add("SCNu64", tm.createArray(tm.get("char")), false)
  vm.add("SCNuLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("SCNuLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("SCNuLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("SCNuLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("SCNuFAST8", tm.createArray(tm.get("char")), false)
  vm.add("SCNuFAST16", tm.createArray(tm.get("char")), false)
  vm.add("SCNuFAST32", tm.createArray(tm.get("char")), false)
  vm.add("SCNuFAST64", tm.createArray(tm.get("char")), false)
  vm.add("SCNuMAX", tm.createArray(tm.get("char")), false)
  vm.add("SCNuPTR", tm.createArray(tm.get("char")), false)
  vm.add("SCNx8", tm.createArray(tm.get("char")), false)
  vm.add("SCNx16", tm.createArray(tm.get("char")), false)
  vm.add("SCNx32", tm.createArray(tm.get("char")), false)
  vm.add("SCNx64", tm.createArray(tm.get("char")), false)
  vm.add("SCNxLEAST8", tm.createArray(tm.get("char")), false)
  vm.add("SCNxLEAST16", tm.createArray(tm.get("char")), false)
  vm.add("SCNxLEAST32", tm.createArray(tm.get("char")), false)
  vm.add("SCNxLEAST64", tm.createArray(tm.get("char")), false)
  vm.add("SCNxFAST8", tm.createArray(tm.get("char")), false)
  vm.add("SCNxFAST16", tm.createArray(tm.get("char")), false)
  vm.add("SCNxFAST32", tm.createArray(tm.get("char")), false)
  vm.add("SCNxFAST64", tm.createArray(tm.get("char")), false)
  vm.add("SCNxMAX", tm.createArray(tm.get("char")), false)
  vm.add("SCNxPTR", tm.createArray(tm.get("char")), false)
  vm.add("CODESET", tm.get("int"), false)
  vm.add("D_T_FMT", tm.get("int"), false)
  vm.add("D_FMT", tm.get("int"), false)
  vm.add("T_FMT", tm.get("int"), false)
  vm.add("T_FMT_AMPM", tm.get("int"), false)
  vm.add("AM_STR", tm.get("int"), false)
  vm.add("PM_STR", tm.get("int"), false)
  vm.add("DAY_1", tm.get("int"), false)
  vm.add("DAY_2", tm.get("int"), false)
  vm.add("DAY_3", tm.get("int"), false)
  vm.add("DAY_4", tm.get("int"), false)
  vm.add("DAY_5", tm.get("int"), false)
  vm.add("DAY_6", tm.get("int"), false)
  vm.add("DAY_7", tm.get("int"), false)
  vm.add("ABDAY_1", tm.get("int"), false)
  vm.add("ABDAY_2", tm.get("int"), false)
  vm.add("ABDAY_3", tm.get("int"), false)
  vm.add("ABDAY_4", tm.get("int"), false)
  vm.add("ABDAY_5", tm.get("int"), false)
  vm.add("ABDAY_6", tm.get("int"), false)
  vm.add("ABDAY_7", tm.get("int"), false)
  vm.add("MON_1", tm.get("int"), false)
  vm.add("MON_2", tm.get("int"), false)
  vm.add("MON_3", tm.get("int"), false)
  vm.add("MON_4", tm.get("int"), false)
  vm.add("MON_5", tm.get("int"), false)
  vm.add("MON_6", tm.get("int"), false)
  vm.add("MON_7", tm.get("int"), false)
  vm.add("MON_8", tm.get("int"), false)
  vm.add("MON_9", tm.get("int"), false)
  vm.add("MON_10", tm.get("int"), false)
  vm.add("MON_11", tm.get("int"), false)
  vm.add("MON_12", tm.get("int"), false)
  vm.add("ABMON_1", tm.get("int"), false)
  vm.add("ABMON_2", tm.get("int"), false)
  vm.add("ABMON_3", tm.get("int"), false)
  vm.add("ABMON_4", tm.get("int"), false)
  vm.add("ABMON_5", tm.get("int"), false)
  vm.add("ABMON_6", tm.get("int"), false)
  vm.add("ABMON_7", tm.get("int"), false)
  vm.add("ABMON_8", tm.get("int"), false)
  vm.add("ABMON_9", tm.get("int"), false)
  vm.add("ABMON_10", tm.get("int"), false)
  vm.add("ABMON_11", tm.get("int"), false)
  vm.add("ABMON_12", tm.get("int"), false)
  vm.add("ERA", tm.get("int"), false)
  vm.add("ERA_D_FMT", tm.get("int"), false)
  vm.add("ERA_D_T_FMT", tm.get("int"), false)
  vm.add("ERA_T_FMT", tm.get("int"), false)
  vm.add("ALT_DIGITS", tm.get("int"), false)
  vm.add("RADIXCHAR", tm.get("int"), false)
  vm.add("THOUSEP", tm.get("int"), false)
  vm.add("YESEXPR", tm.get("int"), false)
  vm.add("NOEXPR", tm.get("int"), false)
  vm.add("CRNCYSTR", tm.get("int"), false)
  vm.add("CHAR_BIT", tm.get("int"), false)
  vm.add("CHAR_MAX", tm.get("int"), false)
  vm.add("CHAR_MIN", tm.get("int"), false)
  vm.add("INT_MAX", tm.get("int"), false)
  vm.add("INT_MIN", tm.get("int"), false)
  vm.add("LLONG_MAX", tm.get("int"), false)
  vm.add("LLONG_MIN", tm.get("int"), false)
  vm.add("LONG_BIT", tm.get("int"), false)
  vm.add("LONG_MAX", tm.get("int"), false)
  vm.add("LONG_MIN", tm.get("int"), false)
  vm.add("MB_LEN_MAX", tm.get("int"), false)
  vm.add("SCHAR_MAX", tm.get("int"), false)
  vm.add("SCHAR_MIN", tm.get("int"), false)
  vm.add("SHRT_MAX", tm.get("int"), false)
  vm.add("SHRT_MIN", tm.get("int"), false)
  vm.add("SSIZE_MAX", tm.get("int"), false)
  vm.add("UCHAR_MAX", tm.get("int"), false)
  vm.add("UINT_MAX", tm.get("int"), false)
  vm.add("ULLONG_MAX", tm.get("int"), false)
  vm.add("ULONG_MAX", tm.get("int"), false)
  vm.add("USHRT_MAX", tm.get("int"), false)
  vm.add("WORD_BIT", tm.get("int"), false)
  vm.add("LC_ALL", tm.get("int"), false)
  vm.add("LC_COLLATE", tm.get("int"), false)
  vm.add("LC_CTYPE", tm.get("int"), false)
  vm.add("LC_MESSAGES", tm.get("int"), false)
  vm.add("LC_MONETARY", tm.get("int"), false)
  vm.add("LC_NUMERIC", tm.get("int"), false)
  vm.add("LC_TIME", tm.get("int"), false)
  vm.add("M_E", tm.get("float"), false)
  vm.add("M_LOG2E", tm.get("float"), false)
  vm.add("M_LOG10E", tm.get("float"), false)
  vm.add("M_LN2", tm.get("float"), false)
  vm.add("M_LN10", tm.get("float"), false)
  vm.add("M_PI", tm.get("float"), false)
  vm.add("M_PI_2", tm.get("float"), false)
  vm.add("M_PI_4", tm.get("float"), false)
  vm.add("M_1_PI", tm.get("float"), false)
  vm.add("M_2_PI", tm.get("float"), false)
  vm.add("M_2_SQRTPI", tm.get("float"), false)
  vm.add("M_SQRT2", tm.get("float"), false)
  vm.add("M_SQRT1_2", tm.get("float"), false)
  vm.add("HUGE_VAL", tm.get("float"), false)
  vm.add("HUGE_VALF", tm.get("f32"), false)
  vm.add("INFINITY", tm.get("f32"), false)
  vm.add("NAN", tm.get("f32"), false)
  vm.add("FP_INFINITE", tm.get("int"), false)
  vm.add("FP_NAN", tm.get("int"), false)
  vm.add("FP_NORMAL", tm.get("int"), false)
  vm.add("FP_SUBNORMAL", tm.get("int"), false)
  vm.add("FP_ZERO", tm.get("int"), false)
  vm.add("FP_FAST_FMA", tm.get("int"), false)
  vm.add("FP_FAST_FMAF", tm.get("int"), false)
  vm.add("FP_FAST_FMAL", tm.get("int"), false)
  vm.add("FP_ILOGB0", tm.get("int"), false)
  vm.add("FP_ILOGBNAN", tm.get("int"), false)
  vm.add("MATH_ERRNO", tm.get("int"), false)
  vm.add("MATH_ERREXCEPT", tm.get("int"), false)
  vm.add("MATH_ERRHANDLING", tm.get("int"), false)
  vm.add("DBM_INSERT", tm.get("int"), false)
  vm.add("DBM_REPLACE", tm.get("int"), false)
  vm.add("IF_NAMESIZE", tm.get("int"), false)
  vm.add("IPPORT_RESERVED", tm.get("int"), false)
  vm.add("AI_PASSIVE", tm.get("int"), false)
  vm.add("AI_CANONNAME", tm.get("int"), false)
  vm.add("AI_NUMERICHOST", tm.get("int"), false)
  vm.add("AI_NUMERICSERV", tm.get("int"), false)
  vm.add("AI_V4MAPPED", tm.get("int"), false)
  vm.add("AI_ALL", tm.get("int"), false)
  vm.add("AI_ADDRCONFIG", tm.get("int"), false)
  vm.add("NI_NOFQDN", tm.get("int"), false)
  vm.add("NI_NUMERICHOST", tm.get("int"), false)
  vm.add("NI_NAMEREQD", tm.get("int"), false)
  vm.add("NI_NUMERICSERV", tm.get("int"), false)
  vm.add("NI_NUMERICSCOPE", tm.get("int"), false)
  vm.add("NI_DGRAM", tm.get("int"), false)
  vm.add("EAI_AGAIN", tm.get("int"), false)
  vm.add("EAI_BADFLAGS", tm.get("int"), false)
  vm.add("EAI_FAIL", tm.get("int"), false)
  vm.add("EAI_FAMILY", tm.get("int"), false)
  vm.add("EAI_MEMORY", tm.get("int"), false)
  vm.add("EAI_NONAME", tm.get("int"), false)
  vm.add("EAI_SERVICE", tm.get("int"), false)
  vm.add("EAI_SOCKTYPE", tm.get("int"), false)
  vm.add("EAI_SYSTEM", tm.get("int"), false)
  vm.add("EAI_OVERFLOW", tm.get("int"), false)
  vm.add("TCP_NODELAY", tm.get("int"), false)
  vm.add("IPPROTO_IP", tm.get("int"), false)
  vm.add("IPPROTO_IPV6", tm.get("int"), false)
  vm.add("IPPROTO_ICMP", tm.get("int"), false)
  vm.add("IPPROTO_RAW", tm.get("int"), false)
  vm.add("IPPROTO_TCP", tm.get("int"), false)
  vm.add("IPPROTO_UDP", tm.get("int"), false)
  vm.add("INADDR_ANY", tm.get("int"), false)
  vm.add("INADDR_BROADCAST", tm.get("int"), false)
  vm.add("INET_ADDRSTRLEN", tm.get("int"), false)
  vm.add("INET6_ADDRSTRLEN", tm.get("int"), false)
  vm.add("IPV6_JOIN_GROUP", tm.get("int"), false)
  vm.add("IPV6_LEAVE_GROUP", tm.get("int"), false)
  vm.add("IPV6_MULTICAST_HOPS", tm.get("int"), false)
  vm.add("IPV6_MULTICAST_IF", tm.get("int"), false)
  vm.add("IPV6_MULTICAST_LOOP", tm.get("int"), false)
  vm.add("IPV6_UNICAST_HOPS", tm.get("int"), false)
  vm.add("IPV6_V6ONLY", tm.get("int"), false)
  vm.add("NL_SETD", tm.get("int"), false)
  vm.add("NL_CAT_LOCALE", tm.get("int"), false)
  vm.add("POLLIN", tm.get("int"), false)
  vm.add("POLLRDNORM", tm.get("int"), false)
  vm.add("POLLRDBAND", tm.get("int"), false)
  vm.add("POLLPRI", tm.get("int"), false)
  vm.add("POLLOUT", tm.get("int"), false)
  vm.add("POLLWRNORM", tm.get("int"), false)
  vm.add("POLLWRBAND", tm.get("int"), false)
  vm.add("POLLERR", tm.get("int"), false)
  vm.add("POLLHUP", tm.get("int"), false)
  vm.add("POLLNVAL", tm.get("int"), false)
  vm.add("PTHREAD_BARRIER_SERIAL_THREAD", tm.get("int"), false)
  vm.add("PTHREAD_CANCEL_ASYNCHRONOUS", tm.get("int"), false)
  vm.add("PTHREAD_CANCEL_ENABLE", tm.get("int"), false)
  vm.add("PTHREAD_CANCEL_DEFERRED", tm.get("int"), false)
  vm.add("PTHREAD_CANCEL_DISABLE", tm.get("int"), false)
  vm.add("PTHREAD_CREATE_DETACHED", tm.get("int"), false)
  vm.add("PTHREAD_CREATE_JOINABLE", tm.get("int"), false)
  vm.add("PTHREAD_EXPLICIT_SCHED", tm.get("int"), false)
  vm.add("PTHREAD_INHERIT_SCHED", tm.get("int"), false)
  vm.add("PTHREAD_MUTEX_DEFAULT", tm.get("int"), false)
  vm.add("PTHREAD_MUTEX_ERRORCHECK", tm.get("int"), false)
  vm.add("PTHREAD_MUTEX_NORMAL", tm.get("int"), false)
  vm.add("PTHREAD_MUTEX_RECURSIVE", tm.get("int"), false)
  vm.add("PTHREAD_MUTEX_ROBUST", tm.get("int"), false)
  vm.add("PTHREAD_MUTEX_STALLED", tm.get("int"), false)
  vm.add("PTHREAD_PRIO_INHERIT", tm.get("int"), false)
  vm.add("PTHREAD_PRIO_NONE", tm.get("int"), false)
  vm.add("PTHREAD_PRIO_PROTECT", tm.get("int"), false)
  vm.add("PTHREAD_PROCESS_SHARED", tm.get("int"), false)
  vm.add("PTHREAD_PROCESS_PRIVATE", tm.get("int"), false)
  vm.add("PTHREAD_SCOPE_PROCESS", tm.get("int"), false)
  vm.add("PTHREAD_SCOPE_SYSTEM", tm.get("int"), false)
  vm.add("REG_EXTENDED", tm.get("int"), false)
  vm.add("REG_ICASE", tm.get("int"), false)
  vm.add("REG_NOSUB", tm.get("int"), false)
  vm.add("REG_NEWLINE", tm.get("int"), false)
  vm.add("REG_NOTBOL", tm.get("int"), false)
  vm.add("REG_NOTEOL", tm.get("int"), false)
  vm.add("REG_NOMATCH", tm.get("int"), false)
  vm.add("REG_BADPAT", tm.get("int"), false)
  vm.add("REG_ECOLLATE", tm.get("int"), false)
  vm.add("REG_ECTYPE", tm.get("int"), false)
  vm.add("REG_EESCAPE", tm.get("int"), false)
  vm.add("REG_ESUBREG", tm.get("int"), false)
  vm.add("REG_EBRACK", tm.get("int"), false)
  vm.add("REG_EPAREN", tm.get("int"), false)
  vm.add("REG_EBRACE", tm.get("int"), false)
  vm.add("REG_BADBR", tm.get("int"), false)
  vm.add("REG_ERANGE", tm.get("int"), false)
  vm.add("REG_ESPACE", tm.get("int"), false)
  vm.add("REG_BADRPT", tm.get("int"), false)
  vm.add("SCHED_FIFO", tm.get("int"), false)
  vm.add("SCHED_RR", tm.get("int"), false)
  vm.add("SCHED_SPORADIC", tm.get("int"), false)
  vm.add("SCHED_OTHER", tm.get("int"), false)
  vm.add("SIGEV_NONE", tm.get("int"), false)
  vm.add("SIGEV_SIGNAL", tm.get("int"), false)
  vm.add("SIGEV_THREAD", tm.get("int"), false)
  vm.add("SIGRTMIN", tm.get("int"), false)
  vm.add("SIGRTMAX", tm.get("int"), false)
  vm.add("SIGABRT", tm.get("int"), false)
  vm.add("SIGALRM", tm.get("int"), false)
  vm.add("SIGBUS", tm.get("int"), false)
  vm.add("SIGCHLD", tm.get("int"), false)
  vm.add("SIGCONT", tm.get("int"), false)
  vm.add("SIGFPE", tm.get("int"), false)
  vm.add("SIGHUP", tm.get("int"), false)
  vm.add("SIGILL", tm.get("int"), false)
  vm.add("SIGINT", tm.get("int"), false)
  vm.add("SIGKILL", tm.get("int"), false)
  vm.add("SIGPIPE", tm.get("int"), false)
  vm.add("SIGQUIT", tm.get("int"), false)
  vm.add("SIGSEGV", tm.get("int"), false)
  vm.add("SIGSTOP", tm.get("int"), false)
  vm.add("SIGTERM", tm.get("int"), false)
  vm.add("SIGTSTP", tm.get("int"), false)
  vm.add("SIGTTIN", tm.get("int"), false)
  vm.add("SIGTTOU", tm.get("int"), false)
  vm.add("SIGUSR1", tm.get("int"), false)
  vm.add("SIGUSR2", tm.get("int"), false)
  vm.add("SIGPOLL", tm.get("int"), false)
  vm.add("SIGPROF", tm.get("int"), false)
  vm.add("SIGSYS", tm.get("int"), false)
  vm.add("SIGTRAP", tm.get("int"), false)
  vm.add("SIGURG", tm.get("int"), false)
  vm.add("SIGVTALRM", tm.get("int"), false)
  vm.add("SIGXCPU", tm.get("int"), false)
  vm.add("SIGXFSZ", tm.get("int"), false)
  vm.add("SIG_BLOCK", tm.get("int"), false)
  vm.add("SIG_UNBLOCK", tm.get("int"), false)
  vm.add("SIG_SETMASK", tm.get("int"), false)
  vm.add("SA_NOCLDSTOP", tm.get("int"), false)
  vm.add("SA_ONSTACK", tm.get("int"), false)
  vm.add("SA_RESETHAND", tm.get("int"), false)
  vm.add("SA_RESTART", tm.get("int"), false)
  vm.add("SA_SIGINFO", tm.get("int"), false)
  vm.add("SA_NOCLDWAIT", tm.get("int"), false)
  vm.add("SA_NODEFER", tm.get("int"), false)
  vm.add("SS_ONSTACK", tm.get("int"), false)
  vm.add("SS_DISABLE", tm.get("int"), false)
  vm.add("MINSIGSTKSZ", tm.get("int"), false)
  vm.add("SIGSTKSZ", tm.get("int"), false)
  vm.add("ILL_ILLOPC", tm.get("int"), false)
  vm.add("ILL_ILLOPN", tm.get("int"), false)
  vm.add("ILL_ILLADR", tm.get("int"), false)
  vm.add("ILL_ILLTRP", tm.get("int"), false)
  vm.add("ILL_PRVOPC", tm.get("int"), false)
  vm.add("ILL_PRVREG", tm.get("int"), false)
  vm.add("ILL_COPROC", tm.get("int"), false)
  vm.add("ILL_BADSTK", tm.get("int"), false)
  vm.add("FPE_INTDIV", tm.get("int"), false)
  vm.add("FPE_INTOVF", tm.get("int"), false)
  vm.add("FPE_FLTDIV", tm.get("int"), false)
  vm.add("FPE_FLTOVF", tm.get("int"), false)
  vm.add("FPE_FLTUND", tm.get("int"), false)
  vm.add("FPE_FLTRES", tm.get("int"), false)
  vm.add("FPE_FLTINV", tm.get("int"), false)
  vm.add("FPE_FLTSUB", tm.get("int"), false)
  vm.add("SEGV_MAPERR", tm.get("int"), false)
  vm.add("SEGV_ACCERR", tm.get("int"), false)
  vm.add("BUS_ADRALN", tm.get("int"), false)
  vm.add("BUS_ADRERR", tm.get("int"), false)
  vm.add("BUS_OBJERR", tm.get("int"), false)
  vm.add("TRAP_BRKPT", tm.get("int"), false)
  vm.add("TRAP_TRACE", tm.get("int"), false)
  vm.add("CLD_EXITED", tm.get("int"), false)
  vm.add("CLD_KILLED", tm.get("int"), false)
  vm.add("CLD_DUMPED", tm.get("int"), false)
  vm.add("CLD_TRAPPED", tm.get("int"), false)
  vm.add("CLD_STOPPED", tm.get("int"), false)
  vm.add("CLD_CONTINUED", tm.get("int"), false)
  vm.add("POLL_IN", tm.get("int"), false)
  vm.add("POLL_OUT", tm.get("int"), false)
  vm.add("POLL_MSG", tm.get("int"), false)
  vm.add("POLL_ERR", tm.get("int"), false)
  vm.add("POLL_PRI", tm.get("int"), false)
  vm.add("POLL_HUP", tm.get("int"), false)
  vm.add("SI_USER", tm.get("int"), false)
  vm.add("SI_QUEUE", tm.get("int"), false)
  vm.add("SI_TIMER", tm.get("int"), false)
  vm.add("SI_ASYNCIO", tm.get("int"), false)
  vm.add("SI_MESGQ", tm.get("int"), false)
  vm.add("SPAWN_RESETIDS", tm.get("int"), false)
  vm.add("SPAWN_SETPGROUP", tm.get("int"), false)
  vm.add("SPAWN_SETSCHEDPARAM", tm.get("int"), false)
  vm.add("SPAWN_SETSCHEDULER", tm.get("int"), false)
  vm.add("SPAWN_SETSIGDEF", tm.get("int"), false)
  vm.add("SPAWN_SETSIGMASK", tm.get("int"), false)
  vm.add("INT8_MIN", tm.get("i8"), false)
  vm.add("INT16_MIN", tm.get("i16"), false)
  vm.add("INT32_MIN", tm.get("i32"), false)
  vm.add("INT64_MIN", tm.get("i64"), false)
  vm.add("INT8_MAX", tm.get("i8"), false)
  vm.add("INT16_MAX", tm.get("i16"), false)
  vm.add("INT32_MAX", tm.get("i32"), false)
  vm.add("INT64_MAX", tm.get("i64"), false)
  vm.add("UINT8_MAX", tm.get("u8"), false)
  vm.add("UINT16_MAX", tm.get("u16"), false)
  vm.add("UINT32_MAX", tm.get("u32"), false)
  vm.add("UINT64_MAX", tm.get("u64"), false)
  vm.add("INT_LEAST8_MIN", tm.get("i8"), false)
  vm.add("INT_LEAST16_MIN", tm.get("i16"), false)
  vm.add("INT_LEAST32_MIN", tm.get("i32"), false)
  vm.add("INT_LEAST64_MIN", tm.get("i64"), false)
  vm.add("INT_LEAST8_MAX", tm.get("i8"), false)
  vm.add("INT_LEAST16_MAX", tm.get("i16"), false)
  vm.add("INT_LEAST32_MAX", tm.get("i32"), false)
  vm.add("INT_LEAST64_MAX", tm.get("i64"), false)
  vm.add("UINT_LEAST8_MAX", tm.get("u8"), false)
  vm.add("UINT_LEAST16_MAX", tm.get("u16"), false)
  vm.add("UINT_LEAST32_MAX", tm.get("u32"), false)
  vm.add("UINT_LEAST64_MAX", tm.get("u64"), false)
  vm.add("INT_FAST8_MIN", tm.get("i8"), false)
  vm.add("INT_FAST16_MIN", tm.get("i16"), false)
  vm.add("INT_FAST32_MIN", tm.get("i32"), false)
  vm.add("INT_FAST64_MIN", tm.get("i64"), false)
  vm.add("INT_FAST8_MAX", tm.get("i8"), false)
  vm.add("INT_FAST16_MAX", tm.get("i16"), false)
  vm.add("INT_FAST32_MAX", tm.get("i32"), false)
  vm.add("INT_FAST64_MAX", tm.get("i64"), false)
  vm.add("UINT_FAST8_MAX", tm.get("u8"), false)
  vm.add("UINT_FAST16_MAX", tm.get("u16"), false)
  vm.add("UINT_FAST32_MAX", tm.get("u32"), false)
  vm.add("UINT_FAST64_MAX", tm.get("u64"), false)
  vm.add("INTPTR_MIN", tm.get("i64"), false)
  vm.add("INTPTR_MAX", tm.get("i64"), false)
  vm.add("UINTPTR_MAX", tm.get("u64"), false)
  vm.add("INTMAX_MIN", tm.get("i64"), false)
  vm.add("INTMAX_MAX", tm.get("i64"), false)
  vm.add("UINTMAX_MAX", tm.get("u64"), false)
  vm.add("PTRDIFF_MIN", tm.get("i64"), false)
  vm.add("PTRDIFF_MAX", tm.get("i64"), false)
  vm.add("SIG_ATOMIC_MIN", tm.get("i32"), false)
  vm.add("SIG_ATOMIC_MAX", tm.get("i32"), false)
  vm.add("SIZE_MAX", tm.get("u64"), false)
  vm.add("WCHAR_MIN", tm.get("i32"), false)
  vm.add("WCHAR_MAX", tm.get("i32"), false)
  vm.add("WINT_MIN", tm.get("i32"), false)
  vm.add("WINT_MAX", tm.get("i32"), false)
  vm.add("BUFSIZ", tm.get("int"), false)
  vm.add("SEEK_CUR", tm.get("int"), false)
  vm.add("SEEK_END", tm.get("int"), false)
  vm.add("SEEK_SET", tm.get("int"), false)
  vm.add("FILENAME_MAX", tm.get("int"), false)
  vm.add("FOPEN_MAX", tm.get("int"), false)
  vm.add("TMP_MAX", tm.get("int"), false)
  vm.add("EOF", tm.get("int"), false)
  vm.add("EXIT_FAILURE", tm.get("int"), false)
  vm.add("EXIT_SUCCESS", tm.get("int"), false)
  vm.add("RAND_MAX", tm.get("int"), false)
  vm.add("MB_CUR_MAX", tm.get("int"), false)
  vm.add("IPC_CREAT", tm.get("int"), false)
  vm.add("IPC_EXCL", tm.get("int"), false)
  vm.add("IPC_NOWAIT", tm.get("int"), false)
  vm.add("IPC_PRIVATE", tm.get("int"), false)
  vm.add("IPC_RMID", tm.get("int"), false)
  vm.add("IPC_SET", tm.get("int"), false)
  vm.add("IPC_STAT", tm.get("int"), false)
  vm.add("PROT_EXEC", tm.get("int"), false)
  vm.add("PROT_NONE", tm.get("int"), false)
  vm.add("PROT_READ", tm.get("int"), false)
  vm.add("PROT_WRITE", tm.get("int"), false)
  vm.add("MAP_FIXED", tm.get("int"), false)
  vm.add("MAP_PRIVATE", tm.get("int"), false)
  vm.add("MAP_SHARED", tm.get("int"), false)
  vm.add("MS_ASYNC", tm.get("int"), false)
  vm.add("MS_INVALIDATE", tm.get("int"), false)
  vm.add("MS_SYNC", tm.get("int"), false)
  vm.add("MCL_CURRENT", tm.get("int"), false)
  vm.add("MCL_FUTURE", tm.get("int"), false)
  vm.add("MADV_DONTNEED", tm.get("int"), false)
  vm.add("MADV_NORMAL", tm.get("int"), false)
  vm.add("MADV_RANDOM", tm.get("int"), false)
  vm.add("MADV_SEQUENTIAL", tm.get("int"), false)
  vm.add("MADV_WILLNEED", tm.get("int"), false)
  vm.add("TYPED_MEM_ALLOCATE", tm.get("int"), false)
  vm.add("TYPED_MEM_ALLOCATE_CONTIG", tm.get("int"), false)
  vm.add("TYPED_MEM_MAP_ALLOCATABLE", tm.get("int"), false)
  vm.add("MSG_NOERROR", tm.get("int"), false)
  vm.add("PRIO_PROCESS", tm.get("int"), false)
  vm.add("PRIO_PGRP", tm.get("int"), false)
  vm.add("PRIO_USER", tm.get("int"), false)
  vm.add("RLIM_INFINITY", tm.get("u64"), false)
  vm.add("RLIM_SAVED_MAX", tm.get("u64"), false)
  vm.add("RLIM_SAVED_CUR", tm.get("u64"), false)
  vm.add("RUSAGE_SELF", tm.get("int"), false)
  vm.add("RUSAGE_CHILDREN", tm.get("int"), false)
  vm.add("RLIMIT_CORE", tm.get("int"), false)
  vm.add("RLIMIT_CPU", tm.get("int"), false)
  vm.add("RLIMIT_DATA", tm.get("int"), false)
  vm.add("RLIMIT_FSIZE", tm.get("int"), false)
  vm.add("RLIMIT_NOFILE", tm.get("int"), false)
  vm.add("RLIMIT_STACK", tm.get("int"), false)
  vm.add("RLIMIT_AS", tm.get("int"), false)
  vm.add("FD_SETSIZE", tm.get("int"), false)
  vm.add("SEM_UNDO", tm.get("int"), false)
  vm.add("GETNCNT", tm.get("int"), false)
  vm.add("GETPID", tm.get("int"), false)
  vm.add("GETVAL", tm.get("int"), false)
  vm.add("GETALL", tm.get("int"), false)
  vm.add("GETZCNT", tm.get("int"), false)
  vm.add("SETVAL", tm.get("int"), false)
  vm.add("SETALL", tm.get("int"), false)
  vm.add("SHM_RDONLY", tm.get("int"), false)
  vm.add("SHM_RND", tm.get("int"), false)
  vm.add("SHMLBA", tm.get("int"), false)
  vm.add("SCM_RIGHTS", tm.get("int"), false)
  vm.add("SOCK_DGRAM", tm.get("int"), false)
  vm.add("SOCK_RAW", tm.get("int"), false)
  vm.add("SOCK_SEQPACKET", tm.get("int"), false)
  vm.add("SOCK_STREAM", tm.get("int"), false)
  vm.add("SOL_SOCKET", tm.get("int"), false)
  vm.add("SO_ACCEPTCONN", tm.get("int"), false)
  vm.add("SO_BROADCAST", tm.get("int"), false)
  vm.add("SO_DEBUG", tm.get("int"), false)
  vm.add("SO_DONTROUTE", tm.get("int"), false)
  vm.add("SO_ERROR", tm.get("int"), false)
  vm.add("SO_KEEPALIVE", tm.get("int"), false)
  vm.add("SO_LINGER", tm.get("int"), false)
  vm.add("SO_OOBINLINE", tm.get("int"), false)
  vm.add("SO_RCVBUF", tm.get("int"), false)
  vm.add("SO_RCVLOWAT", tm.get("int"), false)
  vm.add("SO_RCVTIMEO", tm.get("int"), false)
  vm.add("SO_REUSEADDR", tm.get("int"), false)
  vm.add("SO_SNDBUF", tm.get("int"), false)
  vm.add("SO_SNDLOWAT", tm.get("int"), false)
  vm.add("SO_SNDTIMEO", tm.get("int"), false)
  vm.add("SO_TYPE", tm.get("int"), false)
  vm.add("SOMAXCONN", tm.get("int"), false)
  vm.add("MSG_CTRUNC", tm.get("int"), false)
  vm.add("MSG_DONTROUTE", tm.get("int"), false)
  vm.add("MSG_EOR", tm.get("int"), false)
  vm.add("MSG_OOB", tm.get("int"), false)
  vm.add("MSG_NOSIGNAL", tm.get("int"), false)
  vm.add("MSG_PEEK", tm.get("int"), false)
  vm.add("MSG_TRUNC", tm.get("int"), false)
  vm.add("MSG_WAITALL", tm.get("int"), false)
  vm.add("AF_INET", tm.get("int"), false)
  vm.add("AF_INET6", tm.get("int"), false)
  vm.add("AF_UNIX", tm.get("int"), false)
  vm.add("AF_UNSPEC", tm.get("int"), false)
  vm.add("SHUT_RD", tm.get("int"), false)
  vm.add("SHUT_RDWR", tm.get("int"), false)
  vm.add("SHUT_WR", tm.get("int"), false)
  vm.add("S_IFMT", tm.get("int"), false)
  vm.add("S_IFBLK", tm.get("int"), false)
  vm.add("S_IFCHR", tm.get("int"), false)
  vm.add("S_IFIFO", tm.get("int"), false)
  vm.add("S_IFREG", tm.get("int"), false)
  vm.add("S_IFDIR", tm.get("int"), false)
  vm.add("S_IFLNK", tm.get("int"), false)
  vm.add("S_IFSOCK", tm.get("int"), false)
  vm.add("S_IRWXU", tm.get("int"), false)
  vm.add("S_IRUSR", tm.get("int"), false)
  vm.add("S_IWUSR", tm.get("int"), false)
  vm.add("S_IXUSR", tm.get("int"), false)
  vm.add("S_IRWXG", tm.get("int"), false)
  vm.add("S_IRGRP", tm.get("int"), false)
  vm.add("S_IWGRP", tm.get("int"), false)
  vm.add("S_IXGRP", tm.get("int"), false)
  vm.add("S_IRWXO", tm.get("int"), false)
  vm.add("S_IROTH", tm.get("int"), false)
  vm.add("S_IWOTH", tm.get("int"), false)
  vm.add("S_IXOTH", tm.get("int"), false)
  vm.add("S_ISUID", tm.get("int"), false)
  vm.add("S_ISGID", tm.get("int"), false)
  vm.add("S_ISVTX", tm.get("int"), false)
  vm.add("UTIME_NOW", tm.get("int"), false)
  vm.add("UTIME_OMIT", tm.get("int"), false)
  vm.add("ST_RDONLY", tm.get("int"), false)
  vm.add("ST_NOSUID", tm.get("int"), false)
  vm.add("ITIMER_REAL", tm.get("int"), false)
  vm.add("ITIMER_VIRTUAL", tm.get("int"), false)
  vm.add("ITIMER_PROF", tm.get("int"), false)
  vm.add("WCONTINUED", tm.get("int"), false)
  vm.add("WNOHANG", tm.get("int"), false)
  vm.add("WUNTRACED", tm.get("int"), false)
  vm.add("WEXITED", tm.get("int"), false)
  vm.add("WNOWAIT", tm.get("int"), false)
  vm.add("WSTOPPED", tm.get("int"), false)
  vm.add("LOG_PID", tm.get("int"), false)
  vm.add("LOG_CONS", tm.get("int"), false)
  vm.add("LOG_NDELAY", tm.get("int"), false)
  vm.add("LOG_ODELAY", tm.get("int"), false)
  vm.add("LOG_NOWAIT", tm.get("int"), false)
  vm.add("LOG_KERN", tm.get("int"), false)
  vm.add("LOG_USER", tm.get("int"), false)
  vm.add("LOG_MAIL", tm.get("int"), false)
  vm.add("LOG_NEWS", tm.get("int"), false)
  vm.add("LOG_UUCP", tm.get("int"), false)
  vm.add("LOG_DAEMON", tm.get("int"), false)
  vm.add("LOG_AUTH", tm.get("int"), false)
  vm.add("LOG_CRON", tm.get("int"), false)
  vm.add("LOG_LPR", tm.get("int"), false)
  vm.add("LOG_LOCAL0", tm.get("int"), false)
  vm.add("LOG_LOCAL1", tm.get("int"), false)
  vm.add("LOG_LOCAL2", tm.get("int"), false)
  vm.add("LOG_LOCAL3", tm.get("int"), false)
  vm.add("LOG_LOCAL4", tm.get("int"), false)
  vm.add("LOG_LOCAL5", tm.get("int"), false)
  vm.add("LOG_LOCAL6", tm.get("int"), false)
  vm.add("LOG_LOCAL7", tm.get("int"), false)
  vm.add("LOG_EMERG", tm.get("int"), false)
  vm.add("LOG_ALERT", tm.get("int"), false)
  vm.add("LOG_CRIT", tm.get("int"), false)
  vm.add("LOG_ERR", tm.get("int"), false)
  vm.add("LOG_WARNING", tm.get("int"), false)
  vm.add("LOG_NOTICE", tm.get("int"), false)
  vm.add("LOG_INFO", tm.get("int"), false)
  vm.add("LOG_DEBUG", tm.get("int"), false)
  vm.add("TMAGIC", tm.createArray(tm.get("char")), false)
  vm.add("TMAGLEN", tm.get("int"), false)
  vm.add("TVERSION", tm.createArray(tm.get("char")), false)
  vm.add("TVERSLEN", tm.get("int"), false)
  vm.add("REGTYPE", tm.get("char"), false)
  vm.add("AREGTYPE", tm.get("char"), false)
  vm.add("LNKTYPE", tm.get("char"), false)
  vm.add("SYMTYPE", tm.get("char"), false)
  vm.add("CHRTYPE", tm.get("char"), false)
  vm.add("BLKTYPE", tm.get("char"), false)
  vm.add("DIRTYPE", tm.get("char"), false)
  vm.add("FIFOTYPE", tm.get("char"), false)
  vm.add("CONTTYPE", tm.get("char"), false)
  vm.add("TSUID", tm.get("int"), false)
  vm.add("TSGID", tm.get("int"), false)
  vm.add("TSVTX", tm.get("int"), false)
  vm.add("TUREAD", tm.get("int"), false)
  vm.add("TUWRITE", tm.get("int"), false)
  vm.add("TUEXEC", tm.get("int"), false)
  vm.add("TGREAD", tm.get("int"), false)
  vm.add("TGWRITE", tm.get("int"), false)
  vm.add("TGEXEC", tm.get("int"), false)
  vm.add("TOREAD", tm.get("int"), false)
  vm.add("TOWRITE", tm.get("int"), false)
  vm.add("TOEXEC", tm.get("int"), false)
  vm.add("NCCS", tm.get("int"), false)
  vm.add("VEOF", tm.get("int"), false)
  vm.add("VEOL", tm.get("int"), false)
  vm.add("VERASE", tm.get("int"), false)
  vm.add("VINTR", tm.get("int"), false)
  vm.add("VKILL", tm.get("int"), false)
  vm.add("VMIN", tm.get("int"), false)
  vm.add("VQUIT", tm.get("int"), false)
  vm.add("VSTART", tm.get("int"), false)
  vm.add("VSTOP", tm.get("int"), false)
  vm.add("VSUSP", tm.get("int"), false)
  vm.add("VTIME", tm.get("int"), false)
  vm.add("BRKINT", tm.get("int"), false)
  vm.add("ICRNL", tm.get("int"), false)
  vm.add("IGNBRK", tm.get("int"), false)
  vm.add("IGNCR", tm.get("int"), false)
  vm.add("IGNPAR", tm.get("int"), false)
  vm.add("INLCR", tm.get("int"), false)
  vm.add("INPCK", tm.get("int"), false)
  vm.add("ISTRIP", tm.get("int"), false)
  vm.add("IXANY", tm.get("int"), false)
  vm.add("IXOFF", tm.get("int"), false)
  vm.add("IXON", tm.get("int"), false)
  vm.add("PARMRK", tm.get("int"), false)
  vm.add("OPOST", tm.get("int"), false)
  vm.add("ONLCR", tm.get("int"), false)
  vm.add("OCRNL", tm.get("int"), false)
  vm.add("ONOCR", tm.get("int"), false)
  vm.add("ONLRET", tm.get("int"), false)
  vm.add("OFDEL", tm.get("int"), false)
  vm.add("OFILL", tm.get("int"), false)
  vm.add("NLDLY", tm.get("int"), false)
  vm.add("CRDLY", tm.get("int"), false)
  vm.add("CR0", tm.get("int"), false)
  vm.add("CR1", tm.get("int"), false)
  vm.add("CR2", tm.get("int"), false)
  vm.add("CR3", tm.get("int"), false)
  vm.add("TABDLY", tm.get("int"), false)
  vm.add("TAB0", tm.get("int"), false)
  vm.add("TAB1", tm.get("int"), false)
  vm.add("TAB2", tm.get("int"), false)
  vm.add("TAB3", tm.get("int"), false)
  vm.add("BSDLY", tm.get("int"), false)
  vm.add("BS0", tm.get("int"), false)
  vm.add("BS1", tm.get("int"), false)
  vm.add("VTDLY", tm.get("int"), false)
  vm.add("VT0", tm.get("int"), false)
  vm.add("VT1", tm.get("int"), false)
  vm.add("FFDLY", tm.get("int"), false)
  vm.add("FF0", tm.get("int"), false)
  vm.add("FF1", tm.get("int"), false)
  vm.add("B0", tm.get("int"), false)
  vm.add("B50", tm.get("int"), false)
  vm.add("B75", tm.get("int"), false)
  vm.add("B110", tm.get("int"), false)
  vm.add("B134", tm.get("int"), false)
  vm.add("B150", tm.get("int"), false)
  vm.add("B200", tm.get("int"), false)
  vm.add("B300", tm.get("int"), false)
  vm.add("B600", tm.get("int"), false)
  vm.add("B1200", tm.get("int"), false)
  vm.add("B1800", tm.get("int"), false)
  vm.add("B2400", tm.get("int"), false)
  vm.add("B4800", tm.get("int"), false)
  vm.add("B9600", tm.get("int"), false)
  vm.add("B19200", tm.get("int"), false)
  vm.add("B38400", tm.get("int"), false)
  vm.add("CSIZE", tm.get("int"), false)
  vm.add("CS5", tm.get("int"), false)
  vm.add("CS6", tm.get("int"), false)
  vm.add("CS7", tm.get("int"), false)
  vm.add("CS8", tm.get("int"), false)
  vm.add("CSTOPB", tm.get("int"), false)
  vm.add("CREAD", tm.get("int"), false)
  vm.add("PARENB", tm.get("int"), false)
  vm.add("PARODD", tm.get("int"), false)
  vm.add("HUPCL", tm.get("int"), false)
  vm.add("CLOCAL", tm.get("int"), false)
  vm.add("ECHO", tm.get("int"), false)
  vm.add("ECHOE", tm.get("int"), false)
  vm.add("ECHOK", tm.get("int"), false)
  vm.add("ECHONL", tm.get("int"), false)
  vm.add("ICANON", tm.get("int"), false)
  vm.add("IEXTEN", tm.get("int"), false)
  vm.add("ISIG", tm.get("int"), false)
  vm.add("NOFLSH", tm.get("int"), false)
  vm.add("TOSTOP", tm.get("int"), false)
  vm.add("TCSANOW", tm.get("int"), false)
  vm.add("TCSADRAIN", tm.get("int"), false)
  vm.add("TCSAFLUSH", tm.get("int"), false)
  vm.add("TCIFLUSH", tm.get("int"), false)
  vm.add("TCIOFLUSH", tm.get("int"), false)
  vm.add("TCOFLUSH", tm.get("int"), false)
  vm.add("TCIOFF", tm.get("int"), false)
  vm.add("TCION", tm.get("int"), false)
  vm.add("TCOOFF", tm.get("int"), false)
  vm.add("TCOON", tm.get("int"), false)
  vm.add("CLOCKS_PER_SEC", tm.get("clock_t"), false)
  vm.add("CLOCK_MONOTONIC", tm.get("int"), false)
  vm.add("CLOCK_PROCESS_CPUTIME_ID", tm.get("int"), false)
  vm.add("CLOCK_REALTIME", tm.get("int"), false)
  vm.add("CLOCK_THREAD_CPUTIME_ID", tm.get("int"), false)
  vm.add("TIMER_ABSTIME", tm.get("int"), false)
  vm.add("F_OK", tm.get("int"), false)
  vm.add("R_OK", tm.get("int"), false)
  vm.add("W_OK", tm.get("int"), false)
  vm.add("X_OK", tm.get("int"), false)
  vm.add("F_LOCK", tm.get("int"), false)
  vm.add("F_TEST", tm.get("int"), false)
  vm.add("F_TLOCK", tm.get("int"), false)
  vm.add("F_ULOCK", tm.get("int"), false)
  vm.add("STDERR_FILENO", tm.get("int"), false)
  vm.add("STDIN_FILENO", tm.get("int"), false)
  vm.add("STDOUT_FILENO", tm.get("int"), false)
  vm.add("EMPTY", tm.get("int"), false)
  vm.add("BOOT_TIME", tm.get("int"), false)
  vm.add("OLD_TIME", tm.get("int"), false)
  vm.add("NEW_TIME", tm.get("int"), false)
  vm.add("USER_PROCESS", tm.get("int"), false)
  vm.add("INIT_PROCESS", tm.get("int"), false)
  vm.add("LOGIN_PROCESS", tm.get("int"), false)
  vm.add("DEAD_PROCESS", tm.get("int"), false)
  vm.add("WEOF", tm.get("wint_t"), false)
  vm.add("WRDE_APPEND", tm.get("int"), false)
  vm.add("WRDE_DOOFFS", tm.get("int"), false)
  vm.add("WRDE_NOCMD", tm.get("int"), false)
  vm.add("WRDE_REUSE", tm.get("int"), false)
  vm.add("WRDE_SHOWERR", tm.get("int"), false)
  vm.add("WRDE_UNDEF", tm.get("int"), false)
  vm.add("WRDE_BADCHAR", tm.get("int"), false)
  vm.add("WRDE_BADVAL", tm.get("int"), false)
  vm.add("WRDE_CMDSUB", tm.get("int"), false)
  vm.add("WRDE_NOSPACE", tm.get("int"), false)
  vm.add("WRDE_SYNTAX", tm.get("int"), false)
  vm.add("errno", tm.get("int"), true)
  vm.add("in6addr_any", tm.get("in6_addr"), false)
  vm.add("in6addr_loopback", tm.get("in6_addr"), false)
  vm.add("daylight", tm.get("int"), false)
  vm.add("getdate_err", tm.get("int"), false)
  vm.add("timezone", tm.get("i64"), false)
  vm.add("optarg", tm.createArray(tm.get("char")), false)
  vm.add("opterr", tm.get("int"), false)
  vm.add("optind", tm.get("int"), false)
  vm.add("optopt", tm.get("int"), false)
}
