/*!
 * Copyright (c) Aaron Delasy
 * Licensed under the MIT License
 */

export fn E1000 (name: str) str {
  return "E1000 - Redefinition of '" + name + "'"
}

export fn E1001 (name: str) str {
  return "E1001 - Use of undeclared type `" + name + "`"
}

export fn E1002 (name: str, t: str) str {
  return "E1002 - Property '" + name + "' does not exist on type `" + t + "`"
}

export fn E1003 (name: str) str {
  return "E1003 - Use of undeclared variable '" + name + "'"
}

export fn E1004 () str {
  return "E1004 - Unable to deduce type of `nil`"
}

export fn E1005 (a: str, b: str) str {
  return "E1005 - Type `" + a + "` is not assignable to type `" + b + "`"
}

export fn E1006 (t: str) str {
  return "E1006 - Literal `nil` is not assignable to type `" + t + "`"
}

export fn E1007 () str {
  return "E1007 - Unable to deduce array literal type"
}

export fn E1008 (t: str, expectedType: str) str {
  return "E1008 - Incompatible array literal element of type `" + t + "`, expected `" + expectedType + "`"
}

export fn E1009 (a: str, b: str) str {
  return "E1009 - Type casting is not possible from `" + a + "` to `" + b + "`"
}

export fn E1010 () str {
  return "E1010 - Left-hand side of assignment expression should be a variable, property access or element access"
}

export fn E1011 (name: str) str {
  return "E1011 - Cannot assign to immutable variable '" + name + "'"
}

export fn E1012 (name: str) str {
  return "E1012 - Cannot assign to immutable property '" + name + "'"
}

export fn E1013 () str {
  return "E1013 - Awaited type expected to be asynchronous function"
}

export fn E1014 (t: str) str {
  return "E1014 - Index type expected to be `int`, got `" + t + "`"
}

export fn E1015 (t: str) str {
  return "E1015 - No index signature was found on type `" + t + "`"
}

export fn E1016 () str {
  return "E1016 - Unable to deduce map type"
}

export fn E1017 () str {
  return "E1017 - Type `void` can only be used as function return type"
}

export fn E1018 (t: str) str {
  return "E1018 - Unexpected `" + t + "` type in conditional. The condition should always be of `bool` type"
}

export fn E1019 (consequentType: str, alternateType: str) str {
  return "E1019 - Incompatible consequent `" + consequentType + "` type and alternate `" + alternateType + "` type"
}

export fn E1020 () str {
  return "E1020 - Unable to deduce type of enumeration member"
}

export fn E1021 (member: str) str {
  return "E1021 - Use of non-existing enumeration member '" + member + "'"
}

export fn E1022 (name: str) str {
  return "E1022 - '" + name + "' refers to a type, but is being used as a namespace"
}

export fn E1023 (ns: str, member: str) str {
  return "E1023 - Namespace '" + ns + "' has no exported member '" + member + "'"
}

export fn E1024 () str {
  return "E1024 - Operand of an increment/decrement operator should be a variable, property access or element access"
}

export fn E1025 (operator: str, t: str) str {
  return "E1025 - Cannot apply unary operator '" + operator + "' to type `" + t + "`"
}

export fn E1026 (operator: str, t1: str, t2: str) str {
  return "E1026 - Cannot apply binary operator '" + operator + "' to operands of type `" + t1 + "` and `" + t2 + "`"
}

export fn E1027 (operator: str, t: str) str {
  return "E1027 - Cannot apply binary assignment operator '" + operator + "' to type `" + t + "`"
}

export fn E1028 () str {
  return "E1028 - Variadic parameters cannot have initializers"
}

export fn E1029 (t: str) str {
  return "E1029 - Integer literal is out of range for type `" + t + "`"
}

export fn E1030 (t: str) str {
  return "E1030 - Floating-point literal is out of range for type `" + t + "`"
}

export fn E1031 (t: str) str {
  return "E1031 - Type `" + t + "` has no call signature"
}

export fn E1032 (name: str? = nil) str {
  return "E1032 - Extraneous argument " + (name == nil ? "" : " '" + name + "' ") + "passed"
}

export fn E1033 (name: str) str {
  return "E1033 - Variadic parameter '" + name + "' cannot be passed by name"
}

export fn E1034 () str {
  return "E1034 - Named arguments cannot be followed by regular arguments"
}

export fn E1035 (t1: str, t2: str) str {
  return "E1035 - Argument of type `" + t1 + "` is not assignable to parameter of type `" + t2 + "`"
}

export fn E1036 (name: str) str {
  return "E1036 - Missing argument for required parameter '" + name + "'"
}

export fn E1037 () str {
  return "E1037 - Missing argument for required parameter"
}

export fn E1038 () str {
  return "E1038 - Constant declaration can only be used at the top level"
}

export fn E1039 () str {
  return "E1039 - Variables declared at the top level are required to be constants"
}

export fn E1040 (name: str, t: str) str {
  return "E1040 - Variable '" + name + "' of type `" + t + "` is missing initializer"
}

export fn E1041 (name: str, t: str) str {
  return "E1041 - Property '" + name + "' of type `" + t + "` is missing initializer"
}

export fn E1042 () str {
  return "E1042 - Main declaration can only be used at the top level"
}

export fn E1043 () str {
  return "E1043 - Import declaration can only be used at the top level"
}

export fn E1044 () str {
  return "E1044 - Export declaration can only be used at the top level"
}

export fn E1045 () str {
  return "E1045 - If statement cannot be used at the top level"
}

export fn E1046 () str {
  return "E1046 - Loop statement cannot be used at the top level"
}

export fn E1047 () str {
  return "E1047 - Throw statement cannot be used at the top level"
}

export fn E1048 () str {
  return "E1048 - Try statement cannot be used at the top level"
}

export fn E1049 () str {
  return "E1049 - Expression statement cannot be used at the top level"
}

export fn E1050 (name: str) str {
  return "E1050 - A '" + name + "' statement can only be used within an enclosing loop statement"
}

export fn E1051 (property: str) str {
  return "E1051 - Duplicate declaration of property '" + property + "'"
}
