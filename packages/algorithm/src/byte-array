/*!
 * Copyright (c) Aaron Delasy
 * Licensed under the MIT License
 */

const HEX_CHARS := ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"]

export fn fromStr (in: str) byte[] {
  mut result: byte[]
  loop i := 0; i < in.len; i++ {
    result.push(in[i].byte)
  }
  return result
}

export fn toHexStr (in: byte[]) str {
  mut result := ""
  loop i := 0; i < in.len; i++ {
    b := in[i] as byte
    i: int = b >> 4
    j: int = b & 0x0F
    result += HEX_CHARS[i]
    result += HEX_CHARS[j]
  }
  return result
}

export fn toStr (in: byte[]) str {
  mut result := ""
  loop i := 0; i < in.len; i++ {
    ch: char = in[i] as byte
    result += ch.str()
  }
  return result
}
