a := !b
a := -b
a := +b
a := --b
a := ++b
a := ~b
a := b--
a := b++
===== out =====
Program
  VariableDeclaration(start=0, end=7)
    name
      Identifier(start=0 end=1) a
    initializer
      UnaryExpression(start=5, end=7 prefix)
        operator
          OpExcl(start=5 end=6) !
        operand
          Identifier(start=6 end=7) b
  VariableDeclaration(start=7, end=15)
    name
      Identifier(start=8 end=9) a
    initializer
      UnaryExpression(start=13, end=15 prefix)
        operator
          OpMinus(start=13 end=14) -
        operand
          Identifier(start=14 end=15) b
  VariableDeclaration(start=15, end=23)
    name
      Identifier(start=16 end=17) a
    initializer
      UnaryExpression(start=21, end=23 prefix)
        operator
          OpPlus(start=21 end=22) +
        operand
          Identifier(start=22 end=23) b
  VariableDeclaration(start=23, end=32)
    name
      Identifier(start=24 end=25) a
    initializer
      UnaryExpression(start=29, end=32 prefix)
        operator
          OpMinusMinus(start=29 end=31) --
        operand
          Identifier(start=31 end=32) b
  VariableDeclaration(start=32, end=41)
    name
      Identifier(start=33 end=34) a
    initializer
      UnaryExpression(start=38, end=41 prefix)
        operator
          OpPlusPlus(start=38 end=40) ++
        operand
          Identifier(start=40 end=41) b
  VariableDeclaration(start=41, end=49)
    name
      Identifier(start=42 end=43) a
    initializer
      UnaryExpression(start=47, end=49 prefix)
        operator
          OpTilde(start=47 end=48) ~
        operand
          Identifier(start=48 end=49) b
  VariableDeclaration(start=49, end=58)
    name
      Identifier(start=50 end=51) a
    initializer
      UnaryExpression(start=55, end=58)
        operand
          Identifier(start=55 end=56) b
        operator
          OpMinusMinus(start=56 end=58) --
  VariableDeclaration(start=58, end=67)
    name
      Identifier(start=59 end=60) a
    initializer
      UnaryExpression(start=64, end=67)
        operand
          Identifier(start=64 end=65) b
        operator
          OpPlusPlus(start=65 end=67) ++
  EofStatement(start=67, end=67)
