a := []
a := [0]
a := [0,]
a := [1, 2]
a := [1, 2,]
a := [1, 2, 3]
a := [1, 2, 3,]
===== out =====
Program
  VariableDeclaration(start=0, end=7)
    name
      Identifier(start=0 end=1) a
    initializer
      ArrayExpression(start=5, end=7)
  VariableDeclaration(start=8, end=16)
    name
      Identifier(start=8 end=9) a
    initializer
      ArrayExpression(start=13, end=16)
        IntegerLiteral(start=14, end=15 type=Decimal) 0
  VariableDeclaration(start=17, end=26)
    name
      Identifier(start=17 end=18) a
    initializer
      ArrayExpression(start=22, end=26)
        IntegerLiteral(start=23, end=24 type=Decimal) 0
  VariableDeclaration(start=27, end=38)
    name
      Identifier(start=27 end=28) a
    initializer
      ArrayExpression(start=32, end=38)
        IntegerLiteral(start=33, end=34 type=Decimal) 1
        IntegerLiteral(start=36, end=37 type=Decimal) 2
  VariableDeclaration(start=39, end=51)
    name
      Identifier(start=39 end=40) a
    initializer
      ArrayExpression(start=44, end=51)
        IntegerLiteral(start=45, end=46 type=Decimal) 1
        IntegerLiteral(start=48, end=49 type=Decimal) 2
  VariableDeclaration(start=52, end=66)
    name
      Identifier(start=52 end=53) a
    initializer
      ArrayExpression(start=57, end=66)
        IntegerLiteral(start=58, end=59 type=Decimal) 1
        IntegerLiteral(start=61, end=62 type=Decimal) 2
        IntegerLiteral(start=64, end=65 type=Decimal) 3
  VariableDeclaration(start=67, end=82)
    name
      Identifier(start=67 end=68) a
    initializer
      ArrayExpression(start=72, end=82)
        IntegerLiteral(start=73, end=74 type=Decimal) 1
        IntegerLiteral(start=76, end=77 type=Decimal) 2
        IntegerLiteral(start=79, end=80 type=Decimal) 3
  EofStatement(start=82, end=82)
