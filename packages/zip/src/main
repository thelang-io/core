/*!
 * Copyright (c) Aaron Delasy
 * Licensed under the MIT License
 */

export obj ZipError {
  message: str
  stack: str
}

fn install7z () str {
  version := "2301"
  homeDir := process_home + path_SEP + "The"
  binDir := homeDir + path_SEP + "bin"
  exePath := binDir + path_SEP + "7z-" + version + ".exe"

  if fs_existsSync(exePath) { return "\"" + exePath + "\"" }
  if !fs_existsSync(homeDir) { fs_mkdirSync(homeDir) }
  if !fs_existsSync(binDir) { fs_mkdirSync(binDir) }

  archPostfix := os_ARCH == "x86_64" ? "-x64" : os_ARCH == "arm64" ? "-arm64" : ""
  installDir := binDir + path_SEP + "7-Zip-" + version
  installerPath := binDir + path_SEP + "7z-installer.exe"

  mut req := request_open("GET", "https://www.7-zip.org/a/7z" + version + archPostfix + ".exe")
  res := req.read()
  req.close()

  fs_writeFileSync(installerPath, res.data)
  process_runSync("start /wait \"\" \"" + installerPath + "\" /S /D=\"" + installDir + "\"")
  fs_rmSync(installerPath)
  fs_linkSync(installDir + path_SEP + "7z.exe", exePath)

  return "\"" + exePath + "\""
}

export fn zip (name: str, path: str, cwd: str? = nil) {
  if path != "*" && !fs_existsSync(path) {
    throw ZipError{message: "Can't perform zip operation, path doesn't exists"}
  }

  mut cmd: str

  if os_NAME == "Windows" {
    cmd = install7z() + " a \"" + name + "\" " + (path == "*" ? "*" : "\"" + path + "\"") + " > nul"
    cmd = cwd == nil ? cmd : ("(cd \"" + cwd + "\" && " + cmd + ")")
  } else {
    cmd = "zip -qr '" + name + "' " + (path == "*" ? "*" : "'" + path + "'")
    cmd = cwd == nil ? cmd : ("(cd '" + cwd + "' && " + cmd + ")")
  }

  process_runSync(cmd)
}

export fn unzip (source: str, destination: str) {
  if !fs_existsSync(source) {
    throw ZipError{message: "Can't perform unzip operation, path doesn't exists"}
  }

  mut cmd: str

  if os_NAME == "Windows" {
    cmd = install7z() + " x -y \"" + source + "\" \"-o" + destination + "\" > nul"
  } else {
    cmd = "unzip -q '" + source + "' -d '" + destination + "'"
  }

  process_runSync(cmd)
}
