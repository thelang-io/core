/*!
 * Copyright (c) Aaron Delasy
 * Licensed under the MIT License
 */

import * as AST from "the/c"
import * as Parser from "the/parser"
import ExpressionHelpers from "./expression-helpers"

export fn generateCallExpression (helpers: ExpressionHelpers, item: ref Parser.Expression) AST.CExpression? {
  if item.isCall() {
    expression := item.asCall()
    return AST.createCallExpression(helpers.e(ref expression.callee))
  }

  return nil
}
