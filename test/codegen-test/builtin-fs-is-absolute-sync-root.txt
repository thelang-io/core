======= stdin =======
main {
  fs_isAbsoluteSync("test/fixtures/builtin-fs-is-absolute-sync-root.txt")

  if os_name() == "Windows" {
    fs_isAbsoluteSync("C:\\\\test\\fixtures\\builtin-fs-is-absolute-sync-root.txt")
  } else {
    fs_isAbsoluteSync("/test/fixtures/builtin-fs-is-absolute-sync-root.txt")
  }
}
======= code =======
#if defined(WIN32) || defined(_WIN32) || defined(__WIN32) || defined(__WIN32__)
  #define THE_OS_WINDOWS
  #define THE_EOL "\r\n"
#else
  #if defined(__APPLE__)
    #define THE_OS_MACOS
  #elif defined(__linux__)
    #define THE_OS_LINUX
  #endif
  #define THE_EOL "\n"
#endif

#include <ctype.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifndef THE_OS_WINDOWS
  #include <sys/utsname.h>
#endif

struct str {
  char *d;
  size_t l;
};

void *alloc (size_t);
struct str os_name ();
struct str str_alloc (const char *);
bool str_eq_cstr (struct str, const char *);
void str_free (struct str);
bool fs_isAbsoluteSync (struct str);

void *alloc (size_t l) {
  void *r = malloc(l);
  if (r == NULL) {
    fprintf(stderr, "Error: failed to allocate %zu bytes" THE_EOL, l);
    exit(EXIT_FAILURE);
  }
  return r;
}
struct str os_name () {
  #ifdef THE_OS_WINDOWS
    return str_alloc("Windows");
  #else
    struct utsname buf;
    if (uname(&buf) < 0) {
      fprintf(stderr, "Error: failed to retrieve uname information" THE_EOL);
      exit(EXIT_FAILURE);
    }
    if (strcmp(buf.sysname, "Darwin") == 0) return str_alloc("macOS");
    return str_alloc(buf.sysname);
  #endif
}
struct str str_alloc (const char *r) {
  size_t l = strlen(r);
  char *d = alloc(l);
  memcpy(d, r, l);
  return (struct str) {d, l};
}
bool str_eq_cstr (struct str s, const char *r) {
  bool d = s.l == strlen(r) && memcmp(s.d, r, s.l) == 0;
  free(s.d);
  return d;
}
void str_free (struct str s) {
  free(s.d);
}
bool fs_isAbsoluteSync (struct str s) {
  bool r = (s.l > 0 && s.d[0] == '/') || (s.l > 2 && isalpha(s.d[0]) && s.d[1] == ':' && s.d[2] == '\\');
  str_free(s);
  return r;
}

int main () {
  fs_isAbsoluteSync(str_alloc("test/fixtures/builtin-fs-is-absolute-sync-root.txt"));
  if (str_eq_cstr(os_name(), "Windows")) {
    fs_isAbsoluteSync(str_alloc("C:\\\\test\\fixtures\\builtin-fs-is-absolute-sync-root.txt"));
  } else {
    fs_isAbsoluteSync(str_alloc("/test/fixtures/builtin-fs-is-absolute-sync-root.txt"));
  }
}
======= flags =======
======= stdout =======
