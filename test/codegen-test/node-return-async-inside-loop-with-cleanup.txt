======= stdin =======
async fn a () {}

async fn test1 () {
  v1 := "test1"

  loop i := 0; i < 10; i++ {
    v2 := "test2"
    await a()
    v3 := "test3"
    print("1 start", i)
    await a()
    v4 := "test4"
    if i == 5 {
      v5 := "test5"
      return
    }
    v6 := "test6"
    await a()
    print("1 end", i)
    v7 := "test7"
    await a()
  }
}

async fn test2 () {
  v1 := "test1"

  loop i := 0; i < 10; i++ {
    await a()
    print("2 start", i)
    if i == 5 {
      v2 := "test1"
      return
    }
    print("2 end", i)
  }
}

async fn test3 () {
  v1 := "test1"

  loop i := 0; i < 10; i++ {
    v2 := "test1"
    print("3 start", i)
    if i == 5 { return }
    print("3 end", i)
    await a()
  }
}

async fn test4 () {
  v1 := "test1"

  loop i := 0; i < 10; i++ {
    print("4 start", i)
    if i == 5 { return }
    print("4 end", i)
    await a()
  }
}

async fn test5 () {
  loop i := 0; i < 10; i++ {
    v2 := "test2"
    await a()
    v3 := "test3"
    print("1 start", i)
    await a()
    v4 := "test4"
    if i == 5 {
      v5 := "test5"
      return
    }
    v6 := "test6"
    await a()
    print("1 end", i)
    v7 := "test7"
    await a()
  }
}

async fn test6 () {
  loop i := 0; i < 10; i++ {
    await a()
    print("2 start", i)
    if i == 5 {
      v2 := "test1"
      return
    }
    print("2 end", i)
  }
}

async fn test7 () {
  loop i := 0; i < 10; i++ {
    v2 := "test1"
    print("3 start", i)
    if i == 5 { return }
    print("3 end", i)
    await a()
  }
}

async fn test8 () {
  loop i := 0; i < 10; i++ {
    print("4 start", i)
    if i == 5 { return }
    print("4 end", i)
    await a()
  }
}

async fn test9 () {
  v1 := "test1"

  loop i := "1"; i != "1111111111"; i += "1" {
    v2 := "test2"
    await a()
    v3 := "test3"
    print("1 start", i)
    await a()
    v4 := "test4"
    if i == "11111" {
      v5 := "test5"
      return
    }
    v6 := "test6"
    await a()
    print("1 end", i)
    v7 := "test7"
    await a()
  }
}

async fn test10 () {
  v1 := "test1"

  loop i := "1"; i != "1111111111"; i += "1" {
    await a()
    print("2 start", i)
    if i == "11111" {
      v2 := "test1"
      return
    }
    print("2 end", i)
  }
}

async fn test11 () {
  v1 := "test1"

  loop i := "1"; i != "1111111111"; i += "1" {
    v2 := "test1"
    print("3 start", i)
    if i == "11111" { return }
    print("3 end", i)
    await a()
  }
}

async fn test12 () {
  v1 := "test1"

  loop i := "1"; i != "1111111111"; i += "1" {
    print("4 start", i)
    if i == "11111" { return }
    print("4 end", i)
    await a()
  }
}

async fn test13 () {
  loop i := "1"; i != "1111111111"; i += "1" {
    v2 := "test2"
    await a()
    v3 := "test3"
    print("1 start", i)
    await a()
    v4 := "test4"
    if i == "11111" {
      v5 := "test5"
      return
    }
    v6 := "test6"
    await a()
    print("1 end", i)
    v7 := "test7"
    await a()
  }
}

async fn test14 () {
  loop i := "1"; i != "1111111111"; i += "1" {
    await a()
    print("2 start", i)
    if i == "11111" {
      v2 := "test1"
      return
    }
    print("2 end", i)
  }
}

async fn test15 () {
  loop i := "1"; i != "1111111111"; i += "1" {
    v2 := "test1"
    print("3 start", i)
    if i == "11111" { return }
    print("3 end", i)
    await a()
  }
}

async fn test16 () {
  loop i := "1"; i != "1111111111"; i += "1" {
    print("4 start", i)
    if i == "11111" { return }
    print("4 end", i)
    await a()
  }
}

main {
  await test1()
  await test2()
  await test3()
  await test4()
  await test5()
  await test6()
  await test7()
  await test8()
  await test9()
  await test10()
  await test11()
  await test12()
  await test13()
  await test14()
  await test15()
  await test16()
}
======= code =======
======= flags =======
======= stdout =======
