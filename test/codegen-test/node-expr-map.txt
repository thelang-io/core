======= stdin =======
main {
  { "key": true };
  { "key": 'a' };
  { "key": 4.12 };
  { "key": 1 };
  { "key1": true, "key2": false };
  { "key1": 'a', "key2": 'z' };
  { "key1": 4.12, "key2": 4.12 };
  { "key1": 1, "key2": 1 };
}
======= code =======
#if defined(WIN32) || defined(_WIN32) || defined(__WIN32) || defined(__WIN32__)
  #define THE_OS_WINDOWS
  #define THE_EOL "\r\n"
  #define THE_PATH_SEP "\\"
#else
  #if defined(__APPLE__)
    #define THE_OS_MACOS
  #elif defined(__linux__)
    #define THE_OS_LINUX
  #endif
  #define THE_EOL "\n"
  #define THE_PATH_SEP "/"
#endif

#include <setjmp.h>
#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
  const char *file;
  const char *name;
  int line;
  int col;
} err_stack_t;
typedef struct {
  int id;
  void *ctx;
  jmp_buf buf[10];
  int buf_idx;
  err_stack_t stack[10];
  int stack_idx;
  void (*_free) (void *);
} err_state_t;
struct str {
  char *d;
  size_t l;
};

struct __THE_1_pair_strMSboolME;
struct __THE_1_map_strMSboolME;
struct __THE_1_pair_strMScharME;
struct __THE_1_map_strMScharME;
struct __THE_1_pair_strMSfloatME;
struct __THE_1_map_strMSfloatME;
struct __THE_1_pair_strMSintME;
struct __THE_1_map_strMSintME;

struct __THE_1_pair_strMSboolME {
  struct str f;
  bool s;
};
struct __THE_1_map_strMSboolME {
  struct __THE_1_pair_strMSboolME *d;
  size_t c;
  size_t l;
};
struct __THE_1_pair_strMScharME {
  struct str f;
  char s;
};
struct __THE_1_map_strMScharME {
  struct __THE_1_pair_strMScharME *d;
  size_t c;
  size_t l;
};
struct __THE_1_pair_strMSfloatME {
  struct str f;
  double s;
};
struct __THE_1_map_strMSfloatME {
  struct __THE_1_pair_strMSfloatME *d;
  size_t c;
  size_t l;
};
struct __THE_1_pair_strMSintME {
  struct str f;
  int32_t s;
};
struct __THE_1_map_strMSintME {
  struct __THE_1_pair_strMSintME *d;
  size_t c;
  size_t l;
};

err_state_t err_state = {-1, NULL, {}, 0, {}, 0, NULL};

void *alloc (size_t);
void error_alloc (err_state_t *, size_t);
struct str str_alloc (const char *);
void str_free (struct str);
struct __THE_1_map_strMSboolME __THE_1_map_strMSboolME_alloc (int, ...);
void __THE_1_map_strMSboolME_free (struct __THE_1_map_strMSboolME);
struct __THE_1_map_strMScharME __THE_1_map_strMScharME_alloc (int, ...);
void __THE_1_map_strMScharME_free (struct __THE_1_map_strMScharME);
struct __THE_1_map_strMSfloatME __THE_1_map_strMSfloatME_alloc (int, ...);
void __THE_1_map_strMSfloatME_free (struct __THE_1_map_strMSfloatME);
struct __THE_1_map_strMSintME __THE_1_map_strMSintME_alloc (int, ...);
void __THE_1_map_strMSintME_free (struct __THE_1_map_strMSintME);

void *alloc (size_t n1) {
  void *r = malloc(n1);
  if (r == NULL) error_alloc(&err_state, n1);
  return r;
}
void error_alloc (err_state_t *fn_err_state, size_t n1) {
  char d[4096];
  size_t l = 0;
  for (int i = fn_err_state->stack_idx - 1; i >= 0; i--) {
    err_stack_t it = fn_err_state->stack[i];
    const char *fmt = THE_EOL "  at %s (%s)";
    size_t z = snprintf(NULL, 0, fmt, it.name, it.file);
    if (l + z >= 4096) {
      break;
    }
    sprintf(&d[l], fmt, it.name, it.file);
    l += z;
  }
  fprintf(stderr, "Allocation Error: failed to allocate %zu bytes%s" THE_EOL, n1, d);
  exit(EXIT_FAILURE);
}
struct str str_alloc (const char *r) {
  size_t l = strlen(r);
  char *d = alloc(l);
  memcpy(d, r, l);
  return (struct str) {d, l};
}
void str_free (struct str s) {
  free(s.d);
}
struct __THE_1_map_strMSboolME __THE_1_map_strMSboolME_alloc (int x, ...) {
  struct __THE_1_pair_strMSboolME *d = alloc(x * sizeof(struct __THE_1_pair_strMSboolME));
  va_list args;
  va_start(args, x);
  for (int i = 0; i < x; i++) d[i] = (struct __THE_1_pair_strMSboolME) {va_arg(args, struct str), va_arg(args, int)};
  va_end(args);
  return (struct __THE_1_map_strMSboolME) {d, x, x};
}
void __THE_1_map_strMSboolME_free (struct __THE_1_map_strMSboolME n) {
  for (size_t i = 0; i < n.l; i++) {
    str_free((struct str) n.d[i].f);
  }
  free(n.d);
}
struct __THE_1_map_strMScharME __THE_1_map_strMScharME_alloc (int x, ...) {
  struct __THE_1_pair_strMScharME *d = alloc(x * sizeof(struct __THE_1_pair_strMScharME));
  va_list args;
  va_start(args, x);
  for (int i = 0; i < x; i++) d[i] = (struct __THE_1_pair_strMScharME) {va_arg(args, struct str), va_arg(args, int)};
  va_end(args);
  return (struct __THE_1_map_strMScharME) {d, x, x};
}
void __THE_1_map_strMScharME_free (struct __THE_1_map_strMScharME n) {
  for (size_t i = 0; i < n.l; i++) {
    str_free((struct str) n.d[i].f);
  }
  free(n.d);
}
struct __THE_1_map_strMSfloatME __THE_1_map_strMSfloatME_alloc (int x, ...) {
  struct __THE_1_pair_strMSfloatME *d = alloc(x * sizeof(struct __THE_1_pair_strMSfloatME));
  va_list args;
  va_start(args, x);
  for (int i = 0; i < x; i++) d[i] = (struct __THE_1_pair_strMSfloatME) {va_arg(args, struct str), va_arg(args, double)};
  va_end(args);
  return (struct __THE_1_map_strMSfloatME) {d, x, x};
}
void __THE_1_map_strMSfloatME_free (struct __THE_1_map_strMSfloatME n) {
  for (size_t i = 0; i < n.l; i++) {
    str_free((struct str) n.d[i].f);
  }
  free(n.d);
}
struct __THE_1_map_strMSintME __THE_1_map_strMSintME_alloc (int x, ...) {
  struct __THE_1_pair_strMSintME *d = alloc(x * sizeof(struct __THE_1_pair_strMSintME));
  va_list args;
  va_start(args, x);
  for (int i = 0; i < x; i++) d[i] = (struct __THE_1_pair_strMSintME) {va_arg(args, struct str), va_arg(args, int32_t)};
  va_end(args);
  return (struct __THE_1_map_strMSintME) {d, x, x};
}
void __THE_1_map_strMSintME_free (struct __THE_1_map_strMSintME n) {
  for (size_t i = 0; i < n.l; i++) {
    str_free((struct str) n.d[i].f);
  }
  free(n.d);
}

int main () {
  __THE_1_map_strMSboolME_free((struct __THE_1_map_strMSboolME) __THE_1_map_strMSboolME_alloc(1, str_alloc("key"), true));
  __THE_1_map_strMScharME_free((struct __THE_1_map_strMScharME) __THE_1_map_strMScharME_alloc(1, str_alloc("key"), 'a'));
  __THE_1_map_strMSfloatME_free((struct __THE_1_map_strMSfloatME) __THE_1_map_strMSfloatME_alloc(1, str_alloc("key"), 4.12));
  __THE_1_map_strMSintME_free((struct __THE_1_map_strMSintME) __THE_1_map_strMSintME_alloc(1, str_alloc("key"), 1));
  __THE_1_map_strMSboolME_free((struct __THE_1_map_strMSboolME) __THE_1_map_strMSboolME_alloc(2, str_alloc("key1"), true, str_alloc("key2"), false));
  __THE_1_map_strMScharME_free((struct __THE_1_map_strMScharME) __THE_1_map_strMScharME_alloc(2, str_alloc("key1"), 'a', str_alloc("key2"), 'z'));
  __THE_1_map_strMSfloatME_free((struct __THE_1_map_strMSfloatME) __THE_1_map_strMSfloatME_alloc(2, str_alloc("key1"), 4.12, str_alloc("key2"), 4.12));
  __THE_1_map_strMSintME_free((struct __THE_1_map_strMSintME) __THE_1_map_strMSintME_alloc(2, str_alloc("key1"), 1, str_alloc("key2"), 1));
}
======= flags =======
======= stdout =======
