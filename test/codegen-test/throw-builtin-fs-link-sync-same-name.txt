======= stdin =======
main {
  fs_linkSync("test/fixtures/test.txt", "test/fixtures/test.txt")
}
======= code =======
#if defined(WIN32) || defined(_WIN32) || defined(__WIN32) || defined(__WIN32__)
  #define THE_OS_WINDOWS
  #define THE_EOL "\r\n"
#else
  #if defined(__APPLE__)
    #define THE_OS_MACOS
  #elif defined(__linux__)
    #define THE_OS_LINUX
  #endif
  #define THE_EOL "\n"
#endif

#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifdef THE_OS_WINDOWS
  #include <windows.h>
#endif
#ifndef THE_OS_WINDOWS
  #include <unistd.h>
#endif

struct str {
  char *d;
  size_t l;
};

void *alloc (size_t);
struct str str_alloc (const char *);
char *str_cstr (const struct str);
void str_free (struct str);
void fs_linkSync (struct str, struct str);

void *alloc (size_t l) {
  void *r = malloc(l);
  if (r == NULL) {
    fprintf(stderr, "Error: failed to allocate %zu bytes" THE_EOL, l);
    exit(EXIT_FAILURE);
  }
  return r;
}
struct str str_alloc (const char *r) {
  size_t l = strlen(r);
  char *d = alloc(l);
  memcpy(d, r, l);
  return (struct str) {d, l};
}
char *str_cstr (const struct str s) {
  char *d = alloc(s.l + 1);
  memcpy(d, s.d, s.l);
  d[s.l] = '\0';
  return d;
}
void str_free (struct str s) {
  free(s.d);
}
void fs_linkSync (struct str s1, struct str s2) {
  char *c1 = str_cstr(s1);
  char *c2 = str_cstr(s2);
  #ifdef THE_OS_WINDOWS
    for (size_t i = 0; i < s1.l; i++) c1[i] = (c1[i] == '/' ? '\\' : c1[i]);
    for (size_t i = 0; i < s2.l; i++) c2[i] = (c2[i] == '/' ? '\\' : c2[i]);
    DWORD flags = 0;
    if (GetFileAttributes(c1) & FILE_ATTRIBUTE_DIRECTORY) flags |= SYMBOLIC_LINK_FLAG_DIRECTORY;
    bool r = CreateSymbolicLink(c2, c1, flags);
  #else
    bool r = symlink(c1, c2) == 0;
  #endif
  if (!r) {
    fprintf(stderr, "Error: failed to create symbolic link from `%s` to `%s`" THE_EOL, c1, c2);
    exit(EXIT_FAILURE);
  }
  str_free(s1);
  str_free(s2);
  free(c1);
  free(c2);
}

int main () {
  fs_linkSync(str_alloc("test/fixtures/test.txt"), str_alloc("test/fixtures/test.txt"));
}
======= flags =======
======= stderr =======
Error: failed to create symbolic link from `test/fixtures/test.txt` to `test/fixtures/test.txt`
