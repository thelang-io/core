======= stdin =======
main {
  dirName := "test/fixtures/builtin-fs-rmdir-sync"

  fs_mkdirSync(dirName)
  fs_rmdirSync(dirName)
}
======= code =======
#if defined(WIN32) || defined(_WIN32) || defined(__WIN32) || defined(__WIN32__)
  #define THE_OS_WINDOWS
  #define THE_EOL "\r\n"
#else
  #if defined(__APPLE__)
    #define THE_OS_MACOS
  #elif defined(__linux__)
    #define THE_OS_LINUX
  #endif
  #define THE_EOL "\n"
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/stat.h>
#ifdef THE_OS_WINDOWS
  #include <direct.h>
  #include <windows.h>
#endif
#ifndef THE_OS_WINDOWS
  #include <unistd.h>
#endif

struct str {
  char *d;
  size_t l;
};

void *alloc (size_t);
struct str str_alloc (const char *);
struct str str_copy (const struct str);
void str_free (struct str);
void fs_mkdirSync (struct str);
void fs_rmdirSync (struct str);

void *alloc (size_t l) {
  void *r = malloc(l);
  if (r == NULL) {
    fprintf(stderr, "Error: failed to allocate %zu bytes" THE_EOL, l);
    exit(EXIT_FAILURE);
  }
  return r;
}
struct str str_alloc (const char *r) {
  size_t l = strlen(r);
  char *d = alloc(l);
  memcpy(d, r, l);
  return (struct str) {d, l};
}
struct str str_copy (const struct str s) {
  char *d = alloc(s.l);
  memcpy(d, s.d, s.l);
  return (struct str) {d, s.l};
}
void str_free (struct str s) {
  free(s.d);
}
void fs_mkdirSync (struct str s) {
  char *c = alloc(s.l + 1);
  memcpy(c, s.d, s.l);
  c[s.l] = '\0';
  #ifdef THE_OS_WINDOWS
    int r = CreateDirectoryA(c, NULL);
  #else
    int r = mkdir(c, 0777);
  #endif
  if (r != 0) {
    fprintf(stderr, "Error: failed to create directory `%s`" THE_EOL, c);
    exit(EXIT_FAILURE);
  }
  free(c);
  str_free(s);
}
void fs_rmdirSync (struct str s) {
  char *c = alloc(s.l + 1);
  memcpy(c, s.d, s.l);
  c[s.l] = '\0';
  #ifdef THE_OS_WINDOWS
    int r = _rmdir(c);
  #else
    int r = rmdir(c);
  #endif
  if (r != 0) {
    fprintf(stderr, "Error: failed to remove directory `%s`" THE_EOL, c);
    exit(EXIT_FAILURE);
  }
  free(c);
  str_free(s);
}

int main () {
  const struct str __THE_0_dirName_0 = str_alloc("test/fixtures/builtin-fs-rmdir-sync");
  fs_mkdirSync(str_copy(__THE_0_dirName_0));
  fs_rmdirSync(str_copy(__THE_0_dirName_0));
  str_free((struct str) __THE_0_dirName_0);
}
======= flags =======
======= stdout =======
