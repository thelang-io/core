======= stdin =======
main {
  fs_chmodSync("delasy.txt", 0o000)
}
======= code =======
#if defined(WIN32) || defined(_WIN32) || defined(__WIN32) || defined(__WIN32__)
  #define THE_OS_WINDOWS
  #define THE_EOL "\r\n"
#else
  #if defined(__APPLE__)
    #define THE_OS_MACOS
  #elif defined(__linux__)
    #define THE_OS_LINUX
  #endif
  #define THE_EOL "\n"
#endif

#include <inttypes.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#ifndef THE_OS_WINDOWS
  #include <sys/stat.h>
#endif

struct str {
  char *d;
  size_t l;
};

void *alloc (size_t);
struct str str_alloc (const char *);
void str_free (struct str);
void fs_chmodSync (struct str, int32_t);

void *alloc (size_t l) {
  void *r = malloc(l);
  if (r == NULL) {
    fprintf(stderr, "Error: failed to allocate %zu bytes" THE_EOL, l);
    exit(EXIT_FAILURE);
  }
  return r;
}
struct str str_alloc (const char *r) {
  size_t l = strlen(r);
  char *d = alloc(l);
  memcpy(d, r, l);
  return (struct str) {d, l};
}
void str_free (struct str s) {
  free(s.d);
}
void fs_chmodSync (struct str s, int32_t m) {
  char *c = alloc(s.l + 1);
  memcpy(c, s.d, s.l);
  c[s.l] = '\0';
  if (chmod(c, m) != 0) {
    fprintf(stderr, "Error: failed to change mode to %" PRId32 " for file `%s`" THE_EOL, m, c);
    exit(EXIT_FAILURE);
  }
  str_free(s);
  free(c);
}

int main () {
  fs_chmodSync(str_alloc("delasy.txt"), 0000);
}
======= flags =======
======= stderr =======
Error: failed to change mode to 0 for file `delasy.txt`
