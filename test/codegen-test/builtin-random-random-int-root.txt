======= stdin =======
main {
  random_randomInt()
  random_randomInt(-100, 100)
}
======= code =======
#if defined(WIN32) || defined(_WIN32) || defined(__WIN32) || defined(__WIN32__)
  #define THE_OS_WINDOWS
  #define THE_EOL "\r\n"
  #define THE_PATH_SEP "\\"
#else
  #if defined(__APPLE__)
    #define THE_OS_MACOS
  #elif defined(__linux__)
    #define THE_OS_LINUX
  #endif
  #define THE_EOL "\n"
  #define THE_PATH_SEP "/"
#endif

#include <openssl/rand.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

int32_t random_randomInt (unsigned char, int32_t, unsigned char, int32_t);

int32_t random_randomInt (unsigned char o1, int32_t n1, unsigned char o2, int32_t n2) {
  int64_t a = o1 == 0 ? INT32_MIN : n1;
  int64_t b = o2 == 0 ? INT32_MAX : n2;
  unsigned char d[4];
  if (RAND_bytes(d, 4) != 1) {
    fprintf(stderr, "Error: failed to generate random bytes" THE_EOL);
    exit(EXIT_FAILURE);
  }
  uint32_t r = (d[0] << 24) | (d[1] << 16) | (d[2] << 8) | d[3];
  return (int32_t) (a + r / (UINT32_MAX / (b - a + 1) + 1));
}

int main () {
  random_randomInt(0, 0, 0, 0);
  random_randomInt(1, -100, 1, 100);
}
======= flags =======
A:-lssl A:-lcrypto
======= stdout =======
