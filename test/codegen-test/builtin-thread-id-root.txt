======= stdin =======
main {
  thread_id()
}
======= code =======
#if defined(WIN32) || defined(_WIN32) || defined(__WIN32) || defined(__WIN32__)
  #define THE_OS_WINDOWS
  #define THE_EOL "\r\n"
  #define THE_PATH_SEP "\\"
#else
  #if defined(__APPLE__)
    #define THE_OS_MACOS
  #elif defined(__linux__)
    #define THE_OS_LINUX
  #endif
  #define THE_EOL "\n"
  #define THE_PATH_SEP "/"
#endif

#include <stddef.h>
#include <stdint.h>
#ifdef THE_OS_WINDOWS
  #include <windows.h>
#endif
#ifndef THE_OS_WINDOWS
  #include <pthread.h>
  #include <sys/syscall.h>
  #include <unistd.h>
#endif

int32_t thread_id ();

int32_t thread_id () {
  #ifdef THE_OS_WINDOWS
    return (int32_t) GetCurrentThreadId();
  #elif defined(THE_OS_MACOS)
    uint64_t id;
    pthread_threadid_np(NULL, &id);
    return (int32_t) id;
  #else
    return (int32_t) syscall(SYS_gettid);
  #endif
}

int main () {
  thread_id();
}
======= flags =======
U:-pthread
======= stdout =======
