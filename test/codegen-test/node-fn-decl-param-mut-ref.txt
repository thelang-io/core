======= stdin =======
fn test1 (mut a: ref int) ref int {
  a = 2
  return a
}
fn test2 (mut a: ref int, mut b: ref int) ref int {
  b = a;
  a = b;
  return a
}
main {
  mut testInt1 := 1
  mut testInt2 := 2
  test1(ref testInt1)
  test2(ref testInt1, ref testInt2)
}
======= code =======
#include <stdint.h>
#include <stdlib.h>

struct str {
  char *d;
  size_t l;
};

struct error_Error;
struct __THE_1_fn$1000;
struct __THE_1_fn$1000P;
struct __THE_1_fn$1001;
struct __THE_1_fn$1001P;

struct error_Error {
  const struct str __THE_0_message;
  const struct str __THE_0_stack;
};
struct __THE_1_fn$1000 {
  int32_t *(*f) (void *, struct __THE_1_fn$1000P);
  void *x;
  size_t l;
};
struct __THE_1_fn$1000P {
  int32_t *n0;
};
struct __THE_1_fn$1001 {
  int32_t *(*f) (void *, struct __THE_1_fn$1001P);
  void *x;
  size_t l;
};
struct __THE_1_fn$1001P {
  int32_t *n0;
  int32_t *n1;
};

int32_t *__THE_1_test1_0 (void *, struct __THE_1_fn$1000P);
int32_t *__THE_1_test2_0 (void *, struct __THE_1_fn$1001P);

int32_t *__THE_1_test1_0 (void *px, struct __THE_1_fn$1000P p) {
  int32_t *__THE_0_a_0 = p.n0;
  *__THE_0_a_0 = 2;
  return __THE_0_a_0;
}
int32_t *__THE_1_test2_0 (void *px, struct __THE_1_fn$1001P p) {
  int32_t *__THE_0_a_0 = p.n0;
  int32_t *__THE_0_b_0 = p.n1;
  __THE_0_b_0 = __THE_0_a_0;
  __THE_0_a_0 = __THE_0_b_0;
  return __THE_0_a_0;
}

int main () {
  const struct __THE_1_fn$1000 __THE_0_test1_0 = (struct __THE_1_fn$1000) {&__THE_1_test1_0, NULL, 0};
  const struct __THE_1_fn$1001 __THE_0_test2_0 = (struct __THE_1_fn$1001) {&__THE_1_test2_0, NULL, 0};
  int32_t __THE_0_testInt1_0 = 1;
  int32_t __THE_0_testInt2_0 = 2;
  __THE_0_test1_0.f(__THE_0_test1_0.x, (struct __THE_1_fn$1000P) {&__THE_0_testInt1_0});
  __THE_0_test2_0.f(__THE_0_test2_0.x, (struct __THE_1_fn$1001P) {&__THE_0_testInt1_0, &__THE_0_testInt2_0});
}
======= flags =======
======= stdout =======
