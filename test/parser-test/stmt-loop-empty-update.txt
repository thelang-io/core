======= stdin =======
loop i := 0; i < 10; {
}
loop i := 0; i < 10; {
  i++
}
loop i := 0; i < 10; {
  "test"
}
======= stdout =======
<StmtLoop start="1:1" end="2:2">
  <StmtLoopInit>
    <StmtVarDecl start="1:6" end="1:12">
      <StmtVarDeclId>
        <Token type="ID" val="i" start="1:6" end="1:7" />
      </StmtVarDeclId>
      <StmtVarDeclInit>
        <ExprLit start="1:11" end="1:12">
          <Token type="LIT_INT_DEC" val="0" start="1:11" end="1:12" />
        </ExprLit>
      </StmtVarDeclInit>
    </StmtVarDecl>
  </StmtLoopInit>
  <StmtLoopCond>
    <ExprBinary start="1:14" end="1:20">
      <ExprBinaryLeft>
        <ExprAccess start="1:14" end="1:15">
          <Token type="ID" val="i" start="1:14" end="1:15" />
        </ExprAccess>
      </ExprBinaryLeft>
      <ExprBinaryOp>
        <Token type="OP_LT" val="<" start="1:16" end="1:17" />
      </ExprBinaryOp>
      <ExprBinaryRight>
        <ExprLit start="1:18" end="1:20">
          <Token type="LIT_INT_DEC" val="10" start="1:18" end="1:20" />
        </ExprLit>
      </ExprBinaryRight>
    </ExprBinary>
  </StmtLoopCond>
</StmtLoop>
<StmtLoop start="3:1" end="5:2">
  <StmtLoopInit>
    <StmtVarDecl start="3:6" end="3:12">
      <StmtVarDeclId>
        <Token type="ID" val="i" start="3:6" end="3:7" />
      </StmtVarDeclId>
      <StmtVarDeclInit>
        <ExprLit start="3:11" end="3:12">
          <Token type="LIT_INT_DEC" val="0" start="3:11" end="3:12" />
        </ExprLit>
      </StmtVarDeclInit>
    </StmtVarDecl>
  </StmtLoopInit>
  <StmtLoopCond>
    <ExprBinary start="3:14" end="3:20">
      <ExprBinaryLeft>
        <ExprAccess start="3:14" end="3:15">
          <Token type="ID" val="i" start="3:14" end="3:15" />
        </ExprAccess>
      </ExprBinaryLeft>
      <ExprBinaryOp>
        <Token type="OP_LT" val="<" start="3:16" end="3:17" />
      </ExprBinaryOp>
      <ExprBinaryRight>
        <ExprLit start="3:18" end="3:20">
          <Token type="LIT_INT_DEC" val="10" start="3:18" end="3:20" />
        </ExprLit>
      </ExprBinaryRight>
    </ExprBinary>
  </StmtLoopCond>
  <StmtLoopBody>
    <ExprUnary start="4:3" end="4:6">
      <ExprUnaryArg>
        <ExprAccess start="4:3" end="4:4">
          <Token type="ID" val="i" start="4:3" end="4:4" />
        </ExprAccess>
      </ExprUnaryArg>
      <ExprUnaryOp>
        <Token type="OP_PLUS_PLUS" val="++" start="4:4" end="4:6" />
      </ExprUnaryOp>
    </ExprUnary>
  </StmtLoopBody>
</StmtLoop>
<StmtLoop start="6:1" end="8:2">
  <StmtLoopInit>
    <StmtVarDecl start="6:6" end="6:12">
      <StmtVarDeclId>
        <Token type="ID" val="i" start="6:6" end="6:7" />
      </StmtVarDeclId>
      <StmtVarDeclInit>
        <ExprLit start="6:11" end="6:12">
          <Token type="LIT_INT_DEC" val="0" start="6:11" end="6:12" />
        </ExprLit>
      </StmtVarDeclInit>
    </StmtVarDecl>
  </StmtLoopInit>
  <StmtLoopCond>
    <ExprBinary start="6:14" end="6:20">
      <ExprBinaryLeft>
        <ExprAccess start="6:14" end="6:15">
          <Token type="ID" val="i" start="6:14" end="6:15" />
        </ExprAccess>
      </ExprBinaryLeft>
      <ExprBinaryOp>
        <Token type="OP_LT" val="<" start="6:16" end="6:17" />
      </ExprBinaryOp>
      <ExprBinaryRight>
        <ExprLit start="6:18" end="6:20">
          <Token type="LIT_INT_DEC" val="10" start="6:18" end="6:20" />
        </ExprLit>
      </ExprBinaryRight>
    </ExprBinary>
  </StmtLoopCond>
  <StmtLoopBody>
    <ExprLit start="7:3" end="7:9">
      <Token type="LIT_STR" val="\"test\"" start="7:3" end="7:9" />
    </ExprLit>
  </StmtLoopBody>
</StmtLoop>
