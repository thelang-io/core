======= stdin =======
loop mut i := 0; i < 10; {
  i++
}
======= stdout =======
<Stmt start="1:1" end="3:2">
  <StmtLoop>
    <slot name="init">
      <Stmt start="1:6" end="1:16">
        <StmtVarDecl mut="true">
          <slot name="id">
            <Token type="ID" val="i" start="1:10" end="1:11" />
          </slot>
          <slot name="init">
            <StmtExpr parenthesized="false">
              <ExprLit>
                <Token type="LIT_INT_DEC" val="0" start="1:15" end="1:16" />
              </ExprLit>
            </StmtExpr>
          </slot>
        </StmtVarDecl>
      </Stmt>
    </slot>
    <slot name="cond">
      <StmtExpr parenthesized="false">
        <ExprBinary>
          <slot name="left">
            <StmtExpr parenthesized="false">
              <ExprAccess>
                <Token type="ID" val="i" start="1:18" end="1:19" />
              </ExprAccess>
            </StmtExpr>
          </slot>
          <slot name="op">
            <Token type="OP_LT" val="<" start="1:20" end="1:21" />
          </slot>
          <slot name="right">
            <StmtExpr parenthesized="false">
              <ExprLit>
                <Token type="LIT_INT_DEC" val="10" start="1:22" end="1:24" />
              </ExprLit>
            </StmtExpr>
          </slot>
        </ExprBinary>
      </StmtExpr>
    </slot>
    <slot name="body">
      <Stmt start="2:3" end="2:6">
        <StmtExpr parenthesized="false">
          <ExprUnary prefix="false">
            <slot name="arg">
              <StmtExpr parenthesized="false">
                <ExprAccess>
                  <Token type="ID" val="i" start="2:3" end="2:4" />
                </ExprAccess>
              </StmtExpr>
            </slot>
            <slot name="op">
              <Token type="OP_PLUS_PLUS" val="++" start="2:4" end="2:6" />
            </slot>
          </ExprUnary>
        </StmtExpr>
      </Stmt>
    </slot>
  </StmtLoop>
</Stmt>
