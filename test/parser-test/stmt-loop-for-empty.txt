======= stdin =======
loop ;; {
  if i > 10 {
    break
  }

  i++
}
======= stdout =======
<Stmt start="1:1" end="7:2">
  <StmtLoop>
    <slot name="body">
      <Stmt start="2:3" end="4:4">
        <StmtIf>
          <slot name="cond">
            <Stmt start="2:6" end="2:12">
              <StmtExpr parenthesized="false" start="2:6" end="2:12">
                <ExprBinary>
                  <slot name="left">
                    <StmtExpr parenthesized="false" start="2:6" end="2:7">
                      <ExprAccess>
                        <Token type="ID" val="i" start="2:6" end="2:7" />
                      </ExprAccess>
                    </StmtExpr>
                  </slot>
                  <slot name="op">
                    <Token type="OP_GT" val=">" start="2:8" end="2:9" />
                  </slot>
                  <slot name="right">
                    <StmtExpr parenthesized="false" start="2:10" end="2:12">
                      <ExprLit>
                        <Token type="LIT_INT_DEC" val="10" start="2:10" end="2:12" />
                      </ExprLit>
                    </StmtExpr>
                  </slot>
                </ExprBinary>
              </StmtExpr>
            </Stmt>
          </slot>
          <slot name="body">
            <Stmt start="3:5" end="3:10">
              <StmtBreak />
            </Stmt>
          </slot>
        </StmtIf>
      </Stmt>
      <Stmt start="6:3" end="6:6">
        <StmtExpr parenthesized="false" start="6:3" end="6:6">
          <ExprUnary prefix="false">
            <slot name="arg">
              <StmtExpr parenthesized="false" start="6:3" end="6:4">
                <ExprAccess>
                  <Token type="ID" val="i" start="6:3" end="6:4" />
                </ExprAccess>
              </StmtExpr>
            </slot>
            <slot name="op">
              <Token type="OP_PLUS_PLUS" val="++" start="6:4" end="6:6" />
            </slot>
          </ExprUnary>
        </StmtExpr>
      </Stmt>
    </slot>
  </StmtLoop>
</Stmt>
