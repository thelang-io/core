======= stdin =======
loop i / 3 < 20 {
  mut k := 1

  loop k < 10 {
    k *= 2
  }

  i += k
}
======= stdout =======
<StmtLoop start="1:1" end="9:2">
  <StmtLoopCond>
    <ExprBinary start="1:6" end="1:16">
      <ExprBinaryLeft>
        <ExprBinary start="1:6" end="1:11">
          <ExprBinaryLeft>
            <ExprAccess start="1:6" end="1:7">
              <Token type="ID" val="i" start="1:6" end="1:7" />
            </ExprAccess>
          </ExprBinaryLeft>
          <ExprBinaryOp>
            <Token type="OP_SLASH" val="/" start="1:8" end="1:9" />
          </ExprBinaryOp>
          <ExprBinaryRight>
            <ExprLit start="1:10" end="1:11">
              <Token type="LIT_INT_DEC" val="3" start="1:10" end="1:11" />
            </ExprLit>
          </ExprBinaryRight>
        </ExprBinary>
      </ExprBinaryLeft>
      <ExprBinaryOp>
        <Token type="OP_LT" val="<" start="1:12" end="1:13" />
      </ExprBinaryOp>
      <ExprBinaryRight>
        <ExprLit start="1:14" end="1:16">
          <Token type="LIT_INT_DEC" val="20" start="1:14" end="1:16" />
        </ExprLit>
      </ExprBinaryRight>
    </ExprBinary>
  </StmtLoopCond>
  <StmtLoopBody>
    <StmtVarDecl start="2:3" end="2:13" mut>
      <StmtVarDeclId>
        <Token type="ID" val="k" start="2:7" end="2:8" />
      </StmtVarDeclId>
      <StmtVarDeclInit>
        <ExprLit start="2:12" end="2:13">
          <Token type="LIT_INT_DEC" val="1" start="2:12" end="2:13" />
        </ExprLit>
      </StmtVarDeclInit>
    </StmtVarDecl>
    <StmtLoop start="4:3" end="6:4">
      <StmtLoopCond>
        <ExprBinary start="4:8" end="4:14">
          <ExprBinaryLeft>
            <ExprAccess start="4:8" end="4:9">
              <Token type="ID" val="k" start="4:8" end="4:9" />
            </ExprAccess>
          </ExprBinaryLeft>
          <ExprBinaryOp>
            <Token type="OP_LT" val="<" start="4:10" end="4:11" />
          </ExprBinaryOp>
          <ExprBinaryRight>
            <ExprLit start="4:12" end="4:14">
              <Token type="LIT_INT_DEC" val="10" start="4:12" end="4:14" />
            </ExprLit>
          </ExprBinaryRight>
        </ExprBinary>
      </StmtLoopCond>
      <StmtLoopBody>
        <ExprAssign start="5:5" end="5:11">
          <ExprAssignLeft>
            <ExprAccess start="5:5" end="5:6">
              <Token type="ID" val="k" start="5:5" end="5:6" />
            </ExprAccess>
          </ExprAssignLeft>
          <ExprAssignOp>
            <Token type="OP_STAR_EQ" val="*=" start="5:7" end="5:9" />
          </ExprAssignOp>
          <ExprAssignRight>
            <ExprLit start="5:10" end="5:11">
              <Token type="LIT_INT_DEC" val="2" start="5:10" end="5:11" />
            </ExprLit>
          </ExprAssignRight>
        </ExprAssign>
      </StmtLoopBody>
    </StmtLoop>
    <ExprAssign start="8:3" end="8:9">
      <ExprAssignLeft>
        <ExprAccess start="8:3" end="8:4">
          <Token type="ID" val="i" start="8:3" end="8:4" />
        </ExprAccess>
      </ExprAssignLeft>
      <ExprAssignOp>
        <Token type="OP_PLUS_EQ" val="+=" start="8:5" end="8:7" />
      </ExprAssignOp>
      <ExprAssignRight>
        <ExprAccess start="8:8" end="8:9">
          <Token type="ID" val="k" start="8:8" end="8:9" />
        </ExprAccess>
      </ExprAssignRight>
    </ExprAssign>
  </StmtLoopBody>
</StmtLoop>
