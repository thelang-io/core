======= stdin =======
loop ;; i++ {
  if i > 10 {
    break
  }
}
======= stdout =======
<Stmt start="1:1" end="5:2">
  <StmtLoop>
    <slot name="upd">
      <StmtExpr start="1:9" end="1:12">
        <ExprUnary>
          <slot name="arg">
            <StmtExpr start="1:9" end="1:10">
              <ExprAccess>
                <Token type="ID" val="i" start="1:9" end="1:10" />
              </ExprAccess>
            </StmtExpr>
          </slot>
          <slot name="op">
            <Token type="OP_PLUS_PLUS" val="++" start="1:10" end="1:12" />
          </slot>
        </ExprUnary>
      </StmtExpr>
    </slot>
    <slot name="body">
      <Stmt start="2:3" end="4:4">
        <StmtIf>
          <slot name="cond">
            <StmtExpr start="2:6" end="2:12">
              <ExprBinary>
                <slot name="left">
                  <StmtExpr start="2:6" end="2:7">
                    <ExprAccess>
                      <Token type="ID" val="i" start="2:6" end="2:7" />
                    </ExprAccess>
                  </StmtExpr>
                </slot>
                <slot name="op">
                  <Token type="OP_GT" val=">" start="2:8" end="2:9" />
                </slot>
                <slot name="right">
                  <StmtExpr start="2:10" end="2:12">
                    <ExprLit>
                      <Token type="LIT_INT_DEC" val="10" start="2:10" end="2:12" />
                    </ExprLit>
                  </StmtExpr>
                </slot>
              </ExprBinary>
            </StmtExpr>
          </slot>
          <slot name="body">
            <Stmt start="3:5" end="3:10">
              <StmtBreak />
            </Stmt>
          </slot>
        </StmtIf>
      </Stmt>
    </slot>
  </StmtLoop>
</Stmt>
