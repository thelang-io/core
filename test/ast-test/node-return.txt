======= stdin =======
fn test (a: int) any {
  if 1 > 2 {
    return
  }

  return a + 4
}
======= stdout =======
<NodeFnDecl>
  <NodeFnDeclVar>
    <Var name="test" codeName="test_test_0" frame="1">
      <TypeFn name="fn_sFP3intFRanyFE">
        <TypeFnParams>
          <TypeFnParam name="a" required>
            <BuiltinType name="int" />
          </TypeFnParam>
        </TypeFnParams>
        <TypeFnReturnType>
          <BuiltinType name="any" />
        </TypeFnReturnType>
      </TypeFn>
    </Var>
  </NodeFnDeclVar>
  <FnDeclParams>
    <FnDeclParam>
      <FnDeclParamVar>
        <Var name="a" codeName="a_0" frame="2">
          <BuiltinType name="int" />
        </Var>
      </FnDeclParamVar>
    </FnDeclParam>
  </FnDeclParams>
  <NodeFnDeclBody>
    <NodeIf>
      <NodeIfCond>
        <NodeExpr>
          <NodeExprType>
            <BuiltinType name="bool" />
          </NodeExprType>
          <NodeExprBody>
            <ExprBinary op="GT">
              <ExprBinaryLeft>
                <NodeExpr>
                  <NodeExprType>
                    <BuiltinType name="int" />
                  </NodeExprType>
                  <NodeExprBody>
                    <ExprLit type="INT_DEC" value="1" />
                  </NodeExprBody>
                </NodeExpr>
              </ExprBinaryLeft>
              <ExprBinaryRight>
                <NodeExpr>
                  <NodeExprType>
                    <BuiltinType name="int" />
                  </NodeExprType>
                  <NodeExprBody>
                    <ExprLit type="INT_DEC" value="2" />
                  </NodeExprBody>
                </NodeExpr>
              </ExprBinaryRight>
            </ExprBinary>
          </NodeExprBody>
        </NodeExpr>
      </NodeIfCond>
      <NodeIfBody>
        <NodeReturn />
      </NodeIfBody>
    </NodeIf>
    <NodeReturn>
      <NodeExpr>
        <NodeExprType>
          <BuiltinType name="int" />
        </NodeExprType>
        <NodeExprBody>
          <ExprBinary op="ADD">
            <ExprBinaryLeft>
              <NodeExpr>
                <NodeExprType>
                  <BuiltinType name="int" />
                </NodeExprType>
                <NodeExprBody>
                  <ExprAccess>
                    <Var name="a" codeName="a_0" frame="2">
                      <BuiltinType name="int" />
                    </Var>
                  </ExprAccess>
                </NodeExprBody>
              </NodeExpr>
            </ExprBinaryLeft>
            <ExprBinaryRight>
              <NodeExpr>
                <NodeExprType>
                  <BuiltinType name="int" />
                </NodeExprType>
                <NodeExprBody>
                  <ExprLit type="INT_DEC" value="4" />
                </NodeExprBody>
              </NodeExpr>
            </ExprBinaryRight>
          </ExprBinary>
        </NodeExprBody>
      </NodeExpr>
    </NodeReturn>
  </NodeFnDeclBody>
</NodeFnDecl>
